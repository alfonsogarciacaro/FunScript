namespace FunScript.Bindings.Lib

type Global = interface end

type AesGcmEncryptResult = interface end

type Algorithm = interface end

type AlgorithmParameters = interface end

type AnonymousType1 = interface end

type AnonymousType10 = interface end

type AnonymousType100 = interface end

type AnonymousType101 = interface end

type AnonymousType102 = interface end

type AnonymousType103 = interface end

type AnonymousType104 = interface end

type AnonymousType105 = interface end

type AnonymousType106 = interface end

type AnonymousType107 = interface end

type AnonymousType108 = interface end

type AnonymousType109 = interface end

type AnonymousType11 = interface end

type AnonymousType110 = interface end

type AnonymousType111 = interface end

type AnonymousType112 = interface end

type AnonymousType113 = interface end

type AnonymousType114 = interface end

type AnonymousType115 = interface end

type AnonymousType116 = interface end

type AnonymousType117 = interface end

type AnonymousType118 = interface end

type AnonymousType119 = interface end

type AnonymousType12 = interface end

type AnonymousType120 = interface end

type AnonymousType121 = interface end

type AnonymousType122 = interface end

type AnonymousType123 = interface end

type AnonymousType124 = interface end

type AnonymousType125 = interface end

type AnonymousType126 = interface end

type AnonymousType127 = interface end

type AnonymousType128 = interface end

type AnonymousType129 = interface end

type AnonymousType13 = interface end

type AnonymousType130 = interface end

type AnonymousType131 = interface end

type AnonymousType132 = interface end

type AnonymousType133 = interface end

type AnonymousType134 = interface end

type AnonymousType135 = interface end

type AnonymousType136 = interface end

type AnonymousType137 = interface end

type AnonymousType138 = interface end

type AnonymousType139 = interface end

type AnonymousType14 = interface end

type AnonymousType140 = interface end

type AnonymousType141 = interface end

type AnonymousType142 = interface end

type AnonymousType143 = interface end

type AnonymousType144 = interface end

type AnonymousType145 = interface end

type AnonymousType146 = interface end

type AnonymousType147 = interface end

type AnonymousType148 = interface end

type AnonymousType149 = interface end

type AnonymousType15 = interface end

type AnonymousType150 = interface end

type AnonymousType151 = interface end

type AnonymousType152 = interface end

type AnonymousType153 = interface end

type AnonymousType154 = interface end

type AnonymousType155 = interface end

type AnonymousType156 = interface end

type AnonymousType157 = interface end

type AnonymousType158 = interface end

type AnonymousType159 = interface end

type AnonymousType16 = interface end

type AnonymousType160 = interface end

type AnonymousType161 = interface end

type AnonymousType162 = interface end

type AnonymousType163 = interface end

type AnonymousType164 = interface end

type AnonymousType165 = interface end

type AnonymousType166 = interface end

type AnonymousType167 = interface end

type AnonymousType168 = interface end

type AnonymousType169 = interface end

type AnonymousType17 = interface end

type AnonymousType170 = interface end

type AnonymousType171 = interface end

type AnonymousType172 = interface end

type AnonymousType173 = interface end

type AnonymousType174 = interface end

type AnonymousType175 = interface end

type AnonymousType176 = interface end

type AnonymousType177 = interface end

type AnonymousType178 = interface end

type AnonymousType179 = interface end

type AnonymousType18 = interface end

type AnonymousType180 = interface end

type AnonymousType181 = interface end

type AnonymousType182 = interface end

type AnonymousType183 = interface end

type AnonymousType184 = interface end

type AnonymousType185 = interface end

type AnonymousType186 = interface end

type AnonymousType187 = interface end

type AnonymousType188 = interface end

type AnonymousType189 = interface end

type AnonymousType19 = interface end

type AnonymousType190 = interface end

type AnonymousType191 = interface end

type AnonymousType192 = interface end

type AnonymousType193 = interface end

type AnonymousType194 = interface end

type AnonymousType195 = interface end

type AnonymousType196 = interface end

type AnonymousType197 = interface end

type AnonymousType198 = interface end

type AnonymousType199 = interface end

type AnonymousType2 = interface end

type AnonymousType20 = interface end

type AnonymousType200 = interface end

type AnonymousType201 = interface end

type AnonymousType202 = interface end

type AnonymousType203 = interface end

type AnonymousType204 = interface end

type AnonymousType205 = interface end

type AnonymousType206 = interface end

type AnonymousType207 = interface end

type AnonymousType208 = interface end

type AnonymousType209 = interface end

type AnonymousType21 = interface end

type AnonymousType210 = interface end

type AnonymousType211 = interface end

type AnonymousType212 = interface end

type AnonymousType213 = interface end

type AnonymousType214 = interface end

type AnonymousType215 = interface end

type AnonymousType216 = interface end

type AnonymousType217 = interface end

type AnonymousType218 = interface end

type AnonymousType219 = interface end

type AnonymousType22 = interface end

type AnonymousType220 = interface end

type AnonymousType221 = interface end

type AnonymousType222 = interface end

type AnonymousType223 = interface end

type AnonymousType224 = interface end

type AnonymousType225 = interface end

type AnonymousType226 = interface end

type AnonymousType227 = interface end

type AnonymousType228 = interface end

type AnonymousType229 = interface end

type AnonymousType23 = interface end

type AnonymousType230 = interface end

type AnonymousType231 = interface end

type AnonymousType232 = interface end

type AnonymousType233 = interface end

type AnonymousType234 = interface end

type AnonymousType235 = interface end

type AnonymousType236 = interface end

type AnonymousType237 = interface end

type AnonymousType238 = interface end

type AnonymousType239 = interface end

type AnonymousType24 = interface end

type AnonymousType240 = interface end

type AnonymousType241 = interface end

type AnonymousType242 = interface end

type AnonymousType243 = interface end

type AnonymousType244 = interface end

type AnonymousType245 = interface end

type AnonymousType246 = interface end

type AnonymousType247 = interface end

type AnonymousType248 = interface end

type AnonymousType249 = interface end

type AnonymousType25 = interface end

type AnonymousType250 = interface end

type AnonymousType251 = interface end

type AnonymousType252 = interface end

type AnonymousType253 = interface end

type AnonymousType254 = interface end

type AnonymousType255 = interface end

type AnonymousType256 = interface end

type AnonymousType257 = interface end

type AnonymousType258 = interface end

type AnonymousType259 = interface end

type AnonymousType26 = interface end

type AnonymousType260 = interface end

type AnonymousType261 = interface end

type AnonymousType262 = interface end

type AnonymousType263 = interface end

type AnonymousType264 = interface end

type AnonymousType265 = interface end

type AnonymousType266 = interface end

type AnonymousType267 = interface end

type AnonymousType268 = interface end

type AnonymousType269 = interface end

type AnonymousType27 = interface end

type AnonymousType270 = interface end

type AnonymousType271 = interface end

type AnonymousType272 = interface end

type AnonymousType273 = interface end

type AnonymousType274 = interface end

type AnonymousType275 = interface end

type AnonymousType276 = interface end

type AnonymousType277 = interface end

type AnonymousType278 = interface end

type AnonymousType279 = interface end

type AnonymousType28 = interface end

type AnonymousType280 = interface end

type AnonymousType281 = interface end

type AnonymousType282 = interface end

type AnonymousType283 = interface end

type AnonymousType284 = interface end

type AnonymousType285 = interface end

type AnonymousType286 = interface end

type AnonymousType287 = interface end

type AnonymousType288 = interface end

type AnonymousType289 = interface end

type AnonymousType29 = interface end

type AnonymousType290 = interface end

type AnonymousType291 = interface end

type AnonymousType292 = interface end

type AnonymousType293 = interface end

type AnonymousType294 = interface end

type AnonymousType295 = interface end

type AnonymousType296 = interface end

type AnonymousType297 = interface end

type AnonymousType298 = interface end

type AnonymousType299 = interface end

type AnonymousType3 = interface end

type AnonymousType30 = interface end

type AnonymousType300 = interface end

type AnonymousType301 = interface end

type AnonymousType302 = interface end

type AnonymousType303 = interface end

type AnonymousType304 = interface end

type AnonymousType305 = interface end

type AnonymousType306 = interface end

type AnonymousType307 = interface end

type AnonymousType308 = interface end

type AnonymousType309 = interface end

type AnonymousType31 = interface end

type AnonymousType310 = interface end

type AnonymousType311 = interface end

type AnonymousType312 = interface end

type AnonymousType313 = interface end

type AnonymousType314 = interface end

type AnonymousType315 = interface end

type AnonymousType316 = interface end

type AnonymousType317 = interface end

type AnonymousType318 = interface end

type AnonymousType319 = interface end

type AnonymousType32 = interface end

type AnonymousType320 = interface end

type AnonymousType321 = interface end

type AnonymousType322 = interface end

type AnonymousType323 = interface end

type AnonymousType324 = interface end

type AnonymousType325 = interface end

type AnonymousType326 = interface end

type AnonymousType327 = interface end

type AnonymousType328 = interface end

type AnonymousType329 = interface end

type AnonymousType33 = interface end

type AnonymousType330 = interface end

type AnonymousType331 = interface end

type AnonymousType332 = interface end

type AnonymousType333 = interface end

type AnonymousType334 = interface end

type AnonymousType335 = interface end

type AnonymousType336 = interface end

type AnonymousType337 = interface end

type AnonymousType338 = interface end

type AnonymousType339 = interface end

type AnonymousType34 = interface end

type AnonymousType340 = interface end

type AnonymousType341 = interface end

type AnonymousType342 = interface end

type AnonymousType343 = interface end

type AnonymousType344 = interface end

type AnonymousType345 = interface end

type AnonymousType346 = interface end

type AnonymousType347 = interface end

type AnonymousType348 = interface end

type AnonymousType349 = interface end

type AnonymousType35 = interface end

type AnonymousType350 = interface end

type AnonymousType351 = interface end

type AnonymousType352 = interface end

type AnonymousType353 = interface end

type AnonymousType354 = interface end

type AnonymousType355 = interface end

type AnonymousType356 = interface end

type AnonymousType357 = interface end

type AnonymousType358 = interface end

type AnonymousType359 = interface end

type AnonymousType36 = interface end

type AnonymousType360 = interface end

type AnonymousType361 = interface end

type AnonymousType362 = interface end

type AnonymousType363 = interface end

type AnonymousType364 = interface end

type AnonymousType365 = interface end

type AnonymousType366 = interface end

type AnonymousType367 = interface end

type AnonymousType368 = interface end

type AnonymousType369 = interface end

type AnonymousType37 = interface end

type AnonymousType370 = interface end

type AnonymousType371 = interface end

type AnonymousType372 = interface end

type AnonymousType373 = interface end

type AnonymousType374 = interface end

type AnonymousType375 = interface end

type AnonymousType376 = interface end

type AnonymousType377 = interface end

type AnonymousType378 = interface end

type AnonymousType379 = interface end

type AnonymousType38 = interface end

type AnonymousType380 = interface end

type AnonymousType381 = interface end

type AnonymousType382 = interface end

type AnonymousType383 = interface end

type AnonymousType384 = interface end

type AnonymousType385 = interface end

type AnonymousType386 = interface end

type AnonymousType387 = interface end

type AnonymousType388 = interface end

type AnonymousType389 = interface end

type AnonymousType39 = interface end

type AnonymousType390 = interface end

type AnonymousType391 = interface end

type AnonymousType392 = interface end

type AnonymousType393 = interface end

type AnonymousType394 = interface end

type AnonymousType395 = interface end

type AnonymousType396 = interface end

type AnonymousType397 = interface end

type AnonymousType398 = interface end

type AnonymousType399 = interface end

type AnonymousType4 = interface end

type AnonymousType40 = interface end

type AnonymousType400 = interface end

type AnonymousType401 = interface end

type AnonymousType402 = interface end

type AnonymousType403 = interface end

type AnonymousType404 = interface end

type AnonymousType405 = interface end

type AnonymousType406 = interface end

type AnonymousType407 = interface end

type AnonymousType408 = interface end

type AnonymousType409 = interface end

type AnonymousType41 = interface end

type AnonymousType410 = interface end

type AnonymousType411 = interface end

type AnonymousType412 = interface end

type AnonymousType413 = interface end

type AnonymousType414 = interface end

type AnonymousType415 = interface end

type AnonymousType416 = interface end

type AnonymousType417 = interface end

type AnonymousType418 = interface end

type AnonymousType419 = interface end

type AnonymousType42 = interface end

type AnonymousType420 = interface end

type AnonymousType421 = interface end

type AnonymousType422 = interface end

type AnonymousType423 = interface end

type AnonymousType424 = interface end

type AnonymousType425 = interface end

type AnonymousType426 = interface end

type AnonymousType427 = interface end

type AnonymousType428 = interface end

type AnonymousType429 = interface end

type AnonymousType43 = interface end

type AnonymousType430 = interface end

type AnonymousType431 = interface end

type AnonymousType432 = interface end

type AnonymousType433 = interface end

type AnonymousType434 = interface end

type AnonymousType435 = interface end

type AnonymousType436 = interface end

type AnonymousType437 = interface end

type AnonymousType438 = interface end

type AnonymousType439 = interface end

type AnonymousType44 = interface end

type AnonymousType440 = interface end

type AnonymousType45 = interface end

type AnonymousType46 = interface end

type AnonymousType47 = interface end

type AnonymousType48 = interface end

type AnonymousType49 = interface end

type AnonymousType5 = interface end

type AnonymousType50 = interface end

type AnonymousType51 = interface end

type AnonymousType52 = interface end

type AnonymousType53 = interface end

type AnonymousType54 = interface end

type AnonymousType55 = interface end

type AnonymousType56 = interface end

type AnonymousType57 = interface end

type AnonymousType58 = interface end

type AnonymousType59 = interface end

type AnonymousType6 = interface end

type AnonymousType60 = interface end

type AnonymousType61 = interface end

type AnonymousType62 = interface end

type AnonymousType63 = interface end

type AnonymousType64 = interface end

type AnonymousType65 = interface end

type AnonymousType66 = interface end

type AnonymousType67 = interface end

type AnonymousType68 = interface end

type AnonymousType69 = interface end

type AnonymousType7 = interface end

type AnonymousType70 = interface end

type AnonymousType71 = interface end

type AnonymousType72 = interface end

type AnonymousType73 = interface end

type AnonymousType74 = interface end

type AnonymousType75 = interface end

type AnonymousType76 = interface end

type AnonymousType77 = interface end

type AnonymousType78 = interface end

type AnonymousType79 = interface end

type AnonymousType8 = interface end

type AnonymousType80 = interface end

type AnonymousType81 = interface end

type AnonymousType82 = interface end

type AnonymousType83 = interface end

type AnonymousType84 = interface end

type AnonymousType85 = interface end

type AnonymousType86 = interface end

type AnonymousType87 = interface end

type AnonymousType88 = interface end

type AnonymousType89 = interface end

type AnonymousType9 = interface end

type AnonymousType90 = interface end

type AnonymousType91 = interface end

type AnonymousType92 = interface end

type AnonymousType93 = interface end

type AnonymousType94 = interface end

type AnonymousType95 = interface end

type AnonymousType96 = interface end

type AnonymousType97 = interface end

type AnonymousType98 = interface end

type AnonymousType99 = interface end

type ArrayBuffer = interface end

type ArrayBufferView = interface end

type AudioTrack = interface end

type Blob = interface end

type BlobPropertyBag = interface end

type BookmarkCollection = interface end

type Boolean = interface end

type CSSRule = interface end

type CSSRuleList = interface end

type CSSStyleDeclaration = interface end

type CanvasGradient = interface end

type CanvasPattern = interface end

type CanvasRenderingContext2D = interface end

type ClientRect = interface end

type ClientRectList = interface end

type Collator = interface end

type CollatorOptions = interface end

type Console = interface end

type ControlRangeCollection = interface end

type Coordinates = interface end

type DOMError = interface end

type DOMException = interface end

type DOMImplementation = interface end

type DOML2DeprecatedAlignmentStyle = interface end

type DOML2DeprecatedBackgroundColorStyle = interface end

type DOML2DeprecatedBackgroundStyle = interface end

type DOML2DeprecatedBorderStyle = interface end

type DOML2DeprecatedColorProperty = interface end

type DOML2DeprecatedListNumberingAndBulletStyle = interface end

type DOML2DeprecatedListSpaceReduction = interface end

type DOML2DeprecatedMarginStyle = interface end

type DOML2DeprecatedSizeProperty = interface end

type DOML2DeprecatedTextFlowControl = interface end

type DOMParser = interface end

type DOMStringList = interface end

type DOMStringMap = interface end

type DOMTokenList = interface end

type DataTransfer = interface end

type Date = interface end

type DateTimeFormat = interface end

type DateTimeFormatOptions = interface end

type DeviceAcceleration = interface end

type DeviceAccelerationDict = interface end

type DeviceRotationRate = interface end

type DeviceRotationRateDict = interface end

type DocumentEvent = interface end

type EXT_texture_filter_anisotropic = interface end

type ElementCSSInlineStyle = interface end

type ElementTraversal = interface end

type Error = interface end

type ErrorEventHandler = interface end

type Event = interface end

type EventException = interface end

type EventListener = interface end

type EventTarget = interface end

type ExceptionInformation = interface end

type External = interface end

type FileList = interface end

type FormData = interface end

type FrameRequestCallback = interface end

type FrameRequestCallbackDelegate = delegate of float -> unit

type Function = interface end

type Geolocation = interface end

type GetSVGDocument = interface end

type GlobalEventHandlers = interface end

type HTMLTableAlignment = interface end

type History = interface end

type IArguments = interface end

type IDBCursor = interface end

type IDBEnvironment = interface end

type IDBFactory = interface end

type IDBIndex = interface end

type IDBKeyRange = interface end

type IDBObjectStore = interface end

type ITextWriter = interface end

type ImageData = interface end

type JSON = interface end

type Key = interface end

type KeyPair = interface end

type LinkStyle = interface end

type Location = interface end

type MSApp = interface end

type MSAppView = interface end

type MSBehaviorUrnsCollection = interface end

type MSBlobBuilder = interface end

type MSCSSMatrix = interface end

type MSCSSRuleList = interface end

type MSCompatibleInfo = interface end

type MSCompatibleInfoCollection = interface end

type MSDataBindingExtensions = interface end

type MSDataBindingRecordSetExtensions = interface end

type MSDataBindingRecordSetReadonlyExtensions = interface end

type MSDataBindingTableExtensions = interface end

type MSDocumentExtensions = interface end

type MSEventAttachmentTarget = interface end

type MSExecAtPriorityFunctionCallback = interface end

type MSFileSaver = interface end

type MSGesture = interface end

type MSGraphicsTrust = interface end

type MSHTMLCollectionExtensions = interface end

type MSImageResourceExtensions = interface end

type MSLaunchUriCallback = interface end

type MSLaunchUriCallbackDelegate = delegate of unit -> unit

type MSMediaKeyError = interface end

type MSMediaKeys = interface end

type MSMimeTypesCollection = interface end

type MSNamespaceInfoCollection = interface end

type MSNavigatorDoNotTrack = interface end

type MSNavigatorExtensions = interface end

type MSNodeExtensions = interface end

type MSPluginsCollection = interface end

type MSPopupWindow = interface end

type MSRangeCollection = interface end

type MSResourceMetadata = interface end

type MSScriptHost = interface end

type MSSelection = interface end

type MSStorageExtensions = interface end

type MSStream = interface end

type MSUnsafeFunctionCallback = interface end

type MSUnsafeFunctionCallbackDelegate = delegate of unit -> obj

type MSWindowExtensions = interface end

type MSWindowModeless = interface end

type Map<'K, 'V> = interface end

type Math = interface end

type MediaError = interface end

type MediaList = interface end

type MediaQueryList = interface end

type MediaQueryListListener = interface end

type MessageChannel = interface end

type MimeType = interface end

type MimeTypeArray = interface end

type MouseEventInit = interface end

type MsZoomToOptions = interface end

type MutationCallback = interface end

type MutationObserver = interface end

type MutationObserverInit = interface end

type MutationRecord = interface end

type NamedNodeMap = interface end

type NavigatorContentUtils = interface end

type NavigatorGeolocation = interface end

type NavigatorID = interface end

type NavigatorOnLine = interface end

type NavigatorStorageUtils = interface end

type NodeFilter = interface end

type NodeIterator = interface end

type NodeList = interface end

type NodeSelector = interface end

type Number = interface end

type NumberFormat = interface end

type NumberFormatOptions = interface end

type OES_standard_derivatives = interface end

type OES_texture_float = interface end

type OES_texture_float_linear = interface end

type Object = interface end

type ObjectURLOptions = interface end

type PerfWidgetExternal = interface end

type Performance = interface end

type PerformanceEntry = interface end

type PerformanceNavigation = interface end

type PerformanceTiming = interface end

type Plugin = interface end

type PluginArray = interface end

type Position = interface end

type PositionCallback = interface end

type PositionError = interface end

type PositionErrorCallback = interface end

type PositionOptions = interface end

type PropertyDescriptor = interface end

type PropertyDescriptorMap = interface end

type RandomSource = interface end

type Range = interface end

type RangeException = interface end

type RegExp = interface end

type RegExpExecArray =
        inherit System.Collections.Generic.IList<string>

type RegExpMatchArray =
        inherit System.Collections.Generic.IList<string>

type ResolvedCollatorOptions = interface end

type ResolvedDateTimeFormatOptions = interface end

type ResolvedNumberFormatOptions = interface end

type SVGAngle = interface end

type SVGAnimatedAngle = interface end

type SVGAnimatedBoolean = interface end

type SVGAnimatedEnumeration = interface end

type SVGAnimatedInteger = interface end

type SVGAnimatedLength = interface end

type SVGAnimatedLengthList = interface end

type SVGAnimatedNumber = interface end

type SVGAnimatedNumberList = interface end

type SVGAnimatedPathData = interface end

type SVGAnimatedPoints = interface end

type SVGAnimatedPreserveAspectRatio = interface end

type SVGAnimatedRect = interface end

type SVGAnimatedString = interface end

type SVGAnimatedTransformList = interface end

type SVGElementInstanceList = interface end

type SVGException = interface end

type SVGExternalResourcesRequired = interface end

type SVGFitToViewBox = interface end

type SVGLangSpace = interface end

type SVGLength = interface end

type SVGLengthList = interface end

type SVGLocatable = interface end

type SVGMatrix = interface end

type SVGNumber = interface end

type SVGNumberList = interface end

type SVGPathSeg = interface end

type SVGPathSegList = interface end

type SVGPoint = interface end

type SVGPointList = interface end

type SVGPreserveAspectRatio = interface end

type SVGRect = interface end

type SVGStringList = interface end

type SVGStylable = interface end

type SVGTests = interface end

type SVGTransform = interface end

type SVGTransformList = interface end

type SVGURIReference = interface end

type SVGUnitTypes = interface end

type SVGZoomAndPan = interface end

type Selection = interface end

type Set<'T> = interface end

type String = interface end

type StyleMedia = interface end

type StyleSheet = interface end

type StyleSheetList = interface end

type StyleSheetPageList = interface end

type SubtleCrypto = interface end

type TextMetrics = interface end

type TextRange = interface end

type TextRangeCollection = interface end

type TextTrackCueList = interface end

type TimeRanges = interface end

type TreeWalker = interface end

type URL = interface end

type ValidityState = interface end

type VideoPlaybackQuality = interface end

type WEBGL_compressed_texture_s3tc = interface end

type WeakMap<'K, 'V> = interface end

type WebGLActiveInfo = interface end

type WebGLContextAttributes = interface end

type WebGLObject = interface end

type WebGLRenderingContext = interface end

type WebGLShaderPrecisionFormat = interface end

type WebGLUniformLocation = interface end

type WindowBase64 = interface end

type WindowConsole = interface end

type WindowLocalStorage = interface end

type WindowModal = interface end

type WindowSessionStorage = interface end

type WindowTimersExtension = interface end

type XDomainRequest = interface end

type XMLSerializer = interface end

type AbstractWorker =
        inherit EventTarget

type AnimationEvent =
        inherit Event

type ApplicationCache =
        inherit EventTarget

type AudioTrackList =
        inherit EventTarget

type BeforeUnloadEvent =
        inherit Event

type CSSFontFaceRule =
        inherit CSSRule

type CSSImportRule =
        inherit CSSRule

type CSSKeyframeRule =
        inherit CSSRule

type CSSKeyframesRule =
        inherit CSSRule

type CSSMediaRule =
        inherit CSSRule

type CSSNamespaceRule =
        inherit CSSRule

type CSSPageRule =
        inherit CSSRule

type CSSStyleRule =
        inherit CSSRule

type CSSStyleSheet =
        inherit StyleSheet

type CloseEvent =
        inherit Event

type ConfirmSiteSpecificExceptionsInformation =
        inherit ExceptionInformation

type Crypto =
        inherit RandomSource

type CryptoOperation =
        inherit EventTarget

type CustomEvent =
        inherit Event

type DOMSettableTokenList =
        inherit DOMTokenList

type DataView =
        inherit ArrayBufferView

type DeviceMotionEvent =
        inherit Event

type DeviceOrientationEvent =
        inherit Event

type ErrorEvent =
        inherit Event

type ErrorEventHandlerDelegate = delegate of Event * string * float * float -> unit

type EvalError =
        inherit Error

type EventListenerDelegate = delegate of Event -> unit

type File =
        inherit Blob

type Float32Array =
        inherit ArrayBufferView

type Float64Array =
        inherit ArrayBufferView

type HTMLCollection =
        inherit MSHTMLCollectionExtensions

type IDBCursorWithValue =
        inherit IDBCursor

type IDBDatabase =
        inherit EventTarget

type IDBRequest =
        inherit EventTarget

type IDBTransaction =
        inherit EventTarget

type IDBVersionChangeEvent =
        inherit Event

type Int16Array =
        inherit ArrayBufferView

type Int32Array =
        inherit ArrayBufferView

type Int8Array =
        inherit ArrayBufferView

type Intl = interface end

type KeyOperation =
        inherit EventTarget

type LongRunningScriptDetectedEvent =
        inherit Event

type MSBaseReader =
        inherit EventTarget

type MSCSSProperties =
        inherit CSSStyleDeclaration

type MSEventObj =
        inherit Event

type MSInputMethodContext =
        inherit EventTarget

type MSMediaKeyMessageEvent =
        inherit Event

type MSMediaKeyNeededEvent =
        inherit Event

type MSMediaKeySession =
        inherit EventTarget

type MSNamespaceInfo =
        inherit MSEventAttachmentTarget

type MSSiteModeEvent =
        inherit Event

type MSWebViewAsyncOperation =
        inherit EventTarget

type MediaQueryListListenerDelegate = delegate of MediaQueryList -> unit

type MediaSource =
        inherit EventTarget

type MessageEvent =
        inherit Event

type MessagePort =
        inherit EventTarget

type MutationCallbackDelegate = delegate of array<MutationRecord> * MutationObserver -> unit

type MutationEvent =
        inherit Event

type NavigationEvent =
        inherit Event

type Navigator =
        inherit NavigatorID
        inherit NavigatorOnLine
        inherit NavigatorContentUtils
        inherit MSNavigatorExtensions
        inherit NavigatorGeolocation
        inherit MSNavigatorDoNotTrack
        inherit NavigatorStorageUtils
        inherit MSFileSaver

type Node =
        inherit EventTarget

type PageTransitionEvent =
        inherit Event

type PerformanceMark =
        inherit PerformanceEntry

type PerformanceMeasure =
        inherit PerformanceEntry

type PerformanceNavigationTiming =
        inherit PerformanceEntry

type PerformanceResourceTiming =
        inherit PerformanceEntry

type PointerEventInit =
        inherit MouseEventInit

type PopStateEvent =
        inherit Event

type PositionCallbackDelegate = delegate of Position -> unit

type PositionErrorCallbackDelegate = delegate of PositionError -> unit

type ProgressEvent =
        inherit Event

type RangeError =
        inherit Error

type ReferenceError =
        inherit Error

type SVGElementInstance =
        inherit EventTarget

type SVGFilterPrimitiveStandardAttributes =
        inherit SVGStylable

type SVGPathSegArcAbs =
        inherit SVGPathSeg

type SVGPathSegArcRel =
        inherit SVGPathSeg

type SVGPathSegClosePath =
        inherit SVGPathSeg

type SVGPathSegCurvetoCubicAbs =
        inherit SVGPathSeg

type SVGPathSegCurvetoCubicRel =
        inherit SVGPathSeg

type SVGPathSegCurvetoCubicSmoothAbs =
        inherit SVGPathSeg

type SVGPathSegCurvetoCubicSmoothRel =
        inherit SVGPathSeg

type SVGPathSegCurvetoQuadraticAbs =
        inherit SVGPathSeg

type SVGPathSegCurvetoQuadraticRel =
        inherit SVGPathSeg

type SVGPathSegCurvetoQuadraticSmoothAbs =
        inherit SVGPathSeg

type SVGPathSegCurvetoQuadraticSmoothRel =
        inherit SVGPathSeg

type SVGPathSegLinetoAbs =
        inherit SVGPathSeg

type SVGPathSegLinetoHorizontalAbs =
        inherit SVGPathSeg

type SVGPathSegLinetoHorizontalRel =
        inherit SVGPathSeg

type SVGPathSegLinetoRel =
        inherit SVGPathSeg

type SVGPathSegLinetoVerticalAbs =
        inherit SVGPathSeg

type SVGPathSegLinetoVerticalRel =
        inherit SVGPathSeg

type SVGPathSegMovetoAbs =
        inherit SVGPathSeg

type SVGPathSegMovetoRel =
        inherit SVGPathSeg

type SVGTransformable =
        inherit SVGLocatable

type Screen =
        inherit EventTarget

type ScriptNotifyEvent =
        inherit Event

type SourceBuffer =
        inherit EventTarget

type SourceBufferList =
        inherit EventTarget

type Storage =
        inherit MSStorageExtensions

type StorageEvent =
        inherit Event

type StoreExceptionsInformation =
        inherit ExceptionInformation

type SyntaxError =
        inherit Error

type TextTrack =
        inherit EventTarget

type TextTrackCue =
        inherit EventTarget

type TextTrackList =
        inherit EventTarget

type TrackEvent =
        inherit Event

type TransitionEvent =
        inherit Event

type TypeError =
        inherit Error

type UIEvent =
        inherit Event

type URIError =
        inherit Error

type Uint16Array =
        inherit ArrayBufferView

type Uint32Array =
        inherit ArrayBufferView

type Uint8Array =
        inherit ArrayBufferView

type WebGLBuffer =
        inherit WebGLObject

type WebGLContextEvent =
        inherit Event

type WebGLFramebuffer =
        inherit WebGLObject

type WebGLProgram =
        inherit WebGLObject

type WebGLRenderbuffer =
        inherit WebGLObject

type WebGLShader =
        inherit WebGLObject

type WebGLTexture =
        inherit WebGLObject

type WebSocket =
        inherit EventTarget

type WindowTimers =
        inherit WindowTimersExtension

type XMLHttpRequest =
        inherit EventTarget

type XMLHttpRequestEventTarget =
        inherit EventTarget

type Attr =
        inherit Node

type CharacterData =
        inherit Node

type CompositionEvent =
        inherit UIEvent

type Document =
        inherit Node
        inherit NodeSelector
        inherit MSEventAttachmentTarget
        inherit DocumentEvent
        inherit MSResourceMetadata
        inherit MSNodeExtensions
        inherit MSDocumentExtensions
        inherit GlobalEventHandlers

type DocumentFragment =
        inherit Node
        inherit NodeSelector
        inherit MSEventAttachmentTarget
        inherit MSNodeExtensions

type DocumentType =
        inherit Node

type Element =
        inherit Node
        inherit NodeSelector
        inherit ElementTraversal
        inherit GlobalEventHandlers

type FileReader =
        inherit MSBaseReader

type FocusEvent =
        inherit UIEvent

type HTMLAllCollection =
        inherit HTMLCollection

type HTMLAreasCollection =
        inherit HTMLCollection

type IDBOpenDBRequest =
        inherit IDBRequest

type KeyboardEvent =
        inherit UIEvent

type MSCurrentStyleCSSProperties =
        inherit MSCSSProperties

type MSGestureEvent =
        inherit UIEvent

type MSManipulationEvent =
        inherit UIEvent

type MSStreamReader =
        inherit MSBaseReader

type MSStyleCSSProperties =
        inherit MSCSSProperties

type MouseEvent =
        inherit UIEvent

type NavigationCompletedEvent =
        inherit NavigationEvent

type NodeListOf<'TNode when 'TNode :> Node> =
        inherit NodeList

type ProcessingInstruction =
        inherit Node

type SVGZoomEvent =
        inherit UIEvent

type StoreSiteSpecificExceptionsInformation =
        inherit StoreExceptionsInformation

type TextEvent =
        inherit UIEvent

type UnviewableContentIdentifiedEvent =
        inherit NavigationEvent

type Window =
        inherit EventTarget
        inherit MSEventAttachmentTarget
        inherit WindowLocalStorage
        inherit MSWindowExtensions
        inherit WindowSessionStorage
        inherit WindowTimers
        inherit WindowBase64
        inherit IDBEnvironment
        inherit WindowConsole
        inherit GlobalEventHandlers

type Worker =
        inherit AbstractWorker

type Comment =
        inherit CharacterData

type DragEvent =
        inherit MouseEvent

type HTMLDocument =
        inherit Document

type HTMLElement =
        inherit Element
        inherit ElementCSSInlineStyle
        inherit MSEventAttachmentTarget
        inherit MSNodeExtensions

type MSPointerEvent =
        inherit MouseEvent

type MouseWheelEvent =
        inherit MouseEvent

type PointerEvent =
        inherit MouseEvent

type SVGElement =
        inherit Element

type Text =
        inherit CharacterData
        inherit MSNodeExtensions

type WheelEvent =
        inherit MouseEvent

type XMLDocument =
        inherit Document

type CDATASection =
        inherit Text

type HTMLAnchorElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLAppletElement =
        inherit HTMLElement
        inherit DOML2DeprecatedMarginStyle
        inherit DOML2DeprecatedBorderStyle
        inherit DOML2DeprecatedAlignmentStyle
        inherit MSDataBindingExtensions
        inherit MSDataBindingRecordSetExtensions

type HTMLAreaElement =
        inherit HTMLElement

type HTMLBGSoundElement =
        inherit HTMLElement

type HTMLBRElement =
        inherit HTMLElement

type HTMLBaseElement =
        inherit HTMLElement

type HTMLBaseFontElement =
        inherit HTMLElement
        inherit DOML2DeprecatedColorProperty

type HTMLBlockElement =
        inherit HTMLElement
        inherit DOML2DeprecatedTextFlowControl

type HTMLBodyElement =
        inherit HTMLElement
        inherit DOML2DeprecatedBackgroundStyle
        inherit DOML2DeprecatedBackgroundColorStyle

type HTMLButtonElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLCanvasElement =
        inherit HTMLElement

type HTMLDDElement =
        inherit HTMLElement

type HTMLDListElement =
        inherit HTMLElement
        inherit DOML2DeprecatedListSpaceReduction

type HTMLDTElement =
        inherit HTMLElement

type HTMLDataListElement =
        inherit HTMLElement

type HTMLDirectoryElement =
        inherit HTMLElement
        inherit DOML2DeprecatedListSpaceReduction
        inherit DOML2DeprecatedListNumberingAndBulletStyle

type HTMLDivElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLEmbedElement =
        inherit HTMLElement
        inherit GetSVGDocument

type HTMLFieldSetElement =
        inherit HTMLElement

type HTMLFontElement =
        inherit HTMLElement
        inherit DOML2DeprecatedColorProperty
        inherit DOML2DeprecatedSizeProperty

type HTMLFormElement =
        inherit HTMLElement
        inherit MSHTMLCollectionExtensions

type HTMLFrameElement =
        inherit HTMLElement
        inherit GetSVGDocument
        inherit MSDataBindingExtensions

type HTMLFrameSetElement =
        inherit HTMLElement

type HTMLHRElement =
        inherit HTMLElement
        inherit DOML2DeprecatedColorProperty
        inherit DOML2DeprecatedSizeProperty

type HTMLHeadElement =
        inherit HTMLElement

type HTMLHeadingElement =
        inherit HTMLElement
        inherit DOML2DeprecatedTextFlowControl

type HTMLHtmlElement =
        inherit HTMLElement

type HTMLIFrameElement =
        inherit HTMLElement
        inherit GetSVGDocument
        inherit MSDataBindingExtensions

type HTMLImageElement =
        inherit HTMLElement
        inherit MSImageResourceExtensions
        inherit MSDataBindingExtensions
        inherit MSResourceMetadata

type HTMLInputElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLIsIndexElement =
        inherit HTMLElement

type HTMLLIElement =
        inherit HTMLElement
        inherit DOML2DeprecatedListNumberingAndBulletStyle

type HTMLLabelElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLLegendElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLLinkElement =
        inherit HTMLElement
        inherit LinkStyle

type HTMLMapElement =
        inherit HTMLElement

type HTMLMarqueeElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions
        inherit DOML2DeprecatedBackgroundColorStyle

type HTMLMediaElement =
        inherit HTMLElement

type HTMLMenuElement =
        inherit HTMLElement
        inherit DOML2DeprecatedListSpaceReduction

type HTMLMetaElement =
        inherit HTMLElement

type HTMLModElement =
        inherit HTMLElement

type HTMLNextIdElement =
        inherit HTMLElement

type HTMLOListElement =
        inherit HTMLElement
        inherit DOML2DeprecatedListSpaceReduction
        inherit DOML2DeprecatedListNumberingAndBulletStyle

type HTMLObjectElement =
        inherit HTMLElement
        inherit GetSVGDocument
        inherit DOML2DeprecatedMarginStyle
        inherit DOML2DeprecatedBorderStyle
        inherit DOML2DeprecatedAlignmentStyle
        inherit MSDataBindingExtensions
        inherit MSDataBindingRecordSetExtensions

type HTMLOptGroupElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLOptionElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLParagraphElement =
        inherit HTMLElement
        inherit DOML2DeprecatedTextFlowControl

type HTMLParamElement =
        inherit HTMLElement

type HTMLPhraseElement =
        inherit HTMLElement

type HTMLPreElement =
        inherit HTMLElement
        inherit DOML2DeprecatedTextFlowControl

type HTMLProgressElement =
        inherit HTMLElement

type HTMLQuoteElement =
        inherit HTMLElement

type HTMLScriptElement =
        inherit HTMLElement

type HTMLSelectElement =
        inherit HTMLElement
        inherit MSHTMLCollectionExtensions
        inherit MSDataBindingExtensions

type HTMLSourceElement =
        inherit HTMLElement

type HTMLSpanElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLStyleElement =
        inherit HTMLElement
        inherit LinkStyle

type HTMLTableCaptionElement =
        inherit HTMLElement

type HTMLTableCellElement =
        inherit HTMLElement
        inherit HTMLTableAlignment
        inherit DOML2DeprecatedBackgroundStyle
        inherit DOML2DeprecatedBackgroundColorStyle

type HTMLTableColElement =
        inherit HTMLElement
        inherit HTMLTableAlignment

type HTMLTableElement =
        inherit HTMLElement
        inherit MSDataBindingTableExtensions
        inherit MSDataBindingExtensions
        inherit DOML2DeprecatedBackgroundStyle
        inherit DOML2DeprecatedBackgroundColorStyle

type HTMLTableRowElement =
        inherit HTMLElement
        inherit HTMLTableAlignment
        inherit DOML2DeprecatedBackgroundColorStyle

type HTMLTableSectionElement =
        inherit HTMLElement
        inherit HTMLTableAlignment
        inherit DOML2DeprecatedBackgroundColorStyle

type HTMLTextAreaElement =
        inherit HTMLElement
        inherit MSDataBindingExtensions

type HTMLTitleElement =
        inherit HTMLElement

type HTMLTrackElement =
        inherit HTMLElement

type HTMLUListElement =
        inherit HTMLElement
        inherit DOML2DeprecatedListSpaceReduction
        inherit DOML2DeprecatedListNumberingAndBulletStyle

type HTMLUnknownElement =
        inherit HTMLElement
        inherit MSDataBindingRecordSetReadonlyExtensions

type MSHTMLWebViewElement =
        inherit HTMLElement

type SVGAElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired
        inherit SVGURIReference

type SVGCircleElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGClipPathElement =
        inherit SVGElement
        inherit SVGUnitTypes
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGComponentTransferFunctionElement =
        inherit SVGElement

type SVGDefsElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGDescElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGLangSpace

type SVGEllipseElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGFEBlendElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEColorMatrixElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEComponentTransferElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFECompositeElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEConvolveMatrixElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEDiffuseLightingElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEDisplacementMapElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEDistantLightElement =
        inherit SVGElement

type SVGFEFloodElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEGaussianBlurElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEImageElement =
        inherit SVGElement
        inherit SVGLangSpace
        inherit SVGFilterPrimitiveStandardAttributes
        inherit SVGURIReference
        inherit SVGExternalResourcesRequired

type SVGFEMergeElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEMergeNodeElement =
        inherit SVGElement

type SVGFEMorphologyElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEOffsetElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFEPointLightElement =
        inherit SVGElement

type SVGFESpecularLightingElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFESpotLightElement =
        inherit SVGElement

type SVGFETileElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFETurbulenceElement =
        inherit SVGElement
        inherit SVGFilterPrimitiveStandardAttributes

type SVGFilterElement =
        inherit SVGElement
        inherit SVGUnitTypes
        inherit SVGStylable
        inherit SVGLangSpace
        inherit SVGURIReference
        inherit SVGExternalResourcesRequired

type SVGGElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGGradientElement =
        inherit SVGElement
        inherit SVGUnitTypes
        inherit SVGStylable
        inherit SVGExternalResourcesRequired
        inherit SVGURIReference

type SVGImageElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired
        inherit SVGURIReference

type SVGLineElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGMarkerElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGLangSpace
        inherit SVGFitToViewBox
        inherit SVGExternalResourcesRequired

type SVGMaskElement =
        inherit SVGElement
        inherit SVGUnitTypes
        inherit SVGStylable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGMetadataElement =
        inherit SVGElement

type SVGPathElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGAnimatedPathData
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGPatternElement =
        inherit SVGElement
        inherit SVGUnitTypes
        inherit SVGStylable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGFitToViewBox
        inherit SVGExternalResourcesRequired
        inherit SVGURIReference

type SVGPolygonElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGAnimatedPoints
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGPolylineElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGAnimatedPoints
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGRectElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGSVGElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGZoomAndPan
        inherit DocumentEvent
        inherit SVGLangSpace
        inherit SVGLocatable
        inherit SVGTests
        inherit SVGFitToViewBox
        inherit SVGExternalResourcesRequired

type SVGScriptElement =
        inherit SVGElement
        inherit SVGExternalResourcesRequired
        inherit SVGURIReference

type SVGStopElement =
        inherit SVGElement
        inherit SVGStylable

type SVGStyleElement =
        inherit SVGElement
        inherit SVGLangSpace

type SVGSwitchElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGSymbolElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGLangSpace
        inherit SVGFitToViewBox
        inherit SVGExternalResourcesRequired

type SVGTextContentElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired

type SVGTitleElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGLangSpace

type SVGUseElement =
        inherit SVGElement
        inherit SVGStylable
        inherit SVGTransformable
        inherit SVGLangSpace
        inherit SVGTests
        inherit SVGExternalResourcesRequired
        inherit SVGURIReference

type SVGViewElement =
        inherit SVGElement
        inherit SVGZoomAndPan
        inherit SVGFitToViewBox
        inherit SVGExternalResourcesRequired

type HTMLAudioElement =
        inherit HTMLMediaElement

type HTMLTableDataCellElement =
        inherit HTMLTableCellElement

type HTMLTableHeaderCellElement =
        inherit HTMLTableCellElement

type HTMLVideoElement =
        inherit HTMLMediaElement

type SVGFEFuncAElement =
        inherit SVGComponentTransferFunctionElement

type SVGFEFuncBElement =
        inherit SVGComponentTransferFunctionElement

type SVGFEFuncGElement =
        inherit SVGComponentTransferFunctionElement

type SVGFEFuncRElement =
        inherit SVGComponentTransferFunctionElement

type SVGLinearGradientElement =
        inherit SVGGradientElement

type SVGRadialGradientElement =
        inherit SVGGradientElement

type SVGTextPathElement =
        inherit SVGTextContentElement
        inherit SVGURIReference

type SVGTextPositioningElement =
        inherit SVGTextContentElement

type SVGTSpanElement =
        inherit SVGTextPositioningElement

type SVGTextElement =
        inherit SVGTextPositioningElement
        inherit SVGTransformable



[<AutoOpen>]
module TypeExtensions_Lib =

    type Global with 

            [<FunScript.JSEmitInline("(NaN)"); CompiledName("NaN")>]
            static member NaN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Infinity)"); CompiledName("Infinity")>]
            static member Infinity with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(eval({args}))"); CompiledName("eval")>]
            static member eval(x : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("(parseInt({args}))"); CompiledName("parseInt")>]
            static member parseInt(s : string, ?radix : float) : float = failwith "never"
            [<FunScript.JSEmitInline("(parseFloat({args}))"); CompiledName("parseFloat")>]
            static member parseFloat(_string : string) : float = failwith "never"
            [<FunScript.JSEmitInline("(isNaN({args}))"); CompiledName("isNaN")>]
            static member isNaN(number : float) : bool = failwith "never"
            [<FunScript.JSEmitInline("(isFinite({args}))"); CompiledName("isFinite")>]
            static member isFinite(number : float) : bool = failwith "never"
            [<FunScript.JSEmitInline("(decodeURI({args}))"); CompiledName("decodeURI")>]
            static member decodeURI(encodedURI : string) : string = failwith "never"
            [<FunScript.JSEmitInline("(decodeURIComponent({args}))"); CompiledName("decodeURIComponent")>]
            static member decodeURIComponent(encodedURIComponent : string) : string = failwith "never"
            [<FunScript.JSEmitInline("(encodeURI({args}))"); CompiledName("encodeURI")>]
            static member encodeURI(uri : string) : string = failwith "never"
            [<FunScript.JSEmitInline("(encodeURIComponent({args}))"); CompiledName("encodeURIComponent")>]
            static member encodeURIComponent(uriComponent : string) : string = failwith "never"
            [<FunScript.JSEmitInline("(Object)"); CompiledName("Object")>]
            static member Object with get() : AnonymousType1 = failwith "never" and set (v : AnonymousType1) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Function)"); CompiledName("Function")>]
            static member Function with get() : AnonymousType2 = failwith "never" and set (v : AnonymousType2) : unit = failwith "never"
            [<FunScript.JSEmitInline("(String)"); CompiledName("String")>]
            static member String with get() : AnonymousType3 = failwith "never" and set (v : AnonymousType3) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Boolean)"); CompiledName("Boolean")>]
            static member Boolean with get() : AnonymousType4 = failwith "never" and set (v : AnonymousType4) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Number)"); CompiledName("Number")>]
            static member Number with get() : AnonymousType5 = failwith "never" and set (v : AnonymousType5) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Math)"); CompiledName("Math")>]
            static member Math with get() : Math = failwith "never" and set (v : Math) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Date)"); CompiledName("Date")>]
            static member Date with get() : AnonymousType6 = failwith "never" and set (v : AnonymousType6) : unit = failwith "never"
            [<FunScript.JSEmitInline("(RegExp)"); CompiledName("RegExp")>]
            static member RegExp with get() : AnonymousType7 = failwith "never" and set (v : AnonymousType7) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Error)"); CompiledName("Error")>]
            static member Error with get() : AnonymousType8 = failwith "never" and set (v : AnonymousType8) : unit = failwith "never"
            [<FunScript.JSEmitInline("(EvalError)"); CompiledName("EvalError")>]
            static member EvalError with get() : AnonymousType9 = failwith "never" and set (v : AnonymousType9) : unit = failwith "never"
            [<FunScript.JSEmitInline("(RangeError)"); CompiledName("RangeError")>]
            static member RangeError with get() : AnonymousType10 = failwith "never" and set (v : AnonymousType10) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ReferenceError)"); CompiledName("ReferenceError")>]
            static member ReferenceError with get() : AnonymousType11 = failwith "never" and set (v : AnonymousType11) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SyntaxError)"); CompiledName("SyntaxError")>]
            static member SyntaxError with get() : AnonymousType12 = failwith "never" and set (v : AnonymousType12) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TypeError)"); CompiledName("TypeError")>]
            static member TypeError with get() : AnonymousType13 = failwith "never" and set (v : AnonymousType13) : unit = failwith "never"
            [<FunScript.JSEmitInline("(URIError)"); CompiledName("URIError")>]
            static member URIError with get() : AnonymousType14 = failwith "never" and set (v : AnonymousType14) : unit = failwith "never"
            [<FunScript.JSEmitInline("(JSON)"); CompiledName("JSON")>]
            static member JSON with get() : JSON = failwith "never" and set (v : JSON) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Array)"); CompiledName("Array")>]
            static member Array with get() : AnonymousType15 = failwith "never" and set (v : AnonymousType15) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ArrayBuffer)"); CompiledName("ArrayBuffer")>]
            static member ArrayBuffer with get() : AnonymousType16 = failwith "never" and set (v : AnonymousType16) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Int8Array)"); CompiledName("Int8Array")>]
            static member Int8Array with get() : AnonymousType17 = failwith "never" and set (v : AnonymousType17) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Uint8Array)"); CompiledName("Uint8Array")>]
            static member Uint8Array with get() : AnonymousType18 = failwith "never" and set (v : AnonymousType18) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Int16Array)"); CompiledName("Int16Array")>]
            static member Int16Array with get() : AnonymousType19 = failwith "never" and set (v : AnonymousType19) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Uint16Array)"); CompiledName("Uint16Array")>]
            static member Uint16Array with get() : AnonymousType20 = failwith "never" and set (v : AnonymousType20) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Int32Array)"); CompiledName("Int32Array")>]
            static member Int32Array with get() : AnonymousType21 = failwith "never" and set (v : AnonymousType21) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Uint32Array)"); CompiledName("Uint32Array")>]
            static member Uint32Array with get() : AnonymousType22 = failwith "never" and set (v : AnonymousType22) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Float32Array)"); CompiledName("Float32Array")>]
            static member Float32Array with get() : AnonymousType23 = failwith "never" and set (v : AnonymousType23) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Float64Array)"); CompiledName("Float64Array")>]
            static member Float64Array with get() : AnonymousType24 = failwith "never" and set (v : AnonymousType24) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DataView)"); CompiledName("DataView")>]
            static member DataView with get() : AnonymousType25 = failwith "never" and set (v : AnonymousType25) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Map)"); CompiledName("Map")>]
            static member Map with get() : AnonymousType26 = failwith "never" and set (v : AnonymousType26) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WeakMap)"); CompiledName("WeakMap")>]
            static member WeakMap with get() : AnonymousType27 = failwith "never" and set (v : AnonymousType27) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Set)"); CompiledName("Set")>]
            static member Set with get() : AnonymousType28 = failwith "never" and set (v : AnonymousType28) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLElement)"); CompiledName("HTMLElement")>]
            static member HTMLElement with get() : AnonymousType32 = failwith "never" and set (v : AnonymousType32) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Document)"); CompiledName("Document")>]
            static member Document with get() : AnonymousType33 = failwith "never" and set (v : AnonymousType33) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Console)"); CompiledName("Console")>]
            static member Console with get() : AnonymousType34 = failwith "never" and set (v : AnonymousType34) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSEventObj)"); CompiledName("MSEventObj")>]
            static member MSEventObj with get() : AnonymousType35 = failwith "never" and set (v : AnonymousType35) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLCanvasElement)"); CompiledName("HTMLCanvasElement")>]
            static member HTMLCanvasElement with get() : AnonymousType36 = failwith "never" and set (v : AnonymousType36) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Window)"); CompiledName("Window")>]
            static member Window with get() : AnonymousType37 = failwith "never" and set (v : AnonymousType37) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLCollection)"); CompiledName("HTMLCollection")>]
            static member HTMLCollection with get() : AnonymousType38 = failwith "never" and set (v : AnonymousType38) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Blob)"); CompiledName("Blob")>]
            static member Blob with get() : AnonymousType39 = failwith "never" and set (v : AnonymousType39) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTableElement)"); CompiledName("HTMLTableElement")>]
            static member HTMLTableElement with get() : AnonymousType40 = failwith "never" and set (v : AnonymousType40) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TreeWalker)"); CompiledName("TreeWalker")>]
            static member TreeWalker with get() : AnonymousType41 = failwith "never" and set (v : AnonymousType41) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegCurvetoQuadraticRel)"); CompiledName("SVGPathSegCurvetoQuadraticRel")>]
            static member SVGPathSegCurvetoQuadraticRel with get() : AnonymousType42 = failwith "never" and set (v : AnonymousType42) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Performance)"); CompiledName("Performance")>]
            static member Performance with get() : AnonymousType43 = failwith "never" and set (v : AnonymousType43) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CompositionEvent)"); CompiledName("CompositionEvent")>]
            static member CompositionEvent with get() : AnonymousType44 = failwith "never" and set (v : AnonymousType44) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGMarkerElement)"); CompiledName("SVGMarkerElement")>]
            static member SVGMarkerElement with get() : AnonymousType45 = failwith "never" and set (v : AnonymousType45) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSStyleDeclaration)"); CompiledName("CSSStyleDeclaration")>]
            static member CSSStyleDeclaration with get() : AnonymousType46 = failwith "never" and set (v : AnonymousType46) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGGElement)"); CompiledName("SVGGElement")>]
            static member SVGGElement with get() : AnonymousType47 = failwith "never" and set (v : AnonymousType47) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSStyleCSSProperties)"); CompiledName("MSStyleCSSProperties")>]
            static member MSStyleCSSProperties with get() : AnonymousType48 = failwith "never" and set (v : AnonymousType48) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Navigator)"); CompiledName("Navigator")>]
            static member Navigator with get() : AnonymousType49 = failwith "never" and set (v : AnonymousType49) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegCurvetoCubicSmoothAbs)"); CompiledName("SVGPathSegCurvetoCubicSmoothAbs")>]
            static member SVGPathSegCurvetoCubicSmoothAbs with get() : AnonymousType50 = failwith "never" and set (v : AnonymousType50) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGZoomEvent)"); CompiledName("SVGZoomEvent")>]
            static member SVGZoomEvent with get() : AnonymousType51 = failwith "never" and set (v : AnonymousType51) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTableDataCellElement)"); CompiledName("HTMLTableDataCellElement")>]
            static member HTMLTableDataCellElement with get() : AnonymousType52 = failwith "never" and set (v : AnonymousType52) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLBaseElement)"); CompiledName("HTMLBaseElement")>]
            static member HTMLBaseElement with get() : AnonymousType53 = failwith "never" and set (v : AnonymousType53) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ClientRect)"); CompiledName("ClientRect")>]
            static member ClientRect with get() : AnonymousType54 = failwith "never" and set (v : AnonymousType54) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DOMImplementation)"); CompiledName("DOMImplementation")>]
            static member DOMImplementation with get() : AnonymousType55 = failwith "never" and set (v : AnonymousType55) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGUnitTypes)"); CompiledName("SVGUnitTypes")>]
            static member SVGUnitTypes with get() : SVGUnitTypes = failwith "never" and set (v : SVGUnitTypes) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Element)"); CompiledName("Element")>]
            static member Element with get() : AnonymousType56 = failwith "never" and set (v : AnonymousType56) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLNextIdElement)"); CompiledName("HTMLNextIdElement")>]
            static member HTMLNextIdElement with get() : AnonymousType57 = failwith "never" and set (v : AnonymousType57) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegMovetoRel)"); CompiledName("SVGPathSegMovetoRel")>]
            static member SVGPathSegMovetoRel with get() : AnonymousType58 = failwith "never" and set (v : AnonymousType58) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGLineElement)"); CompiledName("SVGLineElement")>]
            static member SVGLineElement with get() : AnonymousType59 = failwith "never" and set (v : AnonymousType59) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLParagraphElement)"); CompiledName("HTMLParagraphElement")>]
            static member HTMLParagraphElement with get() : AnonymousType60 = failwith "never" and set (v : AnonymousType60) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLAreasCollection)"); CompiledName("HTMLAreasCollection")>]
            static member HTMLAreasCollection with get() : AnonymousType61 = failwith "never" and set (v : AnonymousType61) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGDescElement)"); CompiledName("SVGDescElement")>]
            static member SVGDescElement with get() : AnonymousType62 = failwith "never" and set (v : AnonymousType62) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Node)"); CompiledName("Node")>]
            static member Node with get() : AnonymousType63 = failwith "never" and set (v : AnonymousType63) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegCurvetoQuadraticSmoothRel)"); CompiledName("SVGPathSegCurvetoQuadraticSmoothRel")>]
            static member SVGPathSegCurvetoQuadraticSmoothRel with get() : AnonymousType64 = failwith "never" and set (v : AnonymousType64) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSScriptHost)"); CompiledName("MSScriptHost")>]
            static member MSScriptHost with get() : AnonymousType65 = failwith "never" and set (v : AnonymousType65) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGClipPathElement)"); CompiledName("SVGClipPathElement")>]
            static member SVGClipPathElement with get() : AnonymousType66 = failwith "never" and set (v : AnonymousType66) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MouseEvent)"); CompiledName("MouseEvent")>]
            static member MouseEvent with get() : AnonymousType67 = failwith "never" and set (v : AnonymousType67) : unit = failwith "never"
            [<FunScript.JSEmitInline("(RangeException)"); CompiledName("RangeException")>]
            static member RangeException with get() : AnonymousType68 = failwith "never" and set (v : AnonymousType68) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGTextPositioningElement)"); CompiledName("SVGTextPositioningElement")>]
            static member SVGTextPositioningElement with get() : AnonymousType69 = failwith "never" and set (v : AnonymousType69) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLAppletElement)"); CompiledName("HTMLAppletElement")>]
            static member HTMLAppletElement with get() : AnonymousType70 = failwith "never" and set (v : AnonymousType70) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TextMetrics)"); CompiledName("TextMetrics")>]
            static member TextMetrics with get() : AnonymousType71 = failwith "never" and set (v : AnonymousType71) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLOListElement)"); CompiledName("HTMLOListElement")>]
            static member HTMLOListElement with get() : AnonymousType72 = failwith "never" and set (v : AnonymousType72) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegLinetoVerticalRel)"); CompiledName("SVGPathSegLinetoVerticalRel")>]
            static member SVGPathSegLinetoVerticalRel with get() : AnonymousType73 = failwith "never" and set (v : AnonymousType73) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedString)"); CompiledName("SVGAnimatedString")>]
            static member SVGAnimatedString with get() : AnonymousType74 = failwith "never" and set (v : AnonymousType74) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CDATASection)"); CompiledName("CDATASection")>]
            static member CDATASection with get() : AnonymousType75 = failwith "never" and set (v : AnonymousType75) : unit = failwith "never"
            [<FunScript.JSEmitInline("(StyleMedia)"); CompiledName("StyleMedia")>]
            static member StyleMedia with get() : AnonymousType76 = failwith "never" and set (v : AnonymousType76) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLSelectElement)"); CompiledName("HTMLSelectElement")>]
            static member HTMLSelectElement with get() : AnonymousType77 = failwith "never" and set (v : AnonymousType77) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TextRange)"); CompiledName("TextRange")>]
            static member TextRange with get() : AnonymousType78 = failwith "never" and set (v : AnonymousType78) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLBlockElement)"); CompiledName("HTMLBlockElement")>]
            static member HTMLBlockElement with get() : AnonymousType79 = failwith "never" and set (v : AnonymousType79) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSStyleSheet)"); CompiledName("CSSStyleSheet")>]
            static member CSSStyleSheet with get() : AnonymousType80 = failwith "never" and set (v : AnonymousType80) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSSelection)"); CompiledName("MSSelection")>]
            static member MSSelection with get() : AnonymousType81 = failwith "never" and set (v : AnonymousType81) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLMetaElement)"); CompiledName("HTMLMetaElement")>]
            static member HTMLMetaElement with get() : AnonymousType82 = failwith "never" and set (v : AnonymousType82) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPatternElement)"); CompiledName("SVGPatternElement")>]
            static member SVGPatternElement with get() : AnonymousType83 = failwith "never" and set (v : AnonymousType83) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedAngle)"); CompiledName("SVGAnimatedAngle")>]
            static member SVGAnimatedAngle with get() : AnonymousType84 = failwith "never" and set (v : AnonymousType84) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Selection)"); CompiledName("Selection")>]
            static member Selection with get() : AnonymousType85 = failwith "never" and set (v : AnonymousType85) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGScriptElement)"); CompiledName("SVGScriptElement")>]
            static member SVGScriptElement with get() : AnonymousType86 = failwith "never" and set (v : AnonymousType86) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLDDElement)"); CompiledName("HTMLDDElement")>]
            static member HTMLDDElement with get() : AnonymousType87 = failwith "never" and set (v : AnonymousType87) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSStyleRule)"); CompiledName("CSSStyleRule")>]
            static member CSSStyleRule with get() : AnonymousType88 = failwith "never" and set (v : AnonymousType88) : unit = failwith "never"
            [<FunScript.JSEmitInline("(NodeIterator)"); CompiledName("NodeIterator")>]
            static member NodeIterator with get() : AnonymousType89 = failwith "never" and set (v : AnonymousType89) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGViewElement)"); CompiledName("SVGViewElement")>]
            static member SVGViewElement with get() : AnonymousType90 = failwith "never" and set (v : AnonymousType90) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLLinkElement)"); CompiledName("HTMLLinkElement")>]
            static member HTMLLinkElement with get() : AnonymousType91 = failwith "never" and set (v : AnonymousType91) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLFontElement)"); CompiledName("HTMLFontElement")>]
            static member HTMLFontElement with get() : AnonymousType92 = failwith "never" and set (v : AnonymousType92) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGTitleElement)"); CompiledName("SVGTitleElement")>]
            static member SVGTitleElement with get() : AnonymousType93 = failwith "never" and set (v : AnonymousType93) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ControlRangeCollection)"); CompiledName("ControlRangeCollection")>]
            static member ControlRangeCollection with get() : AnonymousType94 = failwith "never" and set (v : AnonymousType94) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSNamespaceInfo)"); CompiledName("MSNamespaceInfo")>]
            static member MSNamespaceInfo with get() : AnonymousType95 = failwith "never" and set (v : AnonymousType95) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedTransformList)"); CompiledName("SVGAnimatedTransformList")>]
            static member SVGAnimatedTransformList with get() : AnonymousType96 = failwith "never" and set (v : AnonymousType96) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTableCaptionElement)"); CompiledName("HTMLTableCaptionElement")>]
            static member HTMLTableCaptionElement with get() : AnonymousType97 = failwith "never" and set (v : AnonymousType97) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLOptionElement)"); CompiledName("HTMLOptionElement")>]
            static member HTMLOptionElement with get() : AnonymousType98 = failwith "never" and set (v : AnonymousType98) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLMapElement)"); CompiledName("HTMLMapElement")>]
            static member HTMLMapElement with get() : AnonymousType99 = failwith "never" and set (v : AnonymousType99) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLMenuElement)"); CompiledName("HTMLMenuElement")>]
            static member HTMLMenuElement with get() : AnonymousType100 = failwith "never" and set (v : AnonymousType100) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MouseWheelEvent)"); CompiledName("MouseWheelEvent")>]
            static member MouseWheelEvent with get() : AnonymousType101 = failwith "never" and set (v : AnonymousType101) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPointList)"); CompiledName("SVGPointList")>]
            static member SVGPointList with get() : AnonymousType102 = failwith "never" and set (v : AnonymousType102) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedLengthList)"); CompiledName("SVGAnimatedLengthList")>]
            static member SVGAnimatedLengthList with get() : AnonymousType103 = failwith "never" and set (v : AnonymousType103) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedPreserveAspectRatio)"); CompiledName("SVGAnimatedPreserveAspectRatio")>]
            static member SVGAnimatedPreserveAspectRatio with get() : AnonymousType104 = failwith "never" and set (v : AnonymousType104) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSSiteModeEvent)"); CompiledName("MSSiteModeEvent")>]
            static member MSSiteModeEvent with get() : AnonymousType105 = failwith "never" and set (v : AnonymousType105) : unit = failwith "never"
            [<FunScript.JSEmitInline("(StyleSheetPageList)"); CompiledName("StyleSheetPageList")>]
            static member StyleSheetPageList with get() : AnonymousType106 = failwith "never" and set (v : AnonymousType106) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSCSSProperties)"); CompiledName("MSCSSProperties")>]
            static member MSCSSProperties with get() : AnonymousType107 = failwith "never" and set (v : AnonymousType107) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLImageElement)"); CompiledName("HTMLImageElement")>]
            static member HTMLImageElement with get() : AnonymousType108 = failwith "never" and set (v : AnonymousType108) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLAreaElement)"); CompiledName("HTMLAreaElement")>]
            static member HTMLAreaElement with get() : AnonymousType109 = failwith "never" and set (v : AnonymousType109) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAngle)"); CompiledName("SVGAngle")>]
            static member SVGAngle with get() : AnonymousType110 = failwith "never" and set (v : AnonymousType110) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLButtonElement)"); CompiledName("HTMLButtonElement")>]
            static member HTMLButtonElement with get() : AnonymousType111 = failwith "never" and set (v : AnonymousType111) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLSourceElement)"); CompiledName("HTMLSourceElement")>]
            static member HTMLSourceElement with get() : AnonymousType112 = failwith "never" and set (v : AnonymousType112) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CanvasGradient)"); CompiledName("CanvasGradient")>]
            static member CanvasGradient with get() : AnonymousType113 = failwith "never" and set (v : AnonymousType113) : unit = failwith "never"
            [<FunScript.JSEmitInline("(KeyboardEvent)"); CompiledName("KeyboardEvent")>]
            static member KeyboardEvent with get() : AnonymousType114 = failwith "never" and set (v : AnonymousType114) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MessageEvent)"); CompiledName("MessageEvent")>]
            static member MessageEvent with get() : AnonymousType115 = failwith "never" and set (v : AnonymousType115) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGElement)"); CompiledName("SVGElement")>]
            static member SVGElement with get() : AnonymousType116 = failwith "never" and set (v : AnonymousType116) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLScriptElement)"); CompiledName("HTMLScriptElement")>]
            static member HTMLScriptElement with get() : AnonymousType117 = failwith "never" and set (v : AnonymousType117) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTableRowElement)"); CompiledName("HTMLTableRowElement")>]
            static member HTMLTableRowElement with get() : AnonymousType118 = failwith "never" and set (v : AnonymousType118) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CanvasRenderingContext2D)"); CompiledName("CanvasRenderingContext2D")>]
            static member CanvasRenderingContext2D with get() : AnonymousType119 = failwith "never" and set (v : AnonymousType119) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSCSSRuleList)"); CompiledName("MSCSSRuleList")>]
            static member MSCSSRuleList with get() : AnonymousType120 = failwith "never" and set (v : AnonymousType120) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegLinetoHorizontalAbs)"); CompiledName("SVGPathSegLinetoHorizontalAbs")>]
            static member SVGPathSegLinetoHorizontalAbs with get() : AnonymousType121 = failwith "never" and set (v : AnonymousType121) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegArcAbs)"); CompiledName("SVGPathSegArcAbs")>]
            static member SVGPathSegArcAbs with get() : AnonymousType122 = failwith "never" and set (v : AnonymousType122) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGTransformList)"); CompiledName("SVGTransformList")>]
            static member SVGTransformList with get() : AnonymousType123 = failwith "never" and set (v : AnonymousType123) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLHtmlElement)"); CompiledName("HTMLHtmlElement")>]
            static member HTMLHtmlElement with get() : AnonymousType124 = failwith "never" and set (v : AnonymousType124) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegClosePath)"); CompiledName("SVGPathSegClosePath")>]
            static member SVGPathSegClosePath with get() : AnonymousType125 = failwith "never" and set (v : AnonymousType125) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLFrameElement)"); CompiledName("HTMLFrameElement")>]
            static member HTMLFrameElement with get() : AnonymousType126 = failwith "never" and set (v : AnonymousType126) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedLength)"); CompiledName("SVGAnimatedLength")>]
            static member SVGAnimatedLength with get() : AnonymousType127 = failwith "never" and set (v : AnonymousType127) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGDefsElement)"); CompiledName("SVGDefsElement")>]
            static member SVGDefsElement with get() : AnonymousType128 = failwith "never" and set (v : AnonymousType128) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLQuoteElement)"); CompiledName("HTMLQuoteElement")>]
            static member HTMLQuoteElement with get() : AnonymousType129 = failwith "never" and set (v : AnonymousType129) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSMediaRule)"); CompiledName("CSSMediaRule")>]
            static member CSSMediaRule with get() : AnonymousType130 = failwith "never" and set (v : AnonymousType130) : unit = failwith "never"
            [<FunScript.JSEmitInline("(XMLHttpRequest)"); CompiledName("XMLHttpRequest")>]
            static member XMLHttpRequest with get() : AnonymousType131 = failwith "never" and set (v : AnonymousType131) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTableHeaderCellElement)"); CompiledName("HTMLTableHeaderCellElement")>]
            static member HTMLTableHeaderCellElement with get() : AnonymousType132 = failwith "never" and set (v : AnonymousType132) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLDListElement)"); CompiledName("HTMLDListElement")>]
            static member HTMLDListElement with get() : AnonymousType133 = failwith "never" and set (v : AnonymousType133) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegLinetoHorizontalRel)"); CompiledName("SVGPathSegLinetoHorizontalRel")>]
            static member SVGPathSegLinetoHorizontalRel with get() : AnonymousType134 = failwith "never" and set (v : AnonymousType134) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGEllipseElement)"); CompiledName("SVGEllipseElement")>]
            static member SVGEllipseElement with get() : AnonymousType135 = failwith "never" and set (v : AnonymousType135) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAElement)"); CompiledName("SVGAElement")>]
            static member SVGAElement with get() : AnonymousType136 = failwith "never" and set (v : AnonymousType136) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLFrameSetElement)"); CompiledName("HTMLFrameSetElement")>]
            static member HTMLFrameSetElement with get() : AnonymousType137 = failwith "never" and set (v : AnonymousType137) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Screen)"); CompiledName("Screen")>]
            static member Screen with get() : AnonymousType138 = failwith "never" and set (v : AnonymousType138) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Coordinates)"); CompiledName("Coordinates")>]
            static member Coordinates with get() : AnonymousType139 = failwith "never" and set (v : AnonymousType139) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DataTransfer)"); CompiledName("DataTransfer")>]
            static member DataTransfer with get() : AnonymousType140 = failwith "never" and set (v : AnonymousType140) : unit = failwith "never"
            [<FunScript.JSEmitInline("(FocusEvent)"); CompiledName("FocusEvent")>]
            static member FocusEvent with get() : AnonymousType141 = failwith "never" and set (v : AnonymousType141) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Range)"); CompiledName("Range")>]
            static member Range with get() : AnonymousType142 = failwith "never" and set (v : AnonymousType142) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPoint)"); CompiledName("SVGPoint")>]
            static member SVGPoint with get() : AnonymousType143 = failwith "never" and set (v : AnonymousType143) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSPluginsCollection)"); CompiledName("MSPluginsCollection")>]
            static member MSPluginsCollection with get() : AnonymousType144 = failwith "never" and set (v : AnonymousType144) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedNumberList)"); CompiledName("SVGAnimatedNumberList")>]
            static member SVGAnimatedNumberList with get() : AnonymousType145 = failwith "never" and set (v : AnonymousType145) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGSVGElement)"); CompiledName("SVGSVGElement")>]
            static member SVGSVGElement with get() : AnonymousType146 = failwith "never" and set (v : AnonymousType146) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLLabelElement)"); CompiledName("HTMLLabelElement")>]
            static member HTMLLabelElement with get() : AnonymousType147 = failwith "never" and set (v : AnonymousType147) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLLegendElement)"); CompiledName("HTMLLegendElement")>]
            static member HTMLLegendElement with get() : AnonymousType148 = failwith "never" and set (v : AnonymousType148) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLDirectoryElement)"); CompiledName("HTMLDirectoryElement")>]
            static member HTMLDirectoryElement with get() : AnonymousType149 = failwith "never" and set (v : AnonymousType149) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedInteger)"); CompiledName("SVGAnimatedInteger")>]
            static member SVGAnimatedInteger with get() : AnonymousType150 = failwith "never" and set (v : AnonymousType150) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGTextElement)"); CompiledName("SVGTextElement")>]
            static member SVGTextElement with get() : AnonymousType151 = failwith "never" and set (v : AnonymousType151) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGTSpanElement)"); CompiledName("SVGTSpanElement")>]
            static member SVGTSpanElement with get() : AnonymousType152 = failwith "never" and set (v : AnonymousType152) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLLIElement)"); CompiledName("HTMLLIElement")>]
            static member HTMLLIElement with get() : AnonymousType153 = failwith "never" and set (v : AnonymousType153) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegLinetoVerticalAbs)"); CompiledName("SVGPathSegLinetoVerticalAbs")>]
            static member SVGPathSegLinetoVerticalAbs with get() : AnonymousType154 = failwith "never" and set (v : AnonymousType154) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGStyleElement)"); CompiledName("SVGStyleElement")>]
            static member SVGStyleElement with get() : AnonymousType155 = failwith "never" and set (v : AnonymousType155) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSCurrentStyleCSSProperties)"); CompiledName("MSCurrentStyleCSSProperties")>]
            static member MSCurrentStyleCSSProperties with get() : AnonymousType156 = failwith "never" and set (v : AnonymousType156) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Storage)"); CompiledName("Storage")>]
            static member Storage with get() : AnonymousType157 = failwith "never" and set (v : AnonymousType157) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLIFrameElement)"); CompiledName("HTMLIFrameElement")>]
            static member HTMLIFrameElement with get() : AnonymousType158 = failwith "never" and set (v : AnonymousType158) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TextRangeCollection)"); CompiledName("TextRangeCollection")>]
            static member TextRangeCollection with get() : AnonymousType159 = failwith "never" and set (v : AnonymousType159) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLBodyElement)"); CompiledName("HTMLBodyElement")>]
            static member HTMLBodyElement with get() : AnonymousType160 = failwith "never" and set (v : AnonymousType160) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DocumentType)"); CompiledName("DocumentType")>]
            static member DocumentType with get() : AnonymousType161 = failwith "never" and set (v : AnonymousType161) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGRadialGradientElement)"); CompiledName("SVGRadialGradientElement")>]
            static member SVGRadialGradientElement with get() : AnonymousType162 = failwith "never" and set (v : AnonymousType162) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MutationEvent)"); CompiledName("MutationEvent")>]
            static member MutationEvent with get() : AnonymousType163 = failwith "never" and set (v : AnonymousType163) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DragEvent)"); CompiledName("DragEvent")>]
            static member DragEvent with get() : AnonymousType164 = failwith "never" and set (v : AnonymousType164) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTableSectionElement)"); CompiledName("HTMLTableSectionElement")>]
            static member HTMLTableSectionElement with get() : AnonymousType165 = failwith "never" and set (v : AnonymousType165) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLInputElement)"); CompiledName("HTMLInputElement")>]
            static member HTMLInputElement with get() : AnonymousType166 = failwith "never" and set (v : AnonymousType166) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLAnchorElement)"); CompiledName("HTMLAnchorElement")>]
            static member HTMLAnchorElement with get() : AnonymousType167 = failwith "never" and set (v : AnonymousType167) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLParamElement)"); CompiledName("HTMLParamElement")>]
            static member HTMLParamElement with get() : AnonymousType168 = failwith "never" and set (v : AnonymousType168) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGImageElement)"); CompiledName("SVGImageElement")>]
            static member SVGImageElement with get() : AnonymousType169 = failwith "never" and set (v : AnonymousType169) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedNumber)"); CompiledName("SVGAnimatedNumber")>]
            static member SVGAnimatedNumber with get() : AnonymousType170 = failwith "never" and set (v : AnonymousType170) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PerformanceTiming)"); CompiledName("PerformanceTiming")>]
            static member PerformanceTiming with get() : AnonymousType171 = failwith "never" and set (v : AnonymousType171) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLPreElement)"); CompiledName("HTMLPreElement")>]
            static member HTMLPreElement with get() : AnonymousType172 = failwith "never" and set (v : AnonymousType172) : unit = failwith "never"
            [<FunScript.JSEmitInline("(EventException)"); CompiledName("EventException")>]
            static member EventException with get() : AnonymousType173 = failwith "never" and set (v : AnonymousType173) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGMetadataElement)"); CompiledName("SVGMetadataElement")>]
            static member SVGMetadataElement with get() : AnonymousType174 = failwith "never" and set (v : AnonymousType174) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegArcRel)"); CompiledName("SVGPathSegArcRel")>]
            static member SVGPathSegArcRel with get() : AnonymousType175 = failwith "never" and set (v : AnonymousType175) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegMovetoAbs)"); CompiledName("SVGPathSegMovetoAbs")>]
            static member SVGPathSegMovetoAbs with get() : AnonymousType176 = failwith "never" and set (v : AnonymousType176) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGStringList)"); CompiledName("SVGStringList")>]
            static member SVGStringList with get() : AnonymousType177 = failwith "never" and set (v : AnonymousType177) : unit = failwith "never"
            [<FunScript.JSEmitInline("(XDomainRequest)"); CompiledName("XDomainRequest")>]
            static member XDomainRequest with get() : AnonymousType178 = failwith "never" and set (v : AnonymousType178) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGLength)"); CompiledName("SVGLength")>]
            static member SVGLength with get() : AnonymousType179 = failwith "never" and set (v : AnonymousType179) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPolygonElement)"); CompiledName("SVGPolygonElement")>]
            static member SVGPolygonElement with get() : AnonymousType180 = failwith "never" and set (v : AnonymousType180) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLPhraseElement)"); CompiledName("HTMLPhraseElement")>]
            static member HTMLPhraseElement with get() : AnonymousType181 = failwith "never" and set (v : AnonymousType181) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegCurvetoCubicRel)"); CompiledName("SVGPathSegCurvetoCubicRel")>]
            static member SVGPathSegCurvetoCubicRel with get() : AnonymousType182 = failwith "never" and set (v : AnonymousType182) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGTextContentElement)"); CompiledName("SVGTextContentElement")>]
            static member SVGTextContentElement with get() : AnonymousType183 = failwith "never" and set (v : AnonymousType183) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Location)"); CompiledName("Location")>]
            static member Location with get() : AnonymousType184 = failwith "never" and set (v : AnonymousType184) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTitleElement)"); CompiledName("HTMLTitleElement")>]
            static member HTMLTitleElement with get() : AnonymousType185 = failwith "never" and set (v : AnonymousType185) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLStyleElement)"); CompiledName("HTMLStyleElement")>]
            static member HTMLStyleElement with get() : AnonymousType186 = failwith "never" and set (v : AnonymousType186) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PerformanceEntry)"); CompiledName("PerformanceEntry")>]
            static member PerformanceEntry with get() : AnonymousType187 = failwith "never" and set (v : AnonymousType187) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGTransform)"); CompiledName("SVGTransform")>]
            static member SVGTransform with get() : AnonymousType188 = failwith "never" and set (v : AnonymousType188) : unit = failwith "never"
            [<FunScript.JSEmitInline("(UIEvent)"); CompiledName("UIEvent")>]
            static member UIEvent with get() : AnonymousType189 = failwith "never" and set (v : AnonymousType189) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSeg)"); CompiledName("SVGPathSeg")>]
            static member SVGPathSeg with get() : AnonymousType190 = failwith "never" and set (v : AnonymousType190) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WheelEvent)"); CompiledName("WheelEvent")>]
            static member WheelEvent with get() : AnonymousType191 = failwith "never" and set (v : AnonymousType191) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGNumber)"); CompiledName("SVGNumber")>]
            static member SVGNumber with get() : AnonymousType192 = failwith "never" and set (v : AnonymousType192) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathElement)"); CompiledName("SVGPathElement")>]
            static member SVGPathElement with get() : AnonymousType193 = failwith "never" and set (v : AnonymousType193) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSCompatibleInfo)"); CompiledName("MSCompatibleInfo")>]
            static member MSCompatibleInfo with get() : AnonymousType194 = failwith "never" and set (v : AnonymousType194) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Text)"); CompiledName("Text")>]
            static member Text with get() : AnonymousType195 = failwith "never" and set (v : AnonymousType195) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedRect)"); CompiledName("SVGAnimatedRect")>]
            static member SVGAnimatedRect with get() : AnonymousType196 = failwith "never" and set (v : AnonymousType196) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSNamespaceRule)"); CompiledName("CSSNamespaceRule")>]
            static member CSSNamespaceRule with get() : AnonymousType197 = failwith "never" and set (v : AnonymousType197) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegList)"); CompiledName("SVGPathSegList")>]
            static member SVGPathSegList with get() : AnonymousType198 = failwith "never" and set (v : AnonymousType198) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLUnknownElement)"); CompiledName("HTMLUnknownElement")>]
            static member HTMLUnknownElement with get() : AnonymousType199 = failwith "never" and set (v : AnonymousType199) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLAudioElement)"); CompiledName("HTMLAudioElement")>]
            static member HTMLAudioElement with get() : AnonymousType200 = failwith "never" and set (v : AnonymousType200) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PositionError)"); CompiledName("PositionError")>]
            static member PositionError with get() : AnonymousType201 = failwith "never" and set (v : AnonymousType201) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTableCellElement)"); CompiledName("HTMLTableCellElement")>]
            static member HTMLTableCellElement with get() : AnonymousType202 = failwith "never" and set (v : AnonymousType202) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGElementInstance)"); CompiledName("SVGElementInstance")>]
            static member SVGElementInstance with get() : AnonymousType203 = failwith "never" and set (v : AnonymousType203) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSNamespaceInfoCollection)"); CompiledName("MSNamespaceInfoCollection")>]
            static member MSNamespaceInfoCollection with get() : AnonymousType204 = failwith "never" and set (v : AnonymousType204) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGCircleElement)"); CompiledName("SVGCircleElement")>]
            static member SVGCircleElement with get() : AnonymousType205 = failwith "never" and set (v : AnonymousType205) : unit = failwith "never"
            [<FunScript.JSEmitInline("(StyleSheetList)"); CompiledName("StyleSheetList")>]
            static member StyleSheetList with get() : AnonymousType206 = failwith "never" and set (v : AnonymousType206) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSImportRule)"); CompiledName("CSSImportRule")>]
            static member CSSImportRule with get() : AnonymousType207 = failwith "never" and set (v : AnonymousType207) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CustomEvent)"); CompiledName("CustomEvent")>]
            static member CustomEvent with get() : AnonymousType208 = failwith "never" and set (v : AnonymousType208) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLBaseFontElement)"); CompiledName("HTMLBaseFontElement")>]
            static member HTMLBaseFontElement with get() : AnonymousType209 = failwith "never" and set (v : AnonymousType209) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTextAreaElement)"); CompiledName("HTMLTextAreaElement")>]
            static member HTMLTextAreaElement with get() : AnonymousType210 = failwith "never" and set (v : AnonymousType210) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Geolocation)"); CompiledName("Geolocation")>]
            static member Geolocation with get() : AnonymousType211 = failwith "never" and set (v : AnonymousType211) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLMarqueeElement)"); CompiledName("HTMLMarqueeElement")>]
            static member HTMLMarqueeElement with get() : AnonymousType212 = failwith "never" and set (v : AnonymousType212) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGRect)"); CompiledName("SVGRect")>]
            static member SVGRect with get() : AnonymousType213 = failwith "never" and set (v : AnonymousType213) : unit = failwith "never"
            [<FunScript.JSEmitInline("(History)"); CompiledName("History")>]
            static member History with get() : AnonymousType214 = failwith "never" and set (v : AnonymousType214) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegCurvetoCubicAbs)"); CompiledName("SVGPathSegCurvetoCubicAbs")>]
            static member SVGPathSegCurvetoCubicAbs with get() : AnonymousType215 = failwith "never" and set (v : AnonymousType215) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegCurvetoQuadraticAbs)"); CompiledName("SVGPathSegCurvetoQuadraticAbs")>]
            static member SVGPathSegCurvetoQuadraticAbs with get() : AnonymousType216 = failwith "never" and set (v : AnonymousType216) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TimeRanges)"); CompiledName("TimeRanges")>]
            static member TimeRanges with get() : AnonymousType217 = failwith "never" and set (v : AnonymousType217) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSRule)"); CompiledName("CSSRule")>]
            static member CSSRule with get() : AnonymousType218 = failwith "never" and set (v : AnonymousType218) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegLinetoAbs)"); CompiledName("SVGPathSegLinetoAbs")>]
            static member SVGPathSegLinetoAbs with get() : AnonymousType219 = failwith "never" and set (v : AnonymousType219) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLModElement)"); CompiledName("HTMLModElement")>]
            static member HTMLModElement with get() : AnonymousType220 = failwith "never" and set (v : AnonymousType220) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGMatrix)"); CompiledName("SVGMatrix")>]
            static member SVGMatrix with get() : AnonymousType221 = failwith "never" and set (v : AnonymousType221) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSPopupWindow)"); CompiledName("MSPopupWindow")>]
            static member MSPopupWindow with get() : AnonymousType222 = failwith "never" and set (v : AnonymousType222) : unit = failwith "never"
            [<FunScript.JSEmitInline("(BeforeUnloadEvent)"); CompiledName("BeforeUnloadEvent")>]
            static member BeforeUnloadEvent with get() : AnonymousType223 = failwith "never" and set (v : AnonymousType223) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGUseElement)"); CompiledName("SVGUseElement")>]
            static member SVGUseElement with get() : AnonymousType224 = failwith "never" and set (v : AnonymousType224) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Event)"); CompiledName("Event")>]
            static member Event with get() : AnonymousType225 = failwith "never" and set (v : AnonymousType225) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ImageData)"); CompiledName("ImageData")>]
            static member ImageData with get() : AnonymousType226 = failwith "never" and set (v : AnonymousType226) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTableColElement)"); CompiledName("HTMLTableColElement")>]
            static member HTMLTableColElement with get() : AnonymousType227 = failwith "never" and set (v : AnonymousType227) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGException)"); CompiledName("SVGException")>]
            static member SVGException with get() : AnonymousType228 = failwith "never" and set (v : AnonymousType228) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGLinearGradientElement)"); CompiledName("SVGLinearGradientElement")>]
            static member SVGLinearGradientElement with get() : AnonymousType229 = failwith "never" and set (v : AnonymousType229) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedEnumeration)"); CompiledName("SVGAnimatedEnumeration")>]
            static member SVGAnimatedEnumeration with get() : AnonymousType230 = failwith "never" and set (v : AnonymousType230) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLUListElement)"); CompiledName("HTMLUListElement")>]
            static member HTMLUListElement with get() : AnonymousType231 = failwith "never" and set (v : AnonymousType231) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGRectElement)"); CompiledName("SVGRectElement")>]
            static member SVGRectElement with get() : AnonymousType232 = failwith "never" and set (v : AnonymousType232) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLDivElement)"); CompiledName("HTMLDivElement")>]
            static member HTMLDivElement with get() : AnonymousType233 = failwith "never" and set (v : AnonymousType233) : unit = failwith "never"
            [<FunScript.JSEmitInline("(NamedNodeMap)"); CompiledName("NamedNodeMap")>]
            static member NamedNodeMap with get() : AnonymousType234 = failwith "never" and set (v : AnonymousType234) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MediaList)"); CompiledName("MediaList")>]
            static member MediaList with get() : AnonymousType235 = failwith "never" and set (v : AnonymousType235) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegCurvetoQuadraticSmoothAbs)"); CompiledName("SVGPathSegCurvetoQuadraticSmoothAbs")>]
            static member SVGPathSegCurvetoQuadraticSmoothAbs with get() : AnonymousType236 = failwith "never" and set (v : AnonymousType236) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegCurvetoCubicSmoothRel)"); CompiledName("SVGPathSegCurvetoCubicSmoothRel")>]
            static member SVGPathSegCurvetoCubicSmoothRel with get() : AnonymousType237 = failwith "never" and set (v : AnonymousType237) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGLengthList)"); CompiledName("SVGLengthList")>]
            static member SVGLengthList with get() : AnonymousType238 = failwith "never" and set (v : AnonymousType238) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ProcessingInstruction)"); CompiledName("ProcessingInstruction")>]
            static member ProcessingInstruction with get() : AnonymousType239 = failwith "never" and set (v : AnonymousType239) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSBehaviorUrnsCollection)"); CompiledName("MSBehaviorUrnsCollection")>]
            static member MSBehaviorUrnsCollection with get() : AnonymousType240 = failwith "never" and set (v : AnonymousType240) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSFontFaceRule)"); CompiledName("CSSFontFaceRule")>]
            static member CSSFontFaceRule with get() : AnonymousType241 = failwith "never" and set (v : AnonymousType241) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TextEvent)"); CompiledName("TextEvent")>]
            static member TextEvent with get() : AnonymousType242 = failwith "never" and set (v : AnonymousType242) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DocumentFragment)"); CompiledName("DocumentFragment")>]
            static member DocumentFragment with get() : AnonymousType243 = failwith "never" and set (v : AnonymousType243) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPolylineElement)"); CompiledName("SVGPolylineElement")>]
            static member SVGPolylineElement with get() : AnonymousType244 = failwith "never" and set (v : AnonymousType244) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Position)"); CompiledName("Position")>]
            static member Position with get() : AnonymousType245 = failwith "never" and set (v : AnonymousType245) : unit = failwith "never"
            [<FunScript.JSEmitInline("(BookmarkCollection)"); CompiledName("BookmarkCollection")>]
            static member BookmarkCollection with get() : AnonymousType246 = failwith "never" and set (v : AnonymousType246) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PerformanceMark)"); CompiledName("PerformanceMark")>]
            static member PerformanceMark with get() : AnonymousType247 = failwith "never" and set (v : AnonymousType247) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSPageRule)"); CompiledName("CSSPageRule")>]
            static member CSSPageRule with get() : AnonymousType248 = failwith "never" and set (v : AnonymousType248) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLBRElement)"); CompiledName("HTMLBRElement")>]
            static member HTMLBRElement with get() : AnonymousType249 = failwith "never" and set (v : AnonymousType249) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLSpanElement)"); CompiledName("HTMLSpanElement")>]
            static member HTMLSpanElement with get() : AnonymousType250 = failwith "never" and set (v : AnonymousType250) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLHeadElement)"); CompiledName("HTMLHeadElement")>]
            static member HTMLHeadElement with get() : AnonymousType251 = failwith "never" and set (v : AnonymousType251) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLHeadingElement)"); CompiledName("HTMLHeadingElement")>]
            static member HTMLHeadingElement with get() : AnonymousType252 = failwith "never" and set (v : AnonymousType252) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLFormElement)"); CompiledName("HTMLFormElement")>]
            static member HTMLFormElement with get() : AnonymousType253 = failwith "never" and set (v : AnonymousType253) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGZoomAndPan)"); CompiledName("SVGZoomAndPan")>]
            static member SVGZoomAndPan with get() : SVGZoomAndPan = failwith "never" and set (v : SVGZoomAndPan) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLMediaElement)"); CompiledName("HTMLMediaElement")>]
            static member HTMLMediaElement with get() : AnonymousType254 = failwith "never" and set (v : AnonymousType254) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DOMParser)"); CompiledName("DOMParser")>]
            static member DOMParser with get() : AnonymousType255 = failwith "never" and set (v : AnonymousType255) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSMimeTypesCollection)"); CompiledName("MSMimeTypesCollection")>]
            static member MSMimeTypesCollection with get() : AnonymousType256 = failwith "never" and set (v : AnonymousType256) : unit = failwith "never"
            [<FunScript.JSEmitInline("(StyleSheet)"); CompiledName("StyleSheet")>]
            static member StyleSheet with get() : AnonymousType257 = failwith "never" and set (v : AnonymousType257) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGTextPathElement)"); CompiledName("SVGTextPathElement")>]
            static member SVGTextPathElement with get() : AnonymousType258 = failwith "never" and set (v : AnonymousType258) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLDTElement)"); CompiledName("HTMLDTElement")>]
            static member HTMLDTElement with get() : AnonymousType259 = failwith "never" and set (v : AnonymousType259) : unit = failwith "never"
            [<FunScript.JSEmitInline("(NodeList)"); CompiledName("NodeList")>]
            static member NodeList with get() : AnonymousType260 = failwith "never" and set (v : AnonymousType260) : unit = failwith "never"
            [<FunScript.JSEmitInline("(XMLSerializer)"); CompiledName("XMLSerializer")>]
            static member XMLSerializer with get() : AnonymousType261 = failwith "never" and set (v : AnonymousType261) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PerformanceMeasure)"); CompiledName("PerformanceMeasure")>]
            static member PerformanceMeasure with get() : AnonymousType262 = failwith "never" and set (v : AnonymousType262) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGGradientElement)"); CompiledName("SVGGradientElement")>]
            static member SVGGradientElement with get() : AnonymousType263 = failwith "never" and set (v : AnonymousType263) : unit = failwith "never"
            [<FunScript.JSEmitInline("(NodeFilter)"); CompiledName("NodeFilter")>]
            static member NodeFilter with get() : NodeFilter = failwith "never" and set (v : NodeFilter) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGNumberList)"); CompiledName("SVGNumberList")>]
            static member SVGNumberList with get() : AnonymousType264 = failwith "never" and set (v : AnonymousType264) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MediaError)"); CompiledName("MediaError")>]
            static member MediaError with get() : AnonymousType265 = failwith "never" and set (v : AnonymousType265) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLFieldSetElement)"); CompiledName("HTMLFieldSetElement")>]
            static member HTMLFieldSetElement with get() : AnonymousType266 = failwith "never" and set (v : AnonymousType266) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLBGSoundElement)"); CompiledName("HTMLBGSoundElement")>]
            static member HTMLBGSoundElement with get() : AnonymousType267 = failwith "never" and set (v : AnonymousType267) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Comment)"); CompiledName("Comment")>]
            static member Comment with get() : AnonymousType268 = failwith "never" and set (v : AnonymousType268) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PerformanceResourceTiming)"); CompiledName("PerformanceResourceTiming")>]
            static member PerformanceResourceTiming with get() : AnonymousType269 = failwith "never" and set (v : AnonymousType269) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CanvasPattern)"); CompiledName("CanvasPattern")>]
            static member CanvasPattern with get() : AnonymousType270 = failwith "never" and set (v : AnonymousType270) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLHRElement)"); CompiledName("HTMLHRElement")>]
            static member HTMLHRElement with get() : AnonymousType271 = failwith "never" and set (v : AnonymousType271) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLObjectElement)"); CompiledName("HTMLObjectElement")>]
            static member HTMLObjectElement with get() : AnonymousType272 = failwith "never" and set (v : AnonymousType272) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLEmbedElement)"); CompiledName("HTMLEmbedElement")>]
            static member HTMLEmbedElement with get() : AnonymousType273 = failwith "never" and set (v : AnonymousType273) : unit = failwith "never"
            [<FunScript.JSEmitInline("(StorageEvent)"); CompiledName("StorageEvent")>]
            static member StorageEvent with get() : AnonymousType274 = failwith "never" and set (v : AnonymousType274) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CharacterData)"); CompiledName("CharacterData")>]
            static member CharacterData with get() : AnonymousType275 = failwith "never" and set (v : AnonymousType275) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLOptGroupElement)"); CompiledName("HTMLOptGroupElement")>]
            static member HTMLOptGroupElement with get() : AnonymousType276 = failwith "never" and set (v : AnonymousType276) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLIsIndexElement)"); CompiledName("HTMLIsIndexElement")>]
            static member HTMLIsIndexElement with get() : AnonymousType277 = failwith "never" and set (v : AnonymousType277) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPathSegLinetoRel)"); CompiledName("SVGPathSegLinetoRel")>]
            static member SVGPathSegLinetoRel with get() : AnonymousType278 = failwith "never" and set (v : AnonymousType278) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DOMException)"); CompiledName("DOMException")>]
            static member DOMException with get() : AnonymousType279 = failwith "never" and set (v : AnonymousType279) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGAnimatedBoolean)"); CompiledName("SVGAnimatedBoolean")>]
            static member SVGAnimatedBoolean with get() : AnonymousType280 = failwith "never" and set (v : AnonymousType280) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSCompatibleInfoCollection)"); CompiledName("MSCompatibleInfoCollection")>]
            static member MSCompatibleInfoCollection with get() : AnonymousType281 = failwith "never" and set (v : AnonymousType281) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGSwitchElement)"); CompiledName("SVGSwitchElement")>]
            static member SVGSwitchElement with get() : AnonymousType282 = failwith "never" and set (v : AnonymousType282) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGPreserveAspectRatio)"); CompiledName("SVGPreserveAspectRatio")>]
            static member SVGPreserveAspectRatio with get() : AnonymousType283 = failwith "never" and set (v : AnonymousType283) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Attr)"); CompiledName("Attr")>]
            static member Attr with get() : AnonymousType284 = failwith "never" and set (v : AnonymousType284) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PerformanceNavigation)"); CompiledName("PerformanceNavigation")>]
            static member PerformanceNavigation with get() : AnonymousType285 = failwith "never" and set (v : AnonymousType285) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGStopElement)"); CompiledName("SVGStopElement")>]
            static member SVGStopElement with get() : AnonymousType286 = failwith "never" and set (v : AnonymousType286) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGSymbolElement)"); CompiledName("SVGSymbolElement")>]
            static member SVGSymbolElement with get() : AnonymousType287 = failwith "never" and set (v : AnonymousType287) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGElementInstanceList)"); CompiledName("SVGElementInstanceList")>]
            static member SVGElementInstanceList with get() : AnonymousType288 = failwith "never" and set (v : AnonymousType288) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSRuleList)"); CompiledName("CSSRuleList")>]
            static member CSSRuleList with get() : AnonymousType289 = failwith "never" and set (v : AnonymousType289) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLVideoElement)"); CompiledName("HTMLVideoElement")>]
            static member HTMLVideoElement with get() : AnonymousType290 = failwith "never" and set (v : AnonymousType290) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ClientRectList)"); CompiledName("ClientRectList")>]
            static member ClientRectList with get() : AnonymousType291 = failwith "never" and set (v : AnonymousType291) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGMaskElement)"); CompiledName("SVGMaskElement")>]
            static member SVGMaskElement with get() : AnonymousType292 = failwith "never" and set (v : AnonymousType292) : unit = failwith "never"
            [<FunScript.JSEmitInline("(External)"); CompiledName("External")>]
            static member External with get() : AnonymousType293 = failwith "never" and set (v : AnonymousType293) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSGestureEvent)"); CompiledName("MSGestureEvent")>]
            static member MSGestureEvent with get() : AnonymousType294 = failwith "never" and set (v : AnonymousType294) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ErrorEvent)"); CompiledName("ErrorEvent")>]
            static member ErrorEvent with get() : AnonymousType295 = failwith "never" and set (v : AnonymousType295) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFilterElement)"); CompiledName("SVGFilterElement")>]
            static member SVGFilterElement with get() : AnonymousType296 = failwith "never" and set (v : AnonymousType296) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TrackEvent)"); CompiledName("TrackEvent")>]
            static member TrackEvent with get() : AnonymousType297 = failwith "never" and set (v : AnonymousType297) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEMergeNodeElement)"); CompiledName("SVGFEMergeNodeElement")>]
            static member SVGFEMergeNodeElement with get() : AnonymousType298 = failwith "never" and set (v : AnonymousType298) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEFloodElement)"); CompiledName("SVGFEFloodElement")>]
            static member SVGFEFloodElement with get() : AnonymousType299 = failwith "never" and set (v : AnonymousType299) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSGesture)"); CompiledName("MSGesture")>]
            static member MSGesture with get() : AnonymousType300 = failwith "never" and set (v : AnonymousType300) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TextTrackCue)"); CompiledName("TextTrackCue")>]
            static member TextTrackCue with get() : AnonymousType301 = failwith "never" and set (v : AnonymousType301) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSStreamReader)"); CompiledName("MSStreamReader")>]
            static member MSStreamReader with get() : AnonymousType302 = failwith "never" and set (v : AnonymousType302) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DOMTokenList)"); CompiledName("DOMTokenList")>]
            static member DOMTokenList with get() : AnonymousType303 = failwith "never" and set (v : AnonymousType303) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEFuncAElement)"); CompiledName("SVGFEFuncAElement")>]
            static member SVGFEFuncAElement with get() : AnonymousType304 = failwith "never" and set (v : AnonymousType304) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFETileElement)"); CompiledName("SVGFETileElement")>]
            static member SVGFETileElement with get() : AnonymousType305 = failwith "never" and set (v : AnonymousType305) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEBlendElement)"); CompiledName("SVGFEBlendElement")>]
            static member SVGFEBlendElement with get() : AnonymousType306 = failwith "never" and set (v : AnonymousType306) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MessageChannel)"); CompiledName("MessageChannel")>]
            static member MessageChannel with get() : AnonymousType307 = failwith "never" and set (v : AnonymousType307) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEMergeElement)"); CompiledName("SVGFEMergeElement")>]
            static member SVGFEMergeElement with get() : AnonymousType308 = failwith "never" and set (v : AnonymousType308) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TransitionEvent)"); CompiledName("TransitionEvent")>]
            static member TransitionEvent with get() : AnonymousType309 = failwith "never" and set (v : AnonymousType309) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MediaQueryList)"); CompiledName("MediaQueryList")>]
            static member MediaQueryList with get() : AnonymousType310 = failwith "never" and set (v : AnonymousType310) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DOMError)"); CompiledName("DOMError")>]
            static member DOMError with get() : AnonymousType311 = failwith "never" and set (v : AnonymousType311) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CloseEvent)"); CompiledName("CloseEvent")>]
            static member CloseEvent with get() : AnonymousType312 = failwith "never" and set (v : AnonymousType312) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebSocket)"); CompiledName("WebSocket")>]
            static member WebSocket with get() : AnonymousType313 = failwith "never" and set (v : AnonymousType313) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEPointLightElement)"); CompiledName("SVGFEPointLightElement")>]
            static member SVGFEPointLightElement with get() : AnonymousType314 = failwith "never" and set (v : AnonymousType314) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ProgressEvent)"); CompiledName("ProgressEvent")>]
            static member ProgressEvent with get() : AnonymousType315 = failwith "never" and set (v : AnonymousType315) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBObjectStore)"); CompiledName("IDBObjectStore")>]
            static member IDBObjectStore with get() : AnonymousType316 = failwith "never" and set (v : AnonymousType316) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEGaussianBlurElement)"); CompiledName("SVGFEGaussianBlurElement")>]
            static member SVGFEGaussianBlurElement with get() : AnonymousType317 = failwith "never" and set (v : AnonymousType317) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBVersionChangeEvent)"); CompiledName("IDBVersionChangeEvent")>]
            static member IDBVersionChangeEvent with get() : AnonymousType318 = failwith "never" and set (v : AnonymousType318) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBIndex)"); CompiledName("IDBIndex")>]
            static member IDBIndex with get() : AnonymousType319 = failwith "never" and set (v : AnonymousType319) : unit = failwith "never"
            [<FunScript.JSEmitInline("(FileList)"); CompiledName("FileList")>]
            static member FileList with get() : AnonymousType320 = failwith "never" and set (v : AnonymousType320) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBCursor)"); CompiledName("IDBCursor")>]
            static member IDBCursor with get() : AnonymousType321 = failwith "never" and set (v : AnonymousType321) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFESpecularLightingElement)"); CompiledName("SVGFESpecularLightingElement")>]
            static member SVGFESpecularLightingElement with get() : AnonymousType322 = failwith "never" and set (v : AnonymousType322) : unit = failwith "never"
            [<FunScript.JSEmitInline("(File)"); CompiledName("File")>]
            static member File with get() : AnonymousType323 = failwith "never" and set (v : AnonymousType323) : unit = failwith "never"
            [<FunScript.JSEmitInline("(URL)"); CompiledName("URL")>]
            static member URL with get() : URL = failwith "never" and set (v : URL) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBCursorWithValue)"); CompiledName("IDBCursorWithValue")>]
            static member IDBCursorWithValue with get() : AnonymousType324 = failwith "never" and set (v : AnonymousType324) : unit = failwith "never"
            [<FunScript.JSEmitInline("(XMLHttpRequestEventTarget)"); CompiledName("XMLHttpRequestEventTarget")>]
            static member XMLHttpRequestEventTarget with get() : AnonymousType325 = failwith "never" and set (v : AnonymousType325) : unit = failwith "never"
            [<FunScript.JSEmitInline("(AudioTrackList)"); CompiledName("AudioTrackList")>]
            static member AudioTrackList with get() : AnonymousType326 = failwith "never" and set (v : AnonymousType326) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEMorphologyElement)"); CompiledName("SVGFEMorphologyElement")>]
            static member SVGFEMorphologyElement with get() : AnonymousType327 = failwith "never" and set (v : AnonymousType327) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEFuncRElement)"); CompiledName("SVGFEFuncRElement")>]
            static member SVGFEFuncRElement with get() : AnonymousType328 = failwith "never" and set (v : AnonymousType328) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEDisplacementMapElement)"); CompiledName("SVGFEDisplacementMapElement")>]
            static member SVGFEDisplacementMapElement with get() : AnonymousType329 = failwith "never" and set (v : AnonymousType329) : unit = failwith "never"
            [<FunScript.JSEmitInline("(AnimationEvent)"); CompiledName("AnimationEvent")>]
            static member AnimationEvent with get() : AnonymousType330 = failwith "never" and set (v : AnonymousType330) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGComponentTransferFunctionElement)"); CompiledName("SVGComponentTransferFunctionElement")>]
            static member SVGComponentTransferFunctionElement with get() : AnonymousType331 = failwith "never" and set (v : AnonymousType331) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSRangeCollection)"); CompiledName("MSRangeCollection")>]
            static member MSRangeCollection with get() : AnonymousType332 = failwith "never" and set (v : AnonymousType332) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEDistantLightElement)"); CompiledName("SVGFEDistantLightElement")>]
            static member SVGFEDistantLightElement with get() : AnonymousType333 = failwith "never" and set (v : AnonymousType333) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEFuncBElement)"); CompiledName("SVGFEFuncBElement")>]
            static member SVGFEFuncBElement with get() : AnonymousType334 = failwith "never" and set (v : AnonymousType334) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBKeyRange)"); CompiledName("IDBKeyRange")>]
            static member IDBKeyRange with get() : AnonymousType335 = failwith "never" and set (v : AnonymousType335) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBTransaction)"); CompiledName("IDBTransaction")>]
            static member IDBTransaction with get() : AnonymousType336 = failwith "never" and set (v : AnonymousType336) : unit = failwith "never"
            [<FunScript.JSEmitInline("(AudioTrack)"); CompiledName("AudioTrack")>]
            static member AudioTrack with get() : AnonymousType337 = failwith "never" and set (v : AnonymousType337) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEConvolveMatrixElement)"); CompiledName("SVGFEConvolveMatrixElement")>]
            static member SVGFEConvolveMatrixElement with get() : AnonymousType338 = failwith "never" and set (v : AnonymousType338) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TextTrackCueList)"); CompiledName("TextTrackCueList")>]
            static member TextTrackCueList with get() : AnonymousType339 = failwith "never" and set (v : AnonymousType339) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSKeyframesRule)"); CompiledName("CSSKeyframesRule")>]
            static member CSSKeyframesRule with get() : AnonymousType340 = failwith "never" and set (v : AnonymousType340) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFETurbulenceElement)"); CompiledName("SVGFETurbulenceElement")>]
            static member SVGFETurbulenceElement with get() : AnonymousType341 = failwith "never" and set (v : AnonymousType341) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TextTrackList)"); CompiledName("TextTrackList")>]
            static member TextTrackList with get() : AnonymousType342 = failwith "never" and set (v : AnonymousType342) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEFuncGElement)"); CompiledName("SVGFEFuncGElement")>]
            static member SVGFEFuncGElement with get() : AnonymousType343 = failwith "never" and set (v : AnonymousType343) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEColorMatrixElement)"); CompiledName("SVGFEColorMatrixElement")>]
            static member SVGFEColorMatrixElement with get() : AnonymousType344 = failwith "never" and set (v : AnonymousType344) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFESpotLightElement)"); CompiledName("SVGFESpotLightElement")>]
            static member SVGFESpotLightElement with get() : AnonymousType345 = failwith "never" and set (v : AnonymousType345) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBDatabase)"); CompiledName("IDBDatabase")>]
            static member IDBDatabase with get() : AnonymousType346 = failwith "never" and set (v : AnonymousType346) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DOMStringList)"); CompiledName("DOMStringList")>]
            static member DOMStringList with get() : AnonymousType347 = failwith "never" and set (v : AnonymousType347) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBOpenDBRequest)"); CompiledName("IDBOpenDBRequest")>]
            static member IDBOpenDBRequest with get() : AnonymousType348 = failwith "never" and set (v : AnonymousType348) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLProgressElement)"); CompiledName("HTMLProgressElement")>]
            static member HTMLProgressElement with get() : AnonymousType349 = failwith "never" and set (v : AnonymousType349) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEOffsetElement)"); CompiledName("SVGFEOffsetElement")>]
            static member SVGFEOffsetElement with get() : AnonymousType350 = failwith "never" and set (v : AnonymousType350) : unit = failwith "never"
            [<FunScript.JSEmitInline("(TextTrack)"); CompiledName("TextTrack")>]
            static member TextTrack with get() : AnonymousType351 = failwith "never" and set (v : AnonymousType351) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBRequest)"); CompiledName("IDBRequest")>]
            static member IDBRequest with get() : AnonymousType352 = failwith "never" and set (v : AnonymousType352) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MessagePort)"); CompiledName("MessagePort")>]
            static member MessagePort with get() : AnonymousType353 = failwith "never" and set (v : AnonymousType353) : unit = failwith "never"
            [<FunScript.JSEmitInline("(FileReader)"); CompiledName("FileReader")>]
            static member FileReader with get() : AnonymousType354 = failwith "never" and set (v : AnonymousType354) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ApplicationCache)"); CompiledName("ApplicationCache")>]
            static member ApplicationCache with get() : AnonymousType355 = failwith "never" and set (v : AnonymousType355) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PopStateEvent)"); CompiledName("PopStateEvent")>]
            static member PopStateEvent with get() : AnonymousType356 = failwith "never" and set (v : AnonymousType356) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CSSKeyframeRule)"); CompiledName("CSSKeyframeRule")>]
            static member CSSKeyframeRule with get() : AnonymousType357 = failwith "never" and set (v : AnonymousType357) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSStream)"); CompiledName("MSStream")>]
            static member MSStream with get() : AnonymousType358 = failwith "never" and set (v : AnonymousType358) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSBlobBuilder)"); CompiledName("MSBlobBuilder")>]
            static member MSBlobBuilder with get() : AnonymousType359 = failwith "never" and set (v : AnonymousType359) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DOMSettableTokenList)"); CompiledName("DOMSettableTokenList")>]
            static member DOMSettableTokenList with get() : AnonymousType360 = failwith "never" and set (v : AnonymousType360) : unit = failwith "never"
            [<FunScript.JSEmitInline("(IDBFactory)"); CompiledName("IDBFactory")>]
            static member IDBFactory with get() : AnonymousType361 = failwith "never" and set (v : AnonymousType361) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSPointerEvent)"); CompiledName("MSPointerEvent")>]
            static member MSPointerEvent with get() : AnonymousType362 = failwith "never" and set (v : AnonymousType362) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSManipulationEvent)"); CompiledName("MSManipulationEvent")>]
            static member MSManipulationEvent with get() : AnonymousType363 = failwith "never" and set (v : AnonymousType363) : unit = failwith "never"
            [<FunScript.JSEmitInline("(FormData)"); CompiledName("FormData")>]
            static member FormData with get() : AnonymousType364 = failwith "never" and set (v : AnonymousType364) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLDataListElement)"); CompiledName("HTMLDataListElement")>]
            static member HTMLDataListElement with get() : AnonymousType365 = failwith "never" and set (v : AnonymousType365) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEImageElement)"); CompiledName("SVGFEImageElement")>]
            static member SVGFEImageElement with get() : AnonymousType366 = failwith "never" and set (v : AnonymousType366) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFECompositeElement)"); CompiledName("SVGFECompositeElement")>]
            static member SVGFECompositeElement with get() : AnonymousType367 = failwith "never" and set (v : AnonymousType367) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ValidityState)"); CompiledName("ValidityState")>]
            static member ValidityState with get() : AnonymousType368 = failwith "never" and set (v : AnonymousType368) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLTrackElement)"); CompiledName("HTMLTrackElement")>]
            static member HTMLTrackElement with get() : AnonymousType369 = failwith "never" and set (v : AnonymousType369) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSApp)"); CompiledName("MSApp")>]
            static member MSApp with get() : MSApp = failwith "never" and set (v : MSApp) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEComponentTransferElement)"); CompiledName("SVGFEComponentTransferElement")>]
            static member SVGFEComponentTransferElement with get() : AnonymousType370 = failwith "never" and set (v : AnonymousType370) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SVGFEDiffuseLightingElement)"); CompiledName("SVGFEDiffuseLightingElement")>]
            static member SVGFEDiffuseLightingElement with get() : AnonymousType371 = failwith "never" and set (v : AnonymousType371) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSCSSMatrix)"); CompiledName("MSCSSMatrix")>]
            static member MSCSSMatrix with get() : AnonymousType372 = failwith "never" and set (v : AnonymousType372) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Worker)"); CompiledName("Worker")>]
            static member Worker with get() : AnonymousType373 = failwith "never" and set (v : AnonymousType373) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSGraphicsTrust)"); CompiledName("MSGraphicsTrust")>]
            static member MSGraphicsTrust with get() : AnonymousType374 = failwith "never" and set (v : AnonymousType374) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SubtleCrypto)"); CompiledName("SubtleCrypto")>]
            static member SubtleCrypto with get() : AnonymousType375 = failwith "never" and set (v : AnonymousType375) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Crypto)"); CompiledName("Crypto")>]
            static member Crypto with get() : AnonymousType376 = failwith "never" and set (v : AnonymousType376) : unit = failwith "never"
            [<FunScript.JSEmitInline("(VideoPlaybackQuality)"); CompiledName("VideoPlaybackQuality")>]
            static member VideoPlaybackQuality with get() : AnonymousType377 = failwith "never" and set (v : AnonymousType377) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Key)"); CompiledName("Key")>]
            static member Key with get() : AnonymousType378 = failwith "never" and set (v : AnonymousType378) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DeviceAcceleration)"); CompiledName("DeviceAcceleration")>]
            static member DeviceAcceleration with get() : AnonymousType379 = failwith "never" and set (v : AnonymousType379) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLAllCollection)"); CompiledName("HTMLAllCollection")>]
            static member HTMLAllCollection with get() : AnonymousType380 = failwith "never" and set (v : AnonymousType380) : unit = failwith "never"
            [<FunScript.JSEmitInline("(AesGcmEncryptResult)"); CompiledName("AesGcmEncryptResult")>]
            static member AesGcmEncryptResult with get() : AnonymousType381 = failwith "never" and set (v : AnonymousType381) : unit = failwith "never"
            [<FunScript.JSEmitInline("(NavigationCompletedEvent)"); CompiledName("NavigationCompletedEvent")>]
            static member NavigationCompletedEvent with get() : AnonymousType382 = failwith "never" and set (v : AnonymousType382) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MutationRecord)"); CompiledName("MutationRecord")>]
            static member MutationRecord with get() : AnonymousType383 = failwith "never" and set (v : AnonymousType383) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MimeTypeArray)"); CompiledName("MimeTypeArray")>]
            static member MimeTypeArray with get() : AnonymousType384 = failwith "never" and set (v : AnonymousType384) : unit = failwith "never"
            [<FunScript.JSEmitInline("(KeyOperation)"); CompiledName("KeyOperation")>]
            static member KeyOperation with get() : AnonymousType385 = failwith "never" and set (v : AnonymousType385) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DOMStringMap)"); CompiledName("DOMStringMap")>]
            static member DOMStringMap with get() : AnonymousType386 = failwith "never" and set (v : AnonymousType386) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DeviceOrientationEvent)"); CompiledName("DeviceOrientationEvent")>]
            static member DeviceOrientationEvent with get() : AnonymousType387 = failwith "never" and set (v : AnonymousType387) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSMediaKeys)"); CompiledName("MSMediaKeys")>]
            static member MSMediaKeys with get() : AnonymousType388 = failwith "never" and set (v : AnonymousType388) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSMediaKeyMessageEvent)"); CompiledName("MSMediaKeyMessageEvent")>]
            static member MSMediaKeyMessageEvent with get() : AnonymousType389 = failwith "never" and set (v : AnonymousType389) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSHTMLWebViewElement)"); CompiledName("MSHTMLWebViewElement")>]
            static member MSHTMLWebViewElement with get() : AnonymousType390 = failwith "never" and set (v : AnonymousType390) : unit = failwith "never"
            [<FunScript.JSEmitInline("(NavigationEvent)"); CompiledName("NavigationEvent")>]
            static member NavigationEvent with get() : AnonymousType391 = failwith "never" and set (v : AnonymousType391) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SourceBuffer)"); CompiledName("SourceBuffer")>]
            static member SourceBuffer with get() : AnonymousType392 = failwith "never" and set (v : AnonymousType392) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSInputMethodContext)"); CompiledName("MSInputMethodContext")>]
            static member MSInputMethodContext with get() : AnonymousType393 = failwith "never" and set (v : AnonymousType393) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DeviceRotationRate)"); CompiledName("DeviceRotationRate")>]
            static member DeviceRotationRate with get() : AnonymousType394 = failwith "never" and set (v : AnonymousType394) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PluginArray)"); CompiledName("PluginArray")>]
            static member PluginArray with get() : AnonymousType395 = failwith "never" and set (v : AnonymousType395) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSMediaKeyError)"); CompiledName("MSMediaKeyError")>]
            static member MSMediaKeyError with get() : AnonymousType396 = failwith "never" and set (v : AnonymousType396) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Plugin)"); CompiledName("Plugin")>]
            static member Plugin with get() : AnonymousType397 = failwith "never" and set (v : AnonymousType397) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MediaSource)"); CompiledName("MediaSource")>]
            static member MediaSource with get() : AnonymousType398 = failwith "never" and set (v : AnonymousType398) : unit = failwith "never"
            [<FunScript.JSEmitInline("(SourceBufferList)"); CompiledName("SourceBufferList")>]
            static member SourceBufferList with get() : AnonymousType399 = failwith "never" and set (v : AnonymousType399) : unit = failwith "never"
            [<FunScript.JSEmitInline("(XMLDocument)"); CompiledName("XMLDocument")>]
            static member XMLDocument with get() : AnonymousType400 = failwith "never" and set (v : AnonymousType400) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DeviceMotionEvent)"); CompiledName("DeviceMotionEvent")>]
            static member DeviceMotionEvent with get() : AnonymousType401 = failwith "never" and set (v : AnonymousType401) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MimeType)"); CompiledName("MimeType")>]
            static member MimeType with get() : AnonymousType402 = failwith "never" and set (v : AnonymousType402) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PointerEvent)"); CompiledName("PointerEvent")>]
            static member PointerEvent with get() : AnonymousType403 = failwith "never" and set (v : AnonymousType403) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MutationObserver)"); CompiledName("MutationObserver")>]
            static member MutationObserver with get() : AnonymousType404 = failwith "never" and set (v : AnonymousType404) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSWebViewAsyncOperation)"); CompiledName("MSWebViewAsyncOperation")>]
            static member MSWebViewAsyncOperation with get() : AnonymousType405 = failwith "never" and set (v : AnonymousType405) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ScriptNotifyEvent)"); CompiledName("ScriptNotifyEvent")>]
            static member ScriptNotifyEvent with get() : AnonymousType406 = failwith "never" and set (v : AnonymousType406) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PerformanceNavigationTiming)"); CompiledName("PerformanceNavigationTiming")>]
            static member PerformanceNavigationTiming with get() : AnonymousType407 = failwith "never" and set (v : AnonymousType407) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSMediaKeyNeededEvent)"); CompiledName("MSMediaKeyNeededEvent")>]
            static member MSMediaKeyNeededEvent with get() : AnonymousType408 = failwith "never" and set (v : AnonymousType408) : unit = failwith "never"
            [<FunScript.JSEmitInline("(LongRunningScriptDetectedEvent)"); CompiledName("LongRunningScriptDetectedEvent")>]
            static member LongRunningScriptDetectedEvent with get() : AnonymousType409 = failwith "never" and set (v : AnonymousType409) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSAppView)"); CompiledName("MSAppView")>]
            static member MSAppView with get() : AnonymousType410 = failwith "never" and set (v : AnonymousType410) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PerfWidgetExternal)"); CompiledName("PerfWidgetExternal")>]
            static member PerfWidgetExternal with get() : AnonymousType411 = failwith "never" and set (v : AnonymousType411) : unit = failwith "never"
            [<FunScript.JSEmitInline("(PageTransitionEvent)"); CompiledName("PageTransitionEvent")>]
            static member PageTransitionEvent with get() : AnonymousType412 = failwith "never" and set (v : AnonymousType412) : unit = failwith "never"
            [<FunScript.JSEmitInline("(HTMLDocument)"); CompiledName("HTMLDocument")>]
            static member HTMLDocument with get() : AnonymousType413 = failwith "never" and set (v : AnonymousType413) : unit = failwith "never"
            [<FunScript.JSEmitInline("(KeyPair)"); CompiledName("KeyPair")>]
            static member KeyPair with get() : AnonymousType414 = failwith "never" and set (v : AnonymousType414) : unit = failwith "never"
            [<FunScript.JSEmitInline("(MSMediaKeySession)"); CompiledName("MSMediaKeySession")>]
            static member MSMediaKeySession with get() : AnonymousType415 = failwith "never" and set (v : AnonymousType415) : unit = failwith "never"
            [<FunScript.JSEmitInline("(UnviewableContentIdentifiedEvent)"); CompiledName("UnviewableContentIdentifiedEvent")>]
            static member UnviewableContentIdentifiedEvent with get() : AnonymousType416 = failwith "never" and set (v : AnonymousType416) : unit = failwith "never"
            [<FunScript.JSEmitInline("(CryptoOperation)"); CompiledName("CryptoOperation")>]
            static member CryptoOperation with get() : AnonymousType417 = failwith "never" and set (v : AnonymousType417) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLTexture)"); CompiledName("WebGLTexture")>]
            static member WebGLTexture with get() : AnonymousType418 = failwith "never" and set (v : AnonymousType418) : unit = failwith "never"
            [<FunScript.JSEmitInline("(OES_texture_float)"); CompiledName("OES_texture_float")>]
            static member OES_texture_float with get() : AnonymousType419 = failwith "never" and set (v : AnonymousType419) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLContextEvent)"); CompiledName("WebGLContextEvent")>]
            static member WebGLContextEvent with get() : AnonymousType420 = failwith "never" and set (v : AnonymousType420) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLRenderbuffer)"); CompiledName("WebGLRenderbuffer")>]
            static member WebGLRenderbuffer with get() : AnonymousType421 = failwith "never" and set (v : AnonymousType421) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLUniformLocation)"); CompiledName("WebGLUniformLocation")>]
            static member WebGLUniformLocation with get() : AnonymousType422 = failwith "never" and set (v : AnonymousType422) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLActiveInfo)"); CompiledName("WebGLActiveInfo")>]
            static member WebGLActiveInfo with get() : AnonymousType423 = failwith "never" and set (v : AnonymousType423) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WEBGL_compressed_texture_s3tc)"); CompiledName("WEBGL_compressed_texture_s3tc")>]
            static member WEBGL_compressed_texture_s3tc with get() : AnonymousType424 = failwith "never" and set (v : AnonymousType424) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLRenderingContext)"); CompiledName("WebGLRenderingContext")>]
            static member WebGLRenderingContext with get() : AnonymousType425 = failwith "never" and set (v : AnonymousType425) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLProgram)"); CompiledName("WebGLProgram")>]
            static member WebGLProgram with get() : AnonymousType426 = failwith "never" and set (v : AnonymousType426) : unit = failwith "never"
            [<FunScript.JSEmitInline("(OES_standard_derivatives)"); CompiledName("OES_standard_derivatives")>]
            static member OES_standard_derivatives with get() : AnonymousType427 = failwith "never" and set (v : AnonymousType427) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLFramebuffer)"); CompiledName("WebGLFramebuffer")>]
            static member WebGLFramebuffer with get() : AnonymousType428 = failwith "never" and set (v : AnonymousType428) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLShader)"); CompiledName("WebGLShader")>]
            static member WebGLShader with get() : AnonymousType429 = failwith "never" and set (v : AnonymousType429) : unit = failwith "never"
            [<FunScript.JSEmitInline("(OES_texture_float_linear)"); CompiledName("OES_texture_float_linear")>]
            static member OES_texture_float_linear with get() : AnonymousType430 = failwith "never" and set (v : AnonymousType430) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLObject)"); CompiledName("WebGLObject")>]
            static member WebGLObject with get() : AnonymousType431 = failwith "never" and set (v : AnonymousType431) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLBuffer)"); CompiledName("WebGLBuffer")>]
            static member WebGLBuffer with get() : AnonymousType432 = failwith "never" and set (v : AnonymousType432) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WebGLShaderPrecisionFormat)"); CompiledName("WebGLShaderPrecisionFormat")>]
            static member WebGLShaderPrecisionFormat with get() : AnonymousType433 = failwith "never" and set (v : AnonymousType433) : unit = failwith "never"
            [<FunScript.JSEmitInline("(EXT_texture_filter_anisotropic)"); CompiledName("EXT_texture_filter_anisotropic")>]
            static member EXT_texture_filter_anisotropic with get() : AnonymousType434 = failwith "never" and set (v : AnonymousType434) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Option)"); CompiledName("Option")>]
            static member Option with get() : AnonymousType435 = failwith "never" and set (v : AnonymousType435) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Image)"); CompiledName("Image")>]
            static member Image with get() : AnonymousType436 = failwith "never" and set (v : AnonymousType436) : unit = failwith "never"
            [<FunScript.JSEmitInline("(Audio)"); CompiledName("Audio")>]
            static member Audio with get() : AnonymousType437 = failwith "never" and set (v : AnonymousType437) : unit = failwith "never"
            [<FunScript.JSEmitInline("Intl")>]
            static member Intl with get() : Intl = failwith "never"
            [<FunScript.JSEmitInline("(ondragend)"); CompiledName("ondragend")>]
            static member ondragend with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onkeydown)"); CompiledName("onkeydown")>]
            static member onkeydown with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondragover)"); CompiledName("ondragover")>]
            static member ondragover with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onkeyup)"); CompiledName("onkeyup")>]
            static member onkeyup with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onreset)"); CompiledName("onreset")>]
            static member onreset with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmouseup)"); CompiledName("onmouseup")>]
            static member onmouseup with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondragstart)"); CompiledName("ondragstart")>]
            static member ondragstart with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondrag)"); CompiledName("ondrag")>]
            static member ondrag with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(screenX)"); CompiledName("screenX")>]
            static member screenX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmouseover)"); CompiledName("onmouseover")>]
            static member onmouseover with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondragleave)"); CompiledName("ondragleave")>]
            static member ondragleave with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(history)"); CompiledName("history")>]
            static member history with get() : History = failwith "never" and set (v : History) : unit = failwith "never"
            [<FunScript.JSEmitInline("(pageXOffset)"); CompiledName("pageXOffset")>]
            static member pageXOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(name)"); CompiledName("name")>]
            static member name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onafterprint)"); CompiledName("onafterprint")>]
            static member onafterprint with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpause)"); CompiledName("onpause")>]
            static member onpause with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onbeforeprint)"); CompiledName("onbeforeprint")>]
            static member onbeforeprint with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(top)"); CompiledName("top")>]
            static member top with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmousedown)"); CompiledName("onmousedown")>]
            static member onmousedown with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onseeked)"); CompiledName("onseeked")>]
            static member onseeked with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(opener)"); CompiledName("opener")>]
            static member opener with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onclick)"); CompiledName("onclick")>]
            static member onclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(innerHeight)"); CompiledName("innerHeight")>]
            static member innerHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onwaiting)"); CompiledName("onwaiting")>]
            static member onwaiting with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ononline)"); CompiledName("ononline")>]
            static member ononline with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondurationchange)"); CompiledName("ondurationchange")>]
            static member ondurationchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(frames)"); CompiledName("frames")>]
            static member frames with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onblur)"); CompiledName("onblur")>]
            static member onblur with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onemptied)"); CompiledName("onemptied")>]
            static member onemptied with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onseeking)"); CompiledName("onseeking")>]
            static member onseeking with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(oncanplay)"); CompiledName("oncanplay")>]
            static member oncanplay with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(outerWidth)"); CompiledName("outerWidth")>]
            static member outerWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onstalled)"); CompiledName("onstalled")>]
            static member onstalled with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmousemove)"); CompiledName("onmousemove")>]
            static member onmousemove with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(innerWidth)"); CompiledName("innerWidth")>]
            static member innerWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onoffline)"); CompiledName("onoffline")>]
            static member onoffline with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(length)"); CompiledName("length")>]
            static member length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(screen)"); CompiledName("screen")>]
            static member screen with get() : Screen = failwith "never" and set (v : Screen) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onbeforeunload)"); CompiledName("onbeforeunload")>]
            static member onbeforeunload with get() : System.Func<BeforeUnloadEvent, obj> = failwith "never" and set (v : System.Func<BeforeUnloadEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onratechange)"); CompiledName("onratechange")>]
            static member onratechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onstorage)"); CompiledName("onstorage")>]
            static member onstorage with get() : System.Func<StorageEvent, obj> = failwith "never" and set (v : System.Func<StorageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onloadstart)"); CompiledName("onloadstart")>]
            static member onloadstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondragenter)"); CompiledName("ondragenter")>]
            static member ondragenter with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onsubmit)"); CompiledName("onsubmit")>]
            static member onsubmit with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(self)"); CompiledName("self")>]
            static member self with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("(document)"); CompiledName("document")>]
            static member document with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onprogress)"); CompiledName("onprogress")>]
            static member onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondblclick)"); CompiledName("ondblclick")>]
            static member ondblclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(pageYOffset)"); CompiledName("pageYOffset")>]
            static member pageYOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(oncontextmenu)"); CompiledName("oncontextmenu")>]
            static member oncontextmenu with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onchange)"); CompiledName("onchange")>]
            static member onchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onloadedmetadata)"); CompiledName("onloadedmetadata")>]
            static member onloadedmetadata with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onplay)"); CompiledName("onplay")>]
            static member onplay with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onerror)"); CompiledName("onerror")>]
            static member onerror with get() : ErrorEventHandlerDelegate = failwith "never" and set (v : ErrorEventHandlerDelegate) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onplaying)"); CompiledName("onplaying")>]
            static member onplaying with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(parent)"); CompiledName("parent")>]
            static member parent with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("(location)"); CompiledName("location")>]
            static member location with get() : Location = failwith "never" and set (v : Location) : unit = failwith "never"
            [<FunScript.JSEmitInline("(oncanplaythrough)"); CompiledName("oncanplaythrough")>]
            static member oncanplaythrough with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onabort)"); CompiledName("onabort")>]
            static member onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onreadystatechange)"); CompiledName("onreadystatechange")>]
            static member onreadystatechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(outerHeight)"); CompiledName("outerHeight")>]
            static member outerHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onkeypress)"); CompiledName("onkeypress")>]
            static member onkeypress with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(frameElement)"); CompiledName("frameElement")>]
            static member frameElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onloadeddata)"); CompiledName("onloadeddata")>]
            static member onloadeddata with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onsuspend)"); CompiledName("onsuspend")>]
            static member onsuspend with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(window)"); CompiledName("window")>]
            static member window with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onfocus)"); CompiledName("onfocus")>]
            static member onfocus with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmessage)"); CompiledName("onmessage")>]
            static member onmessage with get() : System.Func<MessageEvent, obj> = failwith "never" and set (v : System.Func<MessageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ontimeupdate)"); CompiledName("ontimeupdate")>]
            static member ontimeupdate with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onresize)"); CompiledName("onresize")>]
            static member onresize with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onselect)"); CompiledName("onselect")>]
            static member onselect with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(navigator)"); CompiledName("navigator")>]
            static member navigator with get() : Navigator = failwith "never" and set (v : Navigator) : unit = failwith "never"
            [<FunScript.JSEmitInline("(styleMedia)"); CompiledName("styleMedia")>]
            static member styleMedia with get() : StyleMedia = failwith "never" and set (v : StyleMedia) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondrop)"); CompiledName("ondrop")>]
            static member ondrop with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmouseout)"); CompiledName("onmouseout")>]
            static member onmouseout with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onended)"); CompiledName("onended")>]
            static member onended with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onhashchange)"); CompiledName("onhashchange")>]
            static member onhashchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onunload)"); CompiledName("onunload")>]
            static member onunload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onscroll)"); CompiledName("onscroll")>]
            static member onscroll with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(screenY)"); CompiledName("screenY")>]
            static member screenY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmousewheel)"); CompiledName("onmousewheel")>]
            static member onmousewheel with get() : System.Func<MouseWheelEvent, obj> = failwith "never" and set (v : System.Func<MouseWheelEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onload)"); CompiledName("onload")>]
            static member onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onvolumechange)"); CompiledName("onvolumechange")>]
            static member onvolumechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(oninput)"); CompiledName("oninput")>]
            static member oninput with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(performance)"); CompiledName("performance")>]
            static member performance with get() : Performance = failwith "never" and set (v : Performance) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointerdown)"); CompiledName("onmspointerdown")>]
            static member onmspointerdown with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(animationStartTime)"); CompiledName("animationStartTime")>]
            static member animationStartTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmsgesturedoubletap)"); CompiledName("onmsgesturedoubletap")>]
            static member onmsgesturedoubletap with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointerhover)"); CompiledName("onmspointerhover")>]
            static member onmspointerhover with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmsgesturehold)"); CompiledName("onmsgesturehold")>]
            static member onmsgesturehold with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointermove)"); CompiledName("onmspointermove")>]
            static member onmspointermove with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmsgesturechange)"); CompiledName("onmsgesturechange")>]
            static member onmsgesturechange with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmsgesturestart)"); CompiledName("onmsgesturestart")>]
            static member onmsgesturestart with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointercancel)"); CompiledName("onmspointercancel")>]
            static member onmspointercancel with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmsgestureend)"); CompiledName("onmsgestureend")>]
            static member onmsgestureend with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmsgesturetap)"); CompiledName("onmsgesturetap")>]
            static member onmsgesturetap with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointerout)"); CompiledName("onmspointerout")>]
            static member onmspointerout with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(msAnimationStartTime)"); CompiledName("msAnimationStartTime")>]
            static member msAnimationStartTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(applicationCache)"); CompiledName("applicationCache")>]
            static member applicationCache with get() : ApplicationCache = failwith "never" and set (v : ApplicationCache) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmsinertiastart)"); CompiledName("onmsinertiastart")>]
            static member onmsinertiastart with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointerover)"); CompiledName("onmspointerover")>]
            static member onmspointerover with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpopstate)"); CompiledName("onpopstate")>]
            static member onpopstate with get() : System.Func<PopStateEvent, obj> = failwith "never" and set (v : System.Func<PopStateEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointerup)"); CompiledName("onmspointerup")>]
            static member onmspointerup with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpageshow)"); CompiledName("onpageshow")>]
            static member onpageshow with get() : System.Func<PageTransitionEvent, obj> = failwith "never" and set (v : System.Func<PageTransitionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondevicemotion)"); CompiledName("ondevicemotion")>]
            static member ondevicemotion with get() : System.Func<DeviceMotionEvent, obj> = failwith "never" and set (v : System.Func<DeviceMotionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(devicePixelRatio)"); CompiledName("devicePixelRatio")>]
            static member devicePixelRatio with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(msCrypto)"); CompiledName("msCrypto")>]
            static member msCrypto with get() : Crypto = failwith "never" and set (v : Crypto) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ondeviceorientation)"); CompiledName("ondeviceorientation")>]
            static member ondeviceorientation with get() : System.Func<DeviceOrientationEvent, obj> = failwith "never" and set (v : System.Func<DeviceOrientationEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(doNotTrack)"); CompiledName("doNotTrack")>]
            static member doNotTrack with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointerenter)"); CompiledName("onmspointerenter")>]
            static member onmspointerenter with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpagehide)"); CompiledName("onpagehide")>]
            static member onpagehide with get() : System.Func<PageTransitionEvent, obj> = failwith "never" and set (v : System.Func<PageTransitionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmspointerleave)"); CompiledName("onmspointerleave")>]
            static member onmspointerleave with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(alert({args}))"); CompiledName("alert")>]
            static member alert(?message : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("(scroll({args}))"); CompiledName("scroll")>]
            static member scroll(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(focus())"); CompiledName("focus")>]
            static member focus() : unit = failwith "never"
            [<FunScript.JSEmitInline("(scrollTo({args}))"); CompiledName("scrollTo")>]
            static member scrollTo(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(print())"); CompiledName("print")>]
            static member print() : unit = failwith "never"
            [<FunScript.JSEmitInline("(prompt({args}))"); CompiledName("prompt")>]
            static member prompt(?message : string, ?_default : string) : string = failwith "never"
            [<FunScript.JSEmitInline("(toString())"); CompiledName("toString")>]
            static member toString() : string = failwith "never"
            [<FunScript.JSEmitInline("(open({args}))"); CompiledName("_open")>]
            static member _open(?url : string, ?target : string, ?features : string, ?replace : bool) : Window = failwith "never"
            [<FunScript.JSEmitInline("(scrollBy({args}))"); CompiledName("scrollBy")>]
            static member scrollBy(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(confirm({args}))"); CompiledName("confirm")>]
            static member confirm(?message : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("(close())"); CompiledName("close")>]
            static member close() : unit = failwith "never"
            [<FunScript.JSEmitInline("(postMessage({args}))"); CompiledName("postMessage")>]
            static member postMessage(message : obj, targetOrigin : string, ?ports : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("(showModalDialog({args}))"); CompiledName("showModalDialog")>]
            static member showModalDialog(?url : string, ?argument : obj, ?options : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("(blur())"); CompiledName("blur")>]
            static member blur() : unit = failwith "never"
            [<FunScript.JSEmitInline("(getSelection())"); CompiledName("getSelection")>]
            static member getSelection() : Selection = failwith "never"
            [<FunScript.JSEmitInline("(getComputedStyle({args}))"); CompiledName("getComputedStyle")>]
            static member getComputedStyle(elt : Element, ?pseudoElt : string) : CSSStyleDeclaration = failwith "never"
            [<FunScript.JSEmitInline("(msCancelRequestAnimationFrame({args}))"); CompiledName("msCancelRequestAnimationFrame")>]
            static member msCancelRequestAnimationFrame(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(matchMedia({args}))"); CompiledName("matchMedia")>]
            static member matchMedia(mediaQuery : string) : MediaQueryList = failwith "never"
            [<FunScript.JSEmitInline("(cancelAnimationFrame({args}))"); CompiledName("cancelAnimationFrame")>]
            static member cancelAnimationFrame(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(msIsStaticHTML({args}))"); CompiledName("msIsStaticHTML")>]
            static member msIsStaticHTML(html : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("(msMatchMedia({args}))"); CompiledName("msMatchMedia")>]
            static member msMatchMedia(mediaQuery : string) : MediaQueryList = failwith "never"
            [<FunScript.JSEmitInline("(requestAnimationFrame({args}))"); CompiledName("requestAnimationFrame")>]
            static member requestAnimationFrame(callback : FrameRequestCallbackDelegate) : float = failwith "never"
            [<FunScript.JSEmitInline("(msRequestAnimationFrame({args}))"); CompiledName("msRequestAnimationFrame")>]
            static member msRequestAnimationFrame(callback : FrameRequestCallbackDelegate) : float = failwith "never"
            [<FunScript.JSEmitInline("(removeEventListener({args}))"); CompiledName("removeEventListener")>]
            static member removeEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(dispatchEvent({args}))"); CompiledName("dispatchEvent")>]
            static member dispatchEvent(evt : Event) : bool = failwith "never"
            [<FunScript.JSEmitInline("(attachEvent({args}))"); CompiledName("attachEvent")>]
            static member attachEvent(_event : string, listener : EventListenerDelegate) : bool = failwith "never"
            [<FunScript.JSEmitInline("(detachEvent({args}))"); CompiledName("detachEvent")>]
            static member detachEvent(_event : string, listener : EventListenerDelegate) : unit = failwith "never"
            [<FunScript.JSEmitInline("(localStorage)"); CompiledName("localStorage")>]
            static member localStorage with get() : Storage = failwith "never" and set (v : Storage) : unit = failwith "never"
            [<FunScript.JSEmitInline("(status)"); CompiledName("status")>]
            static member status with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmouseleave)"); CompiledName("onmouseleave")>]
            static member onmouseleave with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(screenLeft)"); CompiledName("screenLeft")>]
            static member screenLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(offscreenBuffering)"); CompiledName("offscreenBuffering")>]
            static member offscreenBuffering with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("(maxConnectionsPerServer)"); CompiledName("maxConnectionsPerServer")>]
            static member maxConnectionsPerServer with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onmouseenter)"); CompiledName("onmouseenter")>]
            static member onmouseenter with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(clipboardData)"); CompiledName("clipboardData")>]
            static member clipboardData with get() : DataTransfer = failwith "never" and set (v : DataTransfer) : unit = failwith "never"
            [<FunScript.JSEmitInline("(defaultStatus)"); CompiledName("defaultStatus")>]
            static member defaultStatus with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("(clientInformation)"); CompiledName("clientInformation")>]
            static member clientInformation with get() : Navigator = failwith "never" and set (v : Navigator) : unit = failwith "never"
            [<FunScript.JSEmitInline("(closed)"); CompiledName("closed")>]
            static member closed with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onhelp)"); CompiledName("onhelp")>]
            static member onhelp with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(external)"); CompiledName("_external")>]
            static member _external with get() : External = failwith "never" and set (v : External) : unit = failwith "never"
            [<FunScript.JSEmitInline("(event)"); CompiledName("_event")>]
            static member _event with get() : MSEventObj = failwith "never" and set (v : MSEventObj) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onfocusout)"); CompiledName("onfocusout")>]
            static member onfocusout with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(screenTop)"); CompiledName("screenTop")>]
            static member screenTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onfocusin)"); CompiledName("onfocusin")>]
            static member onfocusin with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(showModelessDialog({args}))"); CompiledName("showModelessDialog")>]
            static member showModelessDialog(?url : string, ?argument : obj, ?options : obj) : Window = failwith "never"
            [<FunScript.JSEmitInline("(navigate({args}))"); CompiledName("navigate")>]
            static member navigate(url : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("(resizeBy({args}))"); CompiledName("resizeBy")>]
            static member resizeBy(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(item({args}))"); CompiledName("item")>]
            static member item(index : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("(resizeTo({args}))"); CompiledName("resizeTo")>]
            static member resizeTo(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(createPopup({args}))"); CompiledName("createPopup")>]
            static member createPopup(?arguments : obj) : MSPopupWindow = failwith "never"
            [<FunScript.JSEmitInline("(toStaticHTML({args}))"); CompiledName("toStaticHTML")>]
            static member toStaticHTML(html : string) : string = failwith "never"
            [<FunScript.JSEmitInline("(execScript({args}))"); CompiledName("execScript")>]
            static member execScript(code : string, ?language : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("(msWriteProfilerMark({args}))"); CompiledName("msWriteProfilerMark")>]
            static member msWriteProfilerMark(profilerMarkName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("(moveTo({args}))"); CompiledName("moveTo")>]
            static member moveTo(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(moveBy({args}))"); CompiledName("moveBy")>]
            static member moveBy(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(showHelp({args}))"); CompiledName("showHelp")>]
            static member showHelp(url : string, ?helpArg : obj, ?features : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("(captureEvents())"); CompiledName("captureEvents")>]
            static member captureEvents() : unit = failwith "never"
            [<FunScript.JSEmitInline("(releaseEvents())"); CompiledName("releaseEvents")>]
            static member releaseEvents() : unit = failwith "never"
            [<FunScript.JSEmitInline("(sessionStorage)"); CompiledName("sessionStorage")>]
            static member sessionStorage with get() : Storage = failwith "never" and set (v : Storage) : unit = failwith "never"
            [<FunScript.JSEmitInline("(clearTimeout({args}))"); CompiledName("clearTimeout")>]
            static member clearTimeout(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(setTimeout({args}))"); CompiledName("setTimeout")>]
            static member setTimeout(handler : obj, ?timeout : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("(setTimeout({args}))"); CompiledName("setTimeout1")>]
            static member setTimeout(handler : obj, timeout : obj, [<System.ParamArray>] args : array<obj>) : float = failwith "never"
            [<FunScript.JSEmitInline("(clearInterval({args}))"); CompiledName("clearInterval")>]
            static member clearInterval(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(setInterval({args}))"); CompiledName("setInterval")>]
            static member setInterval(handler : obj, ?timeout : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("(setInterval({args}))"); CompiledName("setInterval1")>]
            static member setInterval(handler : obj, timeout : obj, [<System.ParamArray>] args : array<obj>) : float = failwith "never"
            [<FunScript.JSEmitInline("(msSetImmediate({args}))"); CompiledName("msSetImmediate")>]
            static member msSetImmediate(expression : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("(msSetImmediate({args}))"); CompiledName("msSetImmediate1")>]
            static member msSetImmediateOverload2(expression : obj, [<System.ParamArray>] args : array<obj>) : float = failwith "never"
            [<FunScript.JSEmitInline("(clearImmediate({args}))"); CompiledName("clearImmediate")>]
            static member clearImmediate(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(msClearImmediate({args}))"); CompiledName("msClearImmediate")>]
            static member msClearImmediate(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(setImmediate({args}))"); CompiledName("setImmediate")>]
            static member setImmediate(expression : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("(setImmediate({args}))"); CompiledName("setImmediate1")>]
            static member setImmediateOverload2(expression : obj, [<System.ParamArray>] args : array<obj>) : float = failwith "never"
            [<FunScript.JSEmitInline("(btoa({args}))"); CompiledName("btoa")>]
            static member btoa(rawString : string) : string = failwith "never"
            [<FunScript.JSEmitInline("(atob({args}))"); CompiledName("atob")>]
            static member atob(encodedString : string) : string = failwith "never"
            [<FunScript.JSEmitInline("(msIndexedDB)"); CompiledName("msIndexedDB")>]
            static member msIndexedDB with get() : IDBFactory = failwith "never" and set (v : IDBFactory) : unit = failwith "never"
            [<FunScript.JSEmitInline("(indexedDB)"); CompiledName("indexedDB")>]
            static member indexedDB with get() : IDBFactory = failwith "never" and set (v : IDBFactory) : unit = failwith "never"
            [<FunScript.JSEmitInline("(console)"); CompiledName("console")>]
            static member console with get() : Console = failwith "never" and set (v : Console) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpointerenter)"); CompiledName("onpointerenter")>]
            static member onpointerenter with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpointerout)"); CompiledName("onpointerout")>]
            static member onpointerout with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpointerdown)"); CompiledName("onpointerdown")>]
            static member onpointerdown with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpointerup)"); CompiledName("onpointerup")>]
            static member onpointerup with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpointercancel)"); CompiledName("onpointercancel")>]
            static member onpointercancel with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpointerover)"); CompiledName("onpointerover")>]
            static member onpointerover with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpointermove)"); CompiledName("onpointermove")>]
            static member onpointermove with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(onpointerleave)"); CompiledName("onpointerleave")>]
            static member onpointerleave with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener")>]
            static member addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener1")>]
            static member addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"help\", {args})"); CompiledName("addEventListener2")>]
            static member addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"focusout\", {args})"); CompiledName("addEventListener3")>]
            static member addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"focusin\", {args})"); CompiledName("addEventListener4")>]
            static member addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener5")>]
            static member addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener6")>]
            static member addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener7")>]
            static member addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener8")>]
            static member addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener9")>]
            static member addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener10")>]
            static member addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener11")>]
            static member addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener12")>]
            static member addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"dragend\", {args})"); CompiledName("addEventListener13")>]
            static member addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"keydown\", {args})"); CompiledName("addEventListener14")>]
            static member addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"dragover\", {args})"); CompiledName("addEventListener15")>]
            static member addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"keyup\", {args})"); CompiledName("addEventListener16")>]
            static member addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"reset\", {args})"); CompiledName("addEventListener17")>]
            static member addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener18")>]
            static member addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener19")>]
            static member addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"drag\", {args})"); CompiledName("addEventListener20")>]
            static member addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener21")>]
            static member addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener22")>]
            static member addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"afterprint\", {args})"); CompiledName("addEventListener23")>]
            static member addEventListener_afterprint(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pause\", {args})"); CompiledName("addEventListener24")>]
            static member addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"beforeprint\", {args})"); CompiledName("addEventListener25")>]
            static member addEventListener_beforeprint(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener26")>]
            static member addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"seeked\", {args})"); CompiledName("addEventListener27")>]
            static member addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"click\", {args})"); CompiledName("addEventListener28")>]
            static member addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"waiting\", {args})"); CompiledName("addEventListener29")>]
            static member addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"online\", {args})"); CompiledName("addEventListener30")>]
            static member addEventListener_online(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener31")>]
            static member addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"blur\", {args})"); CompiledName("addEventListener32")>]
            static member addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"emptied\", {args})"); CompiledName("addEventListener33")>]
            static member addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"seeking\", {args})"); CompiledName("addEventListener34")>]
            static member addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"canplay\", {args})"); CompiledName("addEventListener35")>]
            static member addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"stalled\", {args})"); CompiledName("addEventListener36")>]
            static member addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener37")>]
            static member addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"offline\", {args})"); CompiledName("addEventListener38")>]
            static member addEventListener_offline(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"beforeunload\", {args})"); CompiledName("addEventListener39")>]
            static member addEventListener_beforeunload(listener : System.Func<BeforeUnloadEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener40")>]
            static member addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"storage\", {args})"); CompiledName("addEventListener41")>]
            static member addEventListener_storage(listener : System.Func<StorageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener42")>]
            static member addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener43")>]
            static member addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"submit\", {args})"); CompiledName("addEventListener44")>]
            static member addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"progress\", {args})"); CompiledName("addEventListener45")>]
            static member addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener46")>]
            static member addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener47")>]
            static member addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"change\", {args})"); CompiledName("addEventListener48")>]
            static member addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener49")>]
            static member addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"play\", {args})"); CompiledName("addEventListener50")>]
            static member addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"playing\", {args})"); CompiledName("addEventListener51")>]
            static member addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener52")>]
            static member addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"abort\", {args})"); CompiledName("addEventListener53")>]
            static member addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener54")>]
            static member addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"keypress\", {args})"); CompiledName("addEventListener55")>]
            static member addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener56")>]
            static member addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"suspend\", {args})"); CompiledName("addEventListener57")>]
            static member addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"focus\", {args})"); CompiledName("addEventListener58")>]
            static member addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"message\", {args})"); CompiledName("addEventListener59")>]
            static member addEventListener_message(listener : System.Func<MessageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener60")>]
            static member addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"resize\", {args})"); CompiledName("addEventListener61")>]
            static member addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"select\", {args})"); CompiledName("addEventListener62")>]
            static member addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"drop\", {args})"); CompiledName("addEventListener63")>]
            static member addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener64")>]
            static member addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"ended\", {args})"); CompiledName("addEventListener65")>]
            static member addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"hashchange\", {args})"); CompiledName("addEventListener66")>]
            static member addEventListener_hashchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"unload\", {args})"); CompiledName("addEventListener67")>]
            static member addEventListener_unload(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"scroll\", {args})"); CompiledName("addEventListener68")>]
            static member addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener69")>]
            static member addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"load\", {args})"); CompiledName("addEventListener70")>]
            static member addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener71")>]
            static member addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"input\", {args})"); CompiledName("addEventListener72")>]
            static member addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener73")>]
            static member addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener74")>]
            static member addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener75")>]
            static member addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener76")>]
            static member addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener77")>]
            static member addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener78")>]
            static member addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener79")>]
            static member addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener80")>]
            static member addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener81")>]
            static member addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener82")>]
            static member addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener83")>]
            static member addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener84")>]
            static member addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener85")>]
            static member addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"popstate\", {args})"); CompiledName("addEventListener86")>]
            static member addEventListener_popstate(listener : System.Func<PopStateEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener87")>]
            static member addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pageshow\", {args})"); CompiledName("addEventListener88")>]
            static member addEventListener_pageshow(listener : System.Func<PageTransitionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"devicemotion\", {args})"); CompiledName("addEventListener89")>]
            static member addEventListener_devicemotion(listener : System.Func<DeviceMotionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"deviceorientation\", {args})"); CompiledName("addEventListener90")>]
            static member addEventListener_deviceorientation(listener : System.Func<DeviceOrientationEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener91")>]
            static member addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"pagehide\", {args})"); CompiledName("addEventListener92")>]
            static member addEventListener_pagehide(listener : System.Func<PageTransitionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener93")>]
            static member addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(addEventListener({args}))"); CompiledName("addEventListener94")>]
            static member addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("(importScripts())"); CompiledName("importScripts")>]
            static member importScripts() : unit = failwith "never"
            [<FunScript.JSEmitInline("(importScripts({args}))"); CompiledName("importScripts1")>]
            static member importScriptsOverload2([<System.ParamArray>] urls : array<string>) : unit = failwith "never"
            [<FunScript.JSEmitInline("(ActiveXObject)"); CompiledName("ActiveXObject")>]
            static member ActiveXObject with get() : AnonymousType438 = failwith "never" and set (v : AnonymousType438) : unit = failwith "never"
            [<FunScript.JSEmitInline("(WScript)"); CompiledName("WScript")>]
            static member WScript with get() : AnonymousType439 = failwith "never" and set (v : AnonymousType439) : unit = failwith "never"




    type AbstractWorker with 

            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror1")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener95")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener96")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type AesGcmEncryptResult with 

            [<FunScript.JSEmitInline("({0}.ciphertext)"); CompiledName("ciphertext")>]
            member __.ciphertext with get() : ArrayBuffer = failwith "never" and set (v : ArrayBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tag)"); CompiledName("tag")>]
            member __.tag with get() : ArrayBuffer = failwith "never" and set (v : ArrayBuffer) : unit = failwith "never"




    type Algorithm with 

            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name1")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.params)"); CompiledName("_params")>]
            member __._params with get() : AlgorithmParameters = failwith "never" and set (v : AlgorithmParameters) : unit = failwith "never"




    type AnimationEvent with 

            [<FunScript.JSEmitInline("({0}.animationName)"); CompiledName("animationName")>]
            member __.animationName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.elapsedTime)"); CompiledName("elapsedTime")>]
            member __.elapsedTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initAnimationEvent({args}))"); CompiledName("initAnimationEvent")>]
            member __.initAnimationEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, animationNameArg : string, elapsedTimeArg : float) : unit = failwith "never"




    type AnonymousType1 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create")>]
            member __.Create(?value : obj) : Object = failwith "never"
            [<FunScript.JSEmitInline("({0}())"); CompiledName("Invoke")>]
            member __.Invoke() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke1")>]
            member __.Invoke(value : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype")>]
            member __.prototype with get() : Object = failwith "never" and set (v : Object) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getPrototypeOf({args}))"); CompiledName("getPrototypeOf")>]
            member __.getPrototypeOf(o : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getOwnPropertyDescriptor({args}))"); CompiledName("getOwnPropertyDescriptor")>]
            member __.getOwnPropertyDescriptor(o : obj, p : string) : PropertyDescriptor = failwith "never"
            [<FunScript.JSEmitInline("({0}.getOwnPropertyNames({args}))"); CompiledName("getOwnPropertyNames")>]
            member __.getOwnPropertyNames(o : obj) : array<string> = failwith "never"
            [<FunScript.JSEmitInline("({0}.create({args}))"); CompiledName("create")>]
            member __.create(o : obj, ?properties : PropertyDescriptorMap) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.defineProperty({args}))"); CompiledName("defineProperty")>]
            member __.defineProperty(o : obj, p : string, attributes : PropertyDescriptor) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.defineProperties({args}))"); CompiledName("defineProperties")>]
            member __.defineProperties(o : obj, properties : PropertyDescriptorMap) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.seal({args}))"); CompiledName("seal")>]
            member __.seal(o : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.freeze({args}))"); CompiledName("freeze")>]
            member __.freeze(o : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.preventExtensions({args}))"); CompiledName("preventExtensions")>]
            member __.preventExtensions(o : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.isSealed({args}))"); CompiledName("isSealed")>]
            member __.isSealed(o : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.isFrozen({args}))"); CompiledName("isFrozen")>]
            member __.isFrozen(o : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.isExtensible({args}))"); CompiledName("isExtensible")>]
            member __.isExtensible(o : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.keys({args}))"); CompiledName("keys")>]
            member __.keys(o : obj) : array<string> = failwith "never"




    type AnonymousType10 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create1")>]
            member __.Create(?message : string) : RangeError = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke2")>]
            member __.Invoke(?message : string) : RangeError = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype1")>]
            member __.prototype with get() : RangeError = failwith "never" and set (v : RangeError) : unit = failwith "never"




    type AnonymousType100 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype2")>]
            member __.prototype with get() : HTMLMenuElement = failwith "never" and set (v : HTMLMenuElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create2")>]
            member __.Create() : HTMLMenuElement = failwith "never"




    type AnonymousType101 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype3")>]
            member __.prototype with get() : MouseWheelEvent = failwith "never" and set (v : MouseWheelEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create3")>]
            member __.Create() : MouseWheelEvent = failwith "never"




    type AnonymousType102 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype4")>]
            member __.prototype with get() : SVGPointList = failwith "never" and set (v : SVGPointList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create4")>]
            member __.Create() : SVGPointList = failwith "never"




    type AnonymousType103 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype5")>]
            member __.prototype with get() : SVGAnimatedLengthList = failwith "never" and set (v : SVGAnimatedLengthList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create5")>]
            member __.Create() : SVGAnimatedLengthList = failwith "never"




    type AnonymousType104 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype6")>]
            member __.prototype with get() : SVGAnimatedPreserveAspectRatio = failwith "never" and set (v : SVGAnimatedPreserveAspectRatio) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create6")>]
            member __.Create() : SVGAnimatedPreserveAspectRatio = failwith "never"




    type AnonymousType105 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype7")>]
            member __.prototype with get() : MSSiteModeEvent = failwith "never" and set (v : MSSiteModeEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create7")>]
            member __.Create() : MSSiteModeEvent = failwith "never"




    type AnonymousType106 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype8")>]
            member __.prototype with get() : StyleSheetPageList = failwith "never" and set (v : StyleSheetPageList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create8")>]
            member __.Create() : StyleSheetPageList = failwith "never"




    type AnonymousType107 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype9")>]
            member __.prototype with get() : MSCSSProperties = failwith "never" and set (v : MSCSSProperties) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create9")>]
            member __.Create() : MSCSSProperties = failwith "never"




    type AnonymousType108 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype10")>]
            member __.prototype with get() : HTMLImageElement = failwith "never" and set (v : HTMLImageElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create10")>]
            member __.Create() : HTMLImageElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.create())"); CompiledName("create1")>]
            member __.create() : HTMLImageElement = failwith "never"




    type AnonymousType109 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype11")>]
            member __.prototype with get() : HTMLAreaElement = failwith "never" and set (v : HTMLAreaElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create11")>]
            member __.Create() : HTMLAreaElement = failwith "never"




    type AnonymousType11 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create12")>]
            member __.Create(?message : string) : ReferenceError = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke3")>]
            member __.Invoke(?message : string) : ReferenceError = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype12")>]
            member __.prototype with get() : ReferenceError = failwith "never" and set (v : ReferenceError) : unit = failwith "never"




    type AnonymousType110 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype13")>]
            member __.prototype with get() : SVGAngle = failwith "never" and set (v : SVGAngle) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create13")>]
            member __.Create() : SVGAngle = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_RAD)"); CompiledName("SVG_ANGLETYPE_RAD")>]
            member __.SVG_ANGLETYPE_RAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_UNKNOWN)"); CompiledName("SVG_ANGLETYPE_UNKNOWN")>]
            member __.SVG_ANGLETYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_UNSPECIFIED)"); CompiledName("SVG_ANGLETYPE_UNSPECIFIED")>]
            member __.SVG_ANGLETYPE_UNSPECIFIED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_DEG)"); CompiledName("SVG_ANGLETYPE_DEG")>]
            member __.SVG_ANGLETYPE_DEG with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_GRAD)"); CompiledName("SVG_ANGLETYPE_GRAD")>]
            member __.SVG_ANGLETYPE_GRAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType111 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype14")>]
            member __.prototype with get() : HTMLButtonElement = failwith "never" and set (v : HTMLButtonElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create14")>]
            member __.Create() : HTMLButtonElement = failwith "never"




    type AnonymousType112 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype15")>]
            member __.prototype with get() : HTMLSourceElement = failwith "never" and set (v : HTMLSourceElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create15")>]
            member __.Create() : HTMLSourceElement = failwith "never"




    type AnonymousType113 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype16")>]
            member __.prototype with get() : CanvasGradient = failwith "never" and set (v : CanvasGradient) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create16")>]
            member __.Create() : CanvasGradient = failwith "never"




    type AnonymousType114 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype17")>]
            member __.prototype with get() : KeyboardEvent = failwith "never" and set (v : KeyboardEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create17")>]
            member __.Create() : KeyboardEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_RIGHT)"); CompiledName("DOM_KEY_LOCATION_RIGHT")>]
            member __.DOM_KEY_LOCATION_RIGHT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_STANDARD)"); CompiledName("DOM_KEY_LOCATION_STANDARD")>]
            member __.DOM_KEY_LOCATION_STANDARD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_LEFT)"); CompiledName("DOM_KEY_LOCATION_LEFT")>]
            member __.DOM_KEY_LOCATION_LEFT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_NUMPAD)"); CompiledName("DOM_KEY_LOCATION_NUMPAD")>]
            member __.DOM_KEY_LOCATION_NUMPAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_JOYSTICK)"); CompiledName("DOM_KEY_LOCATION_JOYSTICK")>]
            member __.DOM_KEY_LOCATION_JOYSTICK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_MOBILE)"); CompiledName("DOM_KEY_LOCATION_MOBILE")>]
            member __.DOM_KEY_LOCATION_MOBILE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType115 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype18")>]
            member __.prototype with get() : MessageEvent = failwith "never" and set (v : MessageEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create18")>]
            member __.Create() : MessageEvent = failwith "never"




    type AnonymousType116 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype19")>]
            member __.prototype with get() : SVGElement = failwith "never" and set (v : SVGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create19")>]
            member __.Create() : SVGElement = failwith "never"




    type AnonymousType117 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype20")>]
            member __.prototype with get() : HTMLScriptElement = failwith "never" and set (v : HTMLScriptElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create20")>]
            member __.Create() : HTMLScriptElement = failwith "never"




    type AnonymousType118 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype21")>]
            member __.prototype with get() : HTMLTableRowElement = failwith "never" and set (v : HTMLTableRowElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create21")>]
            member __.Create() : HTMLTableRowElement = failwith "never"




    type AnonymousType119 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype22")>]
            member __.prototype with get() : CanvasRenderingContext2D = failwith "never" and set (v : CanvasRenderingContext2D) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create22")>]
            member __.Create() : CanvasRenderingContext2D = failwith "never"




    type AnonymousType12 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create23")>]
            member __.Create(?message : string) : SyntaxError = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke4")>]
            member __.Invoke(?message : string) : SyntaxError = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype23")>]
            member __.prototype with get() : SyntaxError = failwith "never" and set (v : SyntaxError) : unit = failwith "never"




    type AnonymousType120 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype24")>]
            member __.prototype with get() : MSCSSRuleList = failwith "never" and set (v : MSCSSRuleList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create24")>]
            member __.Create() : MSCSSRuleList = failwith "never"




    type AnonymousType121 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype25")>]
            member __.prototype with get() : SVGPathSegLinetoHorizontalAbs = failwith "never" and set (v : SVGPathSegLinetoHorizontalAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create25")>]
            member __.Create() : SVGPathSegLinetoHorizontalAbs = failwith "never"




    type AnonymousType122 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype26")>]
            member __.prototype with get() : SVGPathSegArcAbs = failwith "never" and set (v : SVGPathSegArcAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create26")>]
            member __.Create() : SVGPathSegArcAbs = failwith "never"




    type AnonymousType123 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype27")>]
            member __.prototype with get() : SVGTransformList = failwith "never" and set (v : SVGTransformList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create27")>]
            member __.Create() : SVGTransformList = failwith "never"




    type AnonymousType124 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype28")>]
            member __.prototype with get() : HTMLHtmlElement = failwith "never" and set (v : HTMLHtmlElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create28")>]
            member __.Create() : HTMLHtmlElement = failwith "never"




    type AnonymousType125 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype29")>]
            member __.prototype with get() : SVGPathSegClosePath = failwith "never" and set (v : SVGPathSegClosePath) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create29")>]
            member __.Create() : SVGPathSegClosePath = failwith "never"




    type AnonymousType126 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype30")>]
            member __.prototype with get() : HTMLFrameElement = failwith "never" and set (v : HTMLFrameElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create30")>]
            member __.Create() : HTMLFrameElement = failwith "never"




    type AnonymousType127 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype31")>]
            member __.prototype with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create31")>]
            member __.Create() : SVGAnimatedLength = failwith "never"




    type AnonymousType128 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype32")>]
            member __.prototype with get() : SVGDefsElement = failwith "never" and set (v : SVGDefsElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create32")>]
            member __.Create() : SVGDefsElement = failwith "never"




    type AnonymousType129 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype33")>]
            member __.prototype with get() : HTMLQuoteElement = failwith "never" and set (v : HTMLQuoteElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create33")>]
            member __.Create() : HTMLQuoteElement = failwith "never"




    type AnonymousType13 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create34")>]
            member __.Create(?message : string) : TypeError = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke5")>]
            member __.Invoke(?message : string) : TypeError = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype34")>]
            member __.prototype with get() : TypeError = failwith "never" and set (v : TypeError) : unit = failwith "never"




    type AnonymousType130 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype35")>]
            member __.prototype with get() : CSSMediaRule = failwith "never" and set (v : CSSMediaRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create35")>]
            member __.Create() : CSSMediaRule = failwith "never"




    type AnonymousType131 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype36")>]
            member __.prototype with get() : XMLHttpRequest = failwith "never" and set (v : XMLHttpRequest) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create36")>]
            member __.Create() : XMLHttpRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADING)"); CompiledName("LOADING")>]
            member __.LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DONE)"); CompiledName("DONE")>]
            member __.DONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSENT)"); CompiledName("UNSENT")>]
            member __.UNSENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.OPENED)"); CompiledName("OPENED")>]
            member __.OPENED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HEADERS_RECEIVED)"); CompiledName("HEADERS_RECEIVED")>]
            member __.HEADERS_RECEIVED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.create())"); CompiledName("create2")>]
            member __.create() : XMLHttpRequest = failwith "never"




    type AnonymousType132 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype37")>]
            member __.prototype with get() : HTMLTableHeaderCellElement = failwith "never" and set (v : HTMLTableHeaderCellElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create37")>]
            member __.Create() : HTMLTableHeaderCellElement = failwith "never"




    type AnonymousType133 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype38")>]
            member __.prototype with get() : HTMLDListElement = failwith "never" and set (v : HTMLDListElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create38")>]
            member __.Create() : HTMLDListElement = failwith "never"




    type AnonymousType134 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype39")>]
            member __.prototype with get() : SVGPathSegLinetoHorizontalRel = failwith "never" and set (v : SVGPathSegLinetoHorizontalRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create39")>]
            member __.Create() : SVGPathSegLinetoHorizontalRel = failwith "never"




    type AnonymousType135 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype40")>]
            member __.prototype with get() : SVGEllipseElement = failwith "never" and set (v : SVGEllipseElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create40")>]
            member __.Create() : SVGEllipseElement = failwith "never"




    type AnonymousType136 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype41")>]
            member __.prototype with get() : SVGAElement = failwith "never" and set (v : SVGAElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create41")>]
            member __.Create() : SVGAElement = failwith "never"




    type AnonymousType137 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype42")>]
            member __.prototype with get() : HTMLFrameSetElement = failwith "never" and set (v : HTMLFrameSetElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create42")>]
            member __.Create() : HTMLFrameSetElement = failwith "never"




    type AnonymousType138 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype43")>]
            member __.prototype with get() : Screen = failwith "never" and set (v : Screen) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create43")>]
            member __.Create() : Screen = failwith "never"




    type AnonymousType139 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype44")>]
            member __.prototype with get() : Coordinates = failwith "never" and set (v : Coordinates) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create44")>]
            member __.Create() : Coordinates = failwith "never"




    type AnonymousType14 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create45")>]
            member __.Create(?message : string) : URIError = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke6")>]
            member __.Invoke(?message : string) : URIError = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype45")>]
            member __.prototype with get() : URIError = failwith "never" and set (v : URIError) : unit = failwith "never"




    type AnonymousType140 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype46")>]
            member __.prototype with get() : DataTransfer = failwith "never" and set (v : DataTransfer) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create46")>]
            member __.Create() : DataTransfer = failwith "never"




    type AnonymousType141 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype47")>]
            member __.prototype with get() : FocusEvent = failwith "never" and set (v : FocusEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create47")>]
            member __.Create() : FocusEvent = failwith "never"




    type AnonymousType142 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype48")>]
            member __.prototype with get() : Range = failwith "never" and set (v : Range) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create48")>]
            member __.Create() : Range = failwith "never"
            [<FunScript.JSEmitInline("({0}.END_TO_END)"); CompiledName("END_TO_END")>]
            member __.END_TO_END with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.START_TO_START)"); CompiledName("START_TO_START")>]
            member __.START_TO_START with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.START_TO_END)"); CompiledName("START_TO_END")>]
            member __.START_TO_END with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.END_TO_START)"); CompiledName("END_TO_START")>]
            member __.END_TO_START with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType143 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype49")>]
            member __.prototype with get() : SVGPoint = failwith "never" and set (v : SVGPoint) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create49")>]
            member __.Create() : SVGPoint = failwith "never"




    type AnonymousType144 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype50")>]
            member __.prototype with get() : MSPluginsCollection = failwith "never" and set (v : MSPluginsCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create50")>]
            member __.Create() : MSPluginsCollection = failwith "never"




    type AnonymousType145 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype51")>]
            member __.prototype with get() : SVGAnimatedNumberList = failwith "never" and set (v : SVGAnimatedNumberList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create51")>]
            member __.Create() : SVGAnimatedNumberList = failwith "never"




    type AnonymousType146 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype52")>]
            member __.prototype with get() : SVGSVGElement = failwith "never" and set (v : SVGSVGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create52")>]
            member __.Create() : SVGSVGElement = failwith "never"




    type AnonymousType147 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype53")>]
            member __.prototype with get() : HTMLLabelElement = failwith "never" and set (v : HTMLLabelElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create53")>]
            member __.Create() : HTMLLabelElement = failwith "never"




    type AnonymousType148 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype54")>]
            member __.prototype with get() : HTMLLegendElement = failwith "never" and set (v : HTMLLegendElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create54")>]
            member __.Create() : HTMLLegendElement = failwith "never"




    type AnonymousType149 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype55")>]
            member __.prototype with get() : HTMLDirectoryElement = failwith "never" and set (v : HTMLDirectoryElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create55")>]
            member __.Create() : HTMLDirectoryElement = failwith "never"




    type AnonymousType15 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create56")>]
            member __.Create(?arrayLength : float) : array<obj> = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create57")>]
            member __.Create<'T>(arrayLength : float) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create58")>]
            member __.Create<'T>() : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create59")>]
            member __.CreateOverload2<'T>([<System.ParamArray>] items : array<'T>) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke7")>]
            member __.Invoke(?arrayLength : float) : array<obj> = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke8")>]
            member __.Invoke<'T>(arrayLength : float) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}())"); CompiledName("Invoke9")>]
            member __.Invoke<'T>() : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke10")>]
            member __.InvokeOverload2<'T>([<System.ParamArray>] items : array<'T>) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.isArray({args}))"); CompiledName("isArray")>]
            member __.isArray(arg : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype56")>]
            member __.prototype with get() : array<obj> = failwith "never" and set (v : array<obj>) : unit = failwith "never"




    type AnonymousType150 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype57")>]
            member __.prototype with get() : SVGAnimatedInteger = failwith "never" and set (v : SVGAnimatedInteger) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create60")>]
            member __.Create() : SVGAnimatedInteger = failwith "never"




    type AnonymousType151 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype58")>]
            member __.prototype with get() : SVGTextElement = failwith "never" and set (v : SVGTextElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create61")>]
            member __.Create() : SVGTextElement = failwith "never"




    type AnonymousType152 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype59")>]
            member __.prototype with get() : SVGTSpanElement = failwith "never" and set (v : SVGTSpanElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create62")>]
            member __.Create() : SVGTSpanElement = failwith "never"




    type AnonymousType153 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype60")>]
            member __.prototype with get() : HTMLLIElement = failwith "never" and set (v : HTMLLIElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create63")>]
            member __.Create() : HTMLLIElement = failwith "never"




    type AnonymousType154 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype61")>]
            member __.prototype with get() : SVGPathSegLinetoVerticalAbs = failwith "never" and set (v : SVGPathSegLinetoVerticalAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create64")>]
            member __.Create() : SVGPathSegLinetoVerticalAbs = failwith "never"




    type AnonymousType155 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype62")>]
            member __.prototype with get() : SVGStyleElement = failwith "never" and set (v : SVGStyleElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create65")>]
            member __.Create() : SVGStyleElement = failwith "never"




    type AnonymousType156 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype63")>]
            member __.prototype with get() : MSCurrentStyleCSSProperties = failwith "never" and set (v : MSCurrentStyleCSSProperties) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create66")>]
            member __.Create() : MSCurrentStyleCSSProperties = failwith "never"




    type AnonymousType157 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype64")>]
            member __.prototype with get() : Storage = failwith "never" and set (v : Storage) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create67")>]
            member __.Create() : Storage = failwith "never"




    type AnonymousType158 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype65")>]
            member __.prototype with get() : HTMLIFrameElement = failwith "never" and set (v : HTMLIFrameElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create68")>]
            member __.Create() : HTMLIFrameElement = failwith "never"




    type AnonymousType159 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype66")>]
            member __.prototype with get() : TextRangeCollection = failwith "never" and set (v : TextRangeCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create69")>]
            member __.Create() : TextRangeCollection = failwith "never"




    type AnonymousType16 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype67")>]
            member __.prototype with get() : ArrayBuffer = failwith "never" and set (v : ArrayBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create70")>]
            member __.Create(byteLength : float) : ArrayBuffer = failwith "never"




    type AnonymousType160 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype68")>]
            member __.prototype with get() : HTMLBodyElement = failwith "never" and set (v : HTMLBodyElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create71")>]
            member __.Create() : HTMLBodyElement = failwith "never"




    type AnonymousType161 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype69")>]
            member __.prototype with get() : DocumentType = failwith "never" and set (v : DocumentType) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create72")>]
            member __.Create() : DocumentType = failwith "never"




    type AnonymousType162 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype70")>]
            member __.prototype with get() : SVGRadialGradientElement = failwith "never" and set (v : SVGRadialGradientElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create73")>]
            member __.Create() : SVGRadialGradientElement = failwith "never"




    type AnonymousType163 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype71")>]
            member __.prototype with get() : MutationEvent = failwith "never" and set (v : MutationEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create74")>]
            member __.Create() : MutationEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.MODIFICATION)"); CompiledName("MODIFICATION")>]
            member __.MODIFICATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.REMOVAL)"); CompiledName("REMOVAL")>]
            member __.REMOVAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ADDITION)"); CompiledName("ADDITION")>]
            member __.ADDITION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType164 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype72")>]
            member __.prototype with get() : DragEvent = failwith "never" and set (v : DragEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create75")>]
            member __.Create() : DragEvent = failwith "never"




    type AnonymousType165 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype73")>]
            member __.prototype with get() : HTMLTableSectionElement = failwith "never" and set (v : HTMLTableSectionElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create76")>]
            member __.Create() : HTMLTableSectionElement = failwith "never"




    type AnonymousType166 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype74")>]
            member __.prototype with get() : HTMLInputElement = failwith "never" and set (v : HTMLInputElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create77")>]
            member __.Create() : HTMLInputElement = failwith "never"




    type AnonymousType167 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype75")>]
            member __.prototype with get() : HTMLAnchorElement = failwith "never" and set (v : HTMLAnchorElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create78")>]
            member __.Create() : HTMLAnchorElement = failwith "never"




    type AnonymousType168 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype76")>]
            member __.prototype with get() : HTMLParamElement = failwith "never" and set (v : HTMLParamElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create79")>]
            member __.Create() : HTMLParamElement = failwith "never"




    type AnonymousType169 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype77")>]
            member __.prototype with get() : SVGImageElement = failwith "never" and set (v : SVGImageElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create80")>]
            member __.Create() : SVGImageElement = failwith "never"




    type AnonymousType17 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype78")>]
            member __.prototype with get() : Int8Array = failwith "never" and set (v : Int8Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create81")>]
            member __.Create(length : float) : Int8Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create82")>]
            member __.Create(array : Int8Array) : Int8Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create83")>]
            member __.Create(array : array<float>) : Int8Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create84")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : Int8Array = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType170 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype79")>]
            member __.prototype with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create85")>]
            member __.Create() : SVGAnimatedNumber = failwith "never"




    type AnonymousType171 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype80")>]
            member __.prototype with get() : PerformanceTiming = failwith "never" and set (v : PerformanceTiming) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create86")>]
            member __.Create() : PerformanceTiming = failwith "never"




    type AnonymousType172 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype81")>]
            member __.prototype with get() : HTMLPreElement = failwith "never" and set (v : HTMLPreElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create87")>]
            member __.Create() : HTMLPreElement = failwith "never"




    type AnonymousType173 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype82")>]
            member __.prototype with get() : EventException = failwith "never" and set (v : EventException) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create88")>]
            member __.Create() : EventException = failwith "never"
            [<FunScript.JSEmitInline("({0}.DISPATCH_REQUEST_ERR)"); CompiledName("DISPATCH_REQUEST_ERR")>]
            member __.DISPATCH_REQUEST_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSPECIFIED_EVENT_TYPE_ERR)"); CompiledName("UNSPECIFIED_EVENT_TYPE_ERR")>]
            member __.UNSPECIFIED_EVENT_TYPE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType174 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype83")>]
            member __.prototype with get() : SVGMetadataElement = failwith "never" and set (v : SVGMetadataElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create89")>]
            member __.Create() : SVGMetadataElement = failwith "never"




    type AnonymousType175 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype84")>]
            member __.prototype with get() : SVGPathSegArcRel = failwith "never" and set (v : SVGPathSegArcRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create90")>]
            member __.Create() : SVGPathSegArcRel = failwith "never"




    type AnonymousType176 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype85")>]
            member __.prototype with get() : SVGPathSegMovetoAbs = failwith "never" and set (v : SVGPathSegMovetoAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create91")>]
            member __.Create() : SVGPathSegMovetoAbs = failwith "never"




    type AnonymousType177 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype86")>]
            member __.prototype with get() : SVGStringList = failwith "never" and set (v : SVGStringList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create92")>]
            member __.Create() : SVGStringList = failwith "never"




    type AnonymousType178 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype87")>]
            member __.prototype with get() : XDomainRequest = failwith "never" and set (v : XDomainRequest) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create93")>]
            member __.Create() : XDomainRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.create())"); CompiledName("create3")>]
            member __.create() : XDomainRequest = failwith "never"




    type AnonymousType179 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype88")>]
            member __.prototype with get() : SVGLength = failwith "never" and set (v : SVGLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create94")>]
            member __.Create() : SVGLength = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_NUMBER)"); CompiledName("SVG_LENGTHTYPE_NUMBER")>]
            member __.SVG_LENGTHTYPE_NUMBER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_CM)"); CompiledName("SVG_LENGTHTYPE_CM")>]
            member __.SVG_LENGTHTYPE_CM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_PC)"); CompiledName("SVG_LENGTHTYPE_PC")>]
            member __.SVG_LENGTHTYPE_PC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_PERCENTAGE)"); CompiledName("SVG_LENGTHTYPE_PERCENTAGE")>]
            member __.SVG_LENGTHTYPE_PERCENTAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_MM)"); CompiledName("SVG_LENGTHTYPE_MM")>]
            member __.SVG_LENGTHTYPE_MM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_PT)"); CompiledName("SVG_LENGTHTYPE_PT")>]
            member __.SVG_LENGTHTYPE_PT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_IN)"); CompiledName("SVG_LENGTHTYPE_IN")>]
            member __.SVG_LENGTHTYPE_IN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_EMS)"); CompiledName("SVG_LENGTHTYPE_EMS")>]
            member __.SVG_LENGTHTYPE_EMS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_PX)"); CompiledName("SVG_LENGTHTYPE_PX")>]
            member __.SVG_LENGTHTYPE_PX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_UNKNOWN)"); CompiledName("SVG_LENGTHTYPE_UNKNOWN")>]
            member __.SVG_LENGTHTYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_EXS)"); CompiledName("SVG_LENGTHTYPE_EXS")>]
            member __.SVG_LENGTHTYPE_EXS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType18 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype89")>]
            member __.prototype with get() : Uint8Array = failwith "never" and set (v : Uint8Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create95")>]
            member __.Create(length : float) : Uint8Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create96")>]
            member __.Create(array : Uint8Array) : Uint8Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create97")>]
            member __.Create(array : array<float>) : Uint8Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create98")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : Uint8Array = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT1")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType180 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype90")>]
            member __.prototype with get() : SVGPolygonElement = failwith "never" and set (v : SVGPolygonElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create99")>]
            member __.Create() : SVGPolygonElement = failwith "never"




    type AnonymousType181 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype91")>]
            member __.prototype with get() : HTMLPhraseElement = failwith "never" and set (v : HTMLPhraseElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create100")>]
            member __.Create() : HTMLPhraseElement = failwith "never"




    type AnonymousType182 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype92")>]
            member __.prototype with get() : SVGPathSegCurvetoCubicRel = failwith "never" and set (v : SVGPathSegCurvetoCubicRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create101")>]
            member __.Create() : SVGPathSegCurvetoCubicRel = failwith "never"




    type AnonymousType183 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype93")>]
            member __.prototype with get() : SVGTextContentElement = failwith "never" and set (v : SVGTextContentElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create102")>]
            member __.Create() : SVGTextContentElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.LENGTHADJUST_SPACING)"); CompiledName("LENGTHADJUST_SPACING")>]
            member __.LENGTHADJUST_SPACING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LENGTHADJUST_SPACINGANDGLYPHS)"); CompiledName("LENGTHADJUST_SPACINGANDGLYPHS")>]
            member __.LENGTHADJUST_SPACINGANDGLYPHS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LENGTHADJUST_UNKNOWN)"); CompiledName("LENGTHADJUST_UNKNOWN")>]
            member __.LENGTHADJUST_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType184 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype94")>]
            member __.prototype with get() : Location = failwith "never" and set (v : Location) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create103")>]
            member __.Create() : Location = failwith "never"




    type AnonymousType185 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype95")>]
            member __.prototype with get() : HTMLTitleElement = failwith "never" and set (v : HTMLTitleElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create104")>]
            member __.Create() : HTMLTitleElement = failwith "never"




    type AnonymousType186 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype96")>]
            member __.prototype with get() : HTMLStyleElement = failwith "never" and set (v : HTMLStyleElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create105")>]
            member __.Create() : HTMLStyleElement = failwith "never"




    type AnonymousType187 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype97")>]
            member __.prototype with get() : PerformanceEntry = failwith "never" and set (v : PerformanceEntry) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create106")>]
            member __.Create() : PerformanceEntry = failwith "never"




    type AnonymousType188 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype98")>]
            member __.prototype with get() : SVGTransform = failwith "never" and set (v : SVGTransform) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create107")>]
            member __.Create() : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_SKEWX)"); CompiledName("SVG_TRANSFORM_SKEWX")>]
            member __.SVG_TRANSFORM_SKEWX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_UNKNOWN)"); CompiledName("SVG_TRANSFORM_UNKNOWN")>]
            member __.SVG_TRANSFORM_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_SCALE)"); CompiledName("SVG_TRANSFORM_SCALE")>]
            member __.SVG_TRANSFORM_SCALE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_TRANSLATE)"); CompiledName("SVG_TRANSFORM_TRANSLATE")>]
            member __.SVG_TRANSFORM_TRANSLATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_MATRIX)"); CompiledName("SVG_TRANSFORM_MATRIX")>]
            member __.SVG_TRANSFORM_MATRIX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_ROTATE)"); CompiledName("SVG_TRANSFORM_ROTATE")>]
            member __.SVG_TRANSFORM_ROTATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_SKEWY)"); CompiledName("SVG_TRANSFORM_SKEWY")>]
            member __.SVG_TRANSFORM_SKEWY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType189 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype99")>]
            member __.prototype with get() : UIEvent = failwith "never" and set (v : UIEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create108")>]
            member __.Create() : UIEvent = failwith "never"




    type AnonymousType19 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype100")>]
            member __.prototype with get() : Int16Array = failwith "never" and set (v : Int16Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create109")>]
            member __.Create(length : float) : Int16Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create110")>]
            member __.Create(array : Int16Array) : Int16Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create111")>]
            member __.Create(array : array<float>) : Int16Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create112")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : Int16Array = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT2")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType190 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype101")>]
            member __.prototype with get() : SVGPathSeg = failwith "never" and set (v : SVGPathSeg) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create113")>]
            member __.Create() : SVGPathSeg = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_MOVETO_REL)"); CompiledName("PATHSEG_MOVETO_REL")>]
            member __.PATHSEG_MOVETO_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_VERTICAL_REL)"); CompiledName("PATHSEG_LINETO_VERTICAL_REL")>]
            member __.PATHSEG_LINETO_VERTICAL_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS)"); CompiledName("PATHSEG_CURVETO_CUBIC_SMOOTH_ABS")>]
            member __.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_QUADRATIC_REL)"); CompiledName("PATHSEG_CURVETO_QUADRATIC_REL")>]
            member __.PATHSEG_CURVETO_QUADRATIC_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_CUBIC_ABS)"); CompiledName("PATHSEG_CURVETO_CUBIC_ABS")>]
            member __.PATHSEG_CURVETO_CUBIC_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_HORIZONTAL_ABS)"); CompiledName("PATHSEG_LINETO_HORIZONTAL_ABS")>]
            member __.PATHSEG_LINETO_HORIZONTAL_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_QUADRATIC_ABS)"); CompiledName("PATHSEG_CURVETO_QUADRATIC_ABS")>]
            member __.PATHSEG_CURVETO_QUADRATIC_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_ABS)"); CompiledName("PATHSEG_LINETO_ABS")>]
            member __.PATHSEG_LINETO_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CLOSEPATH)"); CompiledName("PATHSEG_CLOSEPATH")>]
            member __.PATHSEG_CLOSEPATH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_HORIZONTAL_REL)"); CompiledName("PATHSEG_LINETO_HORIZONTAL_REL")>]
            member __.PATHSEG_LINETO_HORIZONTAL_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_CUBIC_SMOOTH_REL)"); CompiledName("PATHSEG_CURVETO_CUBIC_SMOOTH_REL")>]
            member __.PATHSEG_CURVETO_CUBIC_SMOOTH_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_REL)"); CompiledName("PATHSEG_LINETO_REL")>]
            member __.PATHSEG_LINETO_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS)"); CompiledName("PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS")>]
            member __.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_ARC_REL)"); CompiledName("PATHSEG_ARC_REL")>]
            member __.PATHSEG_ARC_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_CUBIC_REL)"); CompiledName("PATHSEG_CURVETO_CUBIC_REL")>]
            member __.PATHSEG_CURVETO_CUBIC_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_UNKNOWN)"); CompiledName("PATHSEG_UNKNOWN")>]
            member __.PATHSEG_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_VERTICAL_ABS)"); CompiledName("PATHSEG_LINETO_VERTICAL_ABS")>]
            member __.PATHSEG_LINETO_VERTICAL_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_ARC_ABS)"); CompiledName("PATHSEG_ARC_ABS")>]
            member __.PATHSEG_ARC_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_MOVETO_ABS)"); CompiledName("PATHSEG_MOVETO_ABS")>]
            member __.PATHSEG_MOVETO_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL)"); CompiledName("PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL")>]
            member __.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType191 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype102")>]
            member __.prototype with get() : WheelEvent = failwith "never" and set (v : WheelEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create114")>]
            member __.Create() : WheelEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_DELTA_PIXEL)"); CompiledName("DOM_DELTA_PIXEL")>]
            member __.DOM_DELTA_PIXEL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_DELTA_LINE)"); CompiledName("DOM_DELTA_LINE")>]
            member __.DOM_DELTA_LINE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_DELTA_PAGE)"); CompiledName("DOM_DELTA_PAGE")>]
            member __.DOM_DELTA_PAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType192 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype103")>]
            member __.prototype with get() : SVGNumber = failwith "never" and set (v : SVGNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create115")>]
            member __.Create() : SVGNumber = failwith "never"




    type AnonymousType193 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype104")>]
            member __.prototype with get() : SVGPathElement = failwith "never" and set (v : SVGPathElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create116")>]
            member __.Create() : SVGPathElement = failwith "never"




    type AnonymousType194 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype105")>]
            member __.prototype with get() : MSCompatibleInfo = failwith "never" and set (v : MSCompatibleInfo) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create117")>]
            member __.Create() : MSCompatibleInfo = failwith "never"




    type AnonymousType195 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype106")>]
            member __.prototype with get() : Text = failwith "never" and set (v : Text) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create118")>]
            member __.Create() : Text = failwith "never"




    type AnonymousType196 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype107")>]
            member __.prototype with get() : SVGAnimatedRect = failwith "never" and set (v : SVGAnimatedRect) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create119")>]
            member __.Create() : SVGAnimatedRect = failwith "never"




    type AnonymousType197 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype108")>]
            member __.prototype with get() : CSSNamespaceRule = failwith "never" and set (v : CSSNamespaceRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create120")>]
            member __.Create() : CSSNamespaceRule = failwith "never"




    type AnonymousType198 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype109")>]
            member __.prototype with get() : SVGPathSegList = failwith "never" and set (v : SVGPathSegList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create121")>]
            member __.Create() : SVGPathSegList = failwith "never"




    type AnonymousType199 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype110")>]
            member __.prototype with get() : HTMLUnknownElement = failwith "never" and set (v : HTMLUnknownElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create122")>]
            member __.Create() : HTMLUnknownElement = failwith "never"




    type AnonymousType2 with 

            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create123")>]
            member __.Create() : Function = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create124")>]
            member __.CreateOverload2([<System.ParamArray>] args : array<string>) : Function = failwith "never"
            [<FunScript.JSEmitInline("({0}())"); CompiledName("Invoke11")>]
            member __.Invoke() : Function = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke12")>]
            member __.InvokeOverload2([<System.ParamArray>] args : array<string>) : Function = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype111")>]
            member __.prototype with get() : Function = failwith "never" and set (v : Function) : unit = failwith "never"




    type AnonymousType20 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype112")>]
            member __.prototype with get() : Uint16Array = failwith "never" and set (v : Uint16Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create125")>]
            member __.Create(length : float) : Uint16Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create126")>]
            member __.Create(array : Uint16Array) : Uint16Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create127")>]
            member __.Create(array : array<float>) : Uint16Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create128")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : Uint16Array = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT3")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType200 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype113")>]
            member __.prototype with get() : HTMLAudioElement = failwith "never" and set (v : HTMLAudioElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create129")>]
            member __.Create() : HTMLAudioElement = failwith "never"




    type AnonymousType201 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype114")>]
            member __.prototype with get() : PositionError = failwith "never" and set (v : PositionError) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create130")>]
            member __.Create() : PositionError = failwith "never"
            [<FunScript.JSEmitInline("({0}.POSITION_UNAVAILABLE)"); CompiledName("POSITION_UNAVAILABLE")>]
            member __.POSITION_UNAVAILABLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PERMISSION_DENIED)"); CompiledName("PERMISSION_DENIED")>]
            member __.PERMISSION_DENIED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TIMEOUT)"); CompiledName("TIMEOUT")>]
            member __.TIMEOUT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType202 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype115")>]
            member __.prototype with get() : HTMLTableCellElement = failwith "never" and set (v : HTMLTableCellElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create131")>]
            member __.Create() : HTMLTableCellElement = failwith "never"




    type AnonymousType203 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype116")>]
            member __.prototype with get() : SVGElementInstance = failwith "never" and set (v : SVGElementInstance) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create132")>]
            member __.Create() : SVGElementInstance = failwith "never"




    type AnonymousType204 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype117")>]
            member __.prototype with get() : MSNamespaceInfoCollection = failwith "never" and set (v : MSNamespaceInfoCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create133")>]
            member __.Create() : MSNamespaceInfoCollection = failwith "never"




    type AnonymousType205 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype118")>]
            member __.prototype with get() : SVGCircleElement = failwith "never" and set (v : SVGCircleElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create134")>]
            member __.Create() : SVGCircleElement = failwith "never"




    type AnonymousType206 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype119")>]
            member __.prototype with get() : StyleSheetList = failwith "never" and set (v : StyleSheetList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create135")>]
            member __.Create() : StyleSheetList = failwith "never"




    type AnonymousType207 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype120")>]
            member __.prototype with get() : CSSImportRule = failwith "never" and set (v : CSSImportRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create136")>]
            member __.Create() : CSSImportRule = failwith "never"




    type AnonymousType208 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype121")>]
            member __.prototype with get() : CustomEvent = failwith "never" and set (v : CustomEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create137")>]
            member __.Create() : CustomEvent = failwith "never"




    type AnonymousType209 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype122")>]
            member __.prototype with get() : HTMLBaseFontElement = failwith "never" and set (v : HTMLBaseFontElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create138")>]
            member __.Create() : HTMLBaseFontElement = failwith "never"




    type AnonymousType21 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype123")>]
            member __.prototype with get() : Int32Array = failwith "never" and set (v : Int32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create139")>]
            member __.Create(length : float) : Int32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create140")>]
            member __.Create(array : Int32Array) : Int32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create141")>]
            member __.Create(array : array<float>) : Int32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create142")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : Int32Array = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT4")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType210 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype124")>]
            member __.prototype with get() : HTMLTextAreaElement = failwith "never" and set (v : HTMLTextAreaElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create143")>]
            member __.Create() : HTMLTextAreaElement = failwith "never"




    type AnonymousType211 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype125")>]
            member __.prototype with get() : Geolocation = failwith "never" and set (v : Geolocation) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create144")>]
            member __.Create() : Geolocation = failwith "never"




    type AnonymousType212 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype126")>]
            member __.prototype with get() : HTMLMarqueeElement = failwith "never" and set (v : HTMLMarqueeElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create145")>]
            member __.Create() : HTMLMarqueeElement = failwith "never"




    type AnonymousType213 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype127")>]
            member __.prototype with get() : SVGRect = failwith "never" and set (v : SVGRect) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create146")>]
            member __.Create() : SVGRect = failwith "never"




    type AnonymousType214 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype128")>]
            member __.prototype with get() : History = failwith "never" and set (v : History) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create147")>]
            member __.Create() : History = failwith "never"




    type AnonymousType215 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype129")>]
            member __.prototype with get() : SVGPathSegCurvetoCubicAbs = failwith "never" and set (v : SVGPathSegCurvetoCubicAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create148")>]
            member __.Create() : SVGPathSegCurvetoCubicAbs = failwith "never"




    type AnonymousType216 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype130")>]
            member __.prototype with get() : SVGPathSegCurvetoQuadraticAbs = failwith "never" and set (v : SVGPathSegCurvetoQuadraticAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create149")>]
            member __.Create() : SVGPathSegCurvetoQuadraticAbs = failwith "never"




    type AnonymousType217 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype131")>]
            member __.prototype with get() : TimeRanges = failwith "never" and set (v : TimeRanges) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create150")>]
            member __.Create() : TimeRanges = failwith "never"




    type AnonymousType218 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype132")>]
            member __.prototype with get() : CSSRule = failwith "never" and set (v : CSSRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create151")>]
            member __.Create() : CSSRule = failwith "never"
            [<FunScript.JSEmitInline("({0}.IMPORT_RULE)"); CompiledName("IMPORT_RULE")>]
            member __.IMPORT_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_RULE)"); CompiledName("MEDIA_RULE")>]
            member __.MEDIA_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STYLE_RULE)"); CompiledName("STYLE_RULE")>]
            member __.STYLE_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NAMESPACE_RULE)"); CompiledName("NAMESPACE_RULE")>]
            member __.NAMESPACE_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PAGE_RULE)"); CompiledName("PAGE_RULE")>]
            member __.PAGE_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNKNOWN_RULE)"); CompiledName("UNKNOWN_RULE")>]
            member __.UNKNOWN_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FONT_FACE_RULE)"); CompiledName("FONT_FACE_RULE")>]
            member __.FONT_FACE_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CHARSET_RULE)"); CompiledName("CHARSET_RULE")>]
            member __.CHARSET_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.KEYFRAMES_RULE)"); CompiledName("KEYFRAMES_RULE")>]
            member __.KEYFRAMES_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.KEYFRAME_RULE)"); CompiledName("KEYFRAME_RULE")>]
            member __.KEYFRAME_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VIEWPORT_RULE)"); CompiledName("VIEWPORT_RULE")>]
            member __.VIEWPORT_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType219 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype133")>]
            member __.prototype with get() : SVGPathSegLinetoAbs = failwith "never" and set (v : SVGPathSegLinetoAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create152")>]
            member __.Create() : SVGPathSegLinetoAbs = failwith "never"




    type AnonymousType22 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype134")>]
            member __.prototype with get() : Uint32Array = failwith "never" and set (v : Uint32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create153")>]
            member __.Create(length : float) : Uint32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create154")>]
            member __.Create(array : Uint32Array) : Uint32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create155")>]
            member __.Create(array : array<float>) : Uint32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create156")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : Uint32Array = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT5")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType220 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype135")>]
            member __.prototype with get() : HTMLModElement = failwith "never" and set (v : HTMLModElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create157")>]
            member __.Create() : HTMLModElement = failwith "never"




    type AnonymousType221 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype136")>]
            member __.prototype with get() : SVGMatrix = failwith "never" and set (v : SVGMatrix) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create158")>]
            member __.Create() : SVGMatrix = failwith "never"




    type AnonymousType222 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype137")>]
            member __.prototype with get() : MSPopupWindow = failwith "never" and set (v : MSPopupWindow) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create159")>]
            member __.Create() : MSPopupWindow = failwith "never"




    type AnonymousType223 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype138")>]
            member __.prototype with get() : BeforeUnloadEvent = failwith "never" and set (v : BeforeUnloadEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create160")>]
            member __.Create() : BeforeUnloadEvent = failwith "never"




    type AnonymousType224 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype139")>]
            member __.prototype with get() : SVGUseElement = failwith "never" and set (v : SVGUseElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create161")>]
            member __.Create() : SVGUseElement = failwith "never"




    type AnonymousType225 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype140")>]
            member __.prototype with get() : Event = failwith "never" and set (v : Event) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create162")>]
            member __.Create() : Event = failwith "never"
            [<FunScript.JSEmitInline("({0}.CAPTURING_PHASE)"); CompiledName("CAPTURING_PHASE")>]
            member __.CAPTURING_PHASE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.AT_TARGET)"); CompiledName("AT_TARGET")>]
            member __.AT_TARGET with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BUBBLING_PHASE)"); CompiledName("BUBBLING_PHASE")>]
            member __.BUBBLING_PHASE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType226 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype141")>]
            member __.prototype with get() : ImageData = failwith "never" and set (v : ImageData) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create163")>]
            member __.Create() : ImageData = failwith "never"




    type AnonymousType227 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype142")>]
            member __.prototype with get() : HTMLTableColElement = failwith "never" and set (v : HTMLTableColElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create164")>]
            member __.Create() : HTMLTableColElement = failwith "never"




    type AnonymousType228 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype143")>]
            member __.prototype with get() : SVGException = failwith "never" and set (v : SVGException) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create165")>]
            member __.Create() : SVGException = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MATRIX_NOT_INVERTABLE)"); CompiledName("SVG_MATRIX_NOT_INVERTABLE")>]
            member __.SVG_MATRIX_NOT_INVERTABLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_WRONG_TYPE_ERR)"); CompiledName("SVG_WRONG_TYPE_ERR")>]
            member __.SVG_WRONG_TYPE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_INVALID_VALUE_ERR)"); CompiledName("SVG_INVALID_VALUE_ERR")>]
            member __.SVG_INVALID_VALUE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType229 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype144")>]
            member __.prototype with get() : SVGLinearGradientElement = failwith "never" and set (v : SVGLinearGradientElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create166")>]
            member __.Create() : SVGLinearGradientElement = failwith "never"




    type AnonymousType23 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype145")>]
            member __.prototype with get() : Float32Array = failwith "never" and set (v : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create167")>]
            member __.Create(length : float) : Float32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create168")>]
            member __.Create(array : Float32Array) : Float32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create169")>]
            member __.Create(array : array<float>) : Float32Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create170")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : Float32Array = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT6")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType230 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype146")>]
            member __.prototype with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create171")>]
            member __.Create() : SVGAnimatedEnumeration = failwith "never"




    type AnonymousType231 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype147")>]
            member __.prototype with get() : HTMLUListElement = failwith "never" and set (v : HTMLUListElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create172")>]
            member __.Create() : HTMLUListElement = failwith "never"




    type AnonymousType232 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype148")>]
            member __.prototype with get() : SVGRectElement = failwith "never" and set (v : SVGRectElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create173")>]
            member __.Create() : SVGRectElement = failwith "never"




    type AnonymousType233 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype149")>]
            member __.prototype with get() : HTMLDivElement = failwith "never" and set (v : HTMLDivElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create174")>]
            member __.Create() : HTMLDivElement = failwith "never"




    type AnonymousType234 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype150")>]
            member __.prototype with get() : NamedNodeMap = failwith "never" and set (v : NamedNodeMap) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create175")>]
            member __.Create() : NamedNodeMap = failwith "never"




    type AnonymousType235 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype151")>]
            member __.prototype with get() : MediaList = failwith "never" and set (v : MediaList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create176")>]
            member __.Create() : MediaList = failwith "never"




    type AnonymousType236 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype152")>]
            member __.prototype with get() : SVGPathSegCurvetoQuadraticSmoothAbs = failwith "never" and set (v : SVGPathSegCurvetoQuadraticSmoothAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create177")>]
            member __.Create() : SVGPathSegCurvetoQuadraticSmoothAbs = failwith "never"




    type AnonymousType237 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype153")>]
            member __.prototype with get() : SVGPathSegCurvetoCubicSmoothRel = failwith "never" and set (v : SVGPathSegCurvetoCubicSmoothRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create178")>]
            member __.Create() : SVGPathSegCurvetoCubicSmoothRel = failwith "never"




    type AnonymousType238 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype154")>]
            member __.prototype with get() : SVGLengthList = failwith "never" and set (v : SVGLengthList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create179")>]
            member __.Create() : SVGLengthList = failwith "never"




    type AnonymousType239 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype155")>]
            member __.prototype with get() : ProcessingInstruction = failwith "never" and set (v : ProcessingInstruction) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create180")>]
            member __.Create() : ProcessingInstruction = failwith "never"




    type AnonymousType24 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype156")>]
            member __.prototype with get() : Float64Array = failwith "never" and set (v : Float64Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create181")>]
            member __.Create(length : float) : Float64Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create182")>]
            member __.Create(array : Float64Array) : Float64Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create183")>]
            member __.Create(array : array<float>) : Float64Array = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create184")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : Float64Array = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT7")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType240 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype157")>]
            member __.prototype with get() : MSBehaviorUrnsCollection = failwith "never" and set (v : MSBehaviorUrnsCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create185")>]
            member __.Create() : MSBehaviorUrnsCollection = failwith "never"




    type AnonymousType241 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype158")>]
            member __.prototype with get() : CSSFontFaceRule = failwith "never" and set (v : CSSFontFaceRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create186")>]
            member __.Create() : CSSFontFaceRule = failwith "never"




    type AnonymousType242 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype159")>]
            member __.prototype with get() : TextEvent = failwith "never" and set (v : TextEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create187")>]
            member __.Create() : TextEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_KEYBOARD)"); CompiledName("DOM_INPUT_METHOD_KEYBOARD")>]
            member __.DOM_INPUT_METHOD_KEYBOARD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_DROP)"); CompiledName("DOM_INPUT_METHOD_DROP")>]
            member __.DOM_INPUT_METHOD_DROP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_IME)"); CompiledName("DOM_INPUT_METHOD_IME")>]
            member __.DOM_INPUT_METHOD_IME with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_SCRIPT)"); CompiledName("DOM_INPUT_METHOD_SCRIPT")>]
            member __.DOM_INPUT_METHOD_SCRIPT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_VOICE)"); CompiledName("DOM_INPUT_METHOD_VOICE")>]
            member __.DOM_INPUT_METHOD_VOICE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_UNKNOWN)"); CompiledName("DOM_INPUT_METHOD_UNKNOWN")>]
            member __.DOM_INPUT_METHOD_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_PASTE)"); CompiledName("DOM_INPUT_METHOD_PASTE")>]
            member __.DOM_INPUT_METHOD_PASTE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_HANDWRITING)"); CompiledName("DOM_INPUT_METHOD_HANDWRITING")>]
            member __.DOM_INPUT_METHOD_HANDWRITING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_OPTION)"); CompiledName("DOM_INPUT_METHOD_OPTION")>]
            member __.DOM_INPUT_METHOD_OPTION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_MULTIMODAL)"); CompiledName("DOM_INPUT_METHOD_MULTIMODAL")>]
            member __.DOM_INPUT_METHOD_MULTIMODAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType243 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype160")>]
            member __.prototype with get() : DocumentFragment = failwith "never" and set (v : DocumentFragment) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create188")>]
            member __.Create() : DocumentFragment = failwith "never"




    type AnonymousType244 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype161")>]
            member __.prototype with get() : SVGPolylineElement = failwith "never" and set (v : SVGPolylineElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create189")>]
            member __.Create() : SVGPolylineElement = failwith "never"




    type AnonymousType245 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype162")>]
            member __.prototype with get() : Position = failwith "never" and set (v : Position) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create190")>]
            member __.Create() : Position = failwith "never"




    type AnonymousType246 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype163")>]
            member __.prototype with get() : BookmarkCollection = failwith "never" and set (v : BookmarkCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create191")>]
            member __.Create() : BookmarkCollection = failwith "never"




    type AnonymousType247 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype164")>]
            member __.prototype with get() : PerformanceMark = failwith "never" and set (v : PerformanceMark) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create192")>]
            member __.Create() : PerformanceMark = failwith "never"




    type AnonymousType248 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype165")>]
            member __.prototype with get() : CSSPageRule = failwith "never" and set (v : CSSPageRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create193")>]
            member __.Create() : CSSPageRule = failwith "never"




    type AnonymousType249 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype166")>]
            member __.prototype with get() : HTMLBRElement = failwith "never" and set (v : HTMLBRElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create194")>]
            member __.Create() : HTMLBRElement = failwith "never"




    type AnonymousType25 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype167")>]
            member __.prototype with get() : DataView = failwith "never" and set (v : DataView) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create195")>]
            member __.Create(buffer : ArrayBuffer, ?byteOffset : float, ?length : float) : DataView = failwith "never"




    type AnonymousType250 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype168")>]
            member __.prototype with get() : HTMLSpanElement = failwith "never" and set (v : HTMLSpanElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create196")>]
            member __.Create() : HTMLSpanElement = failwith "never"




    type AnonymousType251 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype169")>]
            member __.prototype with get() : HTMLHeadElement = failwith "never" and set (v : HTMLHeadElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create197")>]
            member __.Create() : HTMLHeadElement = failwith "never"




    type AnonymousType252 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype170")>]
            member __.prototype with get() : HTMLHeadingElement = failwith "never" and set (v : HTMLHeadingElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create198")>]
            member __.Create() : HTMLHeadingElement = failwith "never"




    type AnonymousType253 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype171")>]
            member __.prototype with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create199")>]
            member __.Create() : HTMLFormElement = failwith "never"




    type AnonymousType254 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype172")>]
            member __.prototype with get() : HTMLMediaElement = failwith "never" and set (v : HTMLMediaElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create200")>]
            member __.Create() : HTMLMediaElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_METADATA)"); CompiledName("HAVE_METADATA")>]
            member __.HAVE_METADATA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_CURRENT_DATA)"); CompiledName("HAVE_CURRENT_DATA")>]
            member __.HAVE_CURRENT_DATA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_NOTHING)"); CompiledName("HAVE_NOTHING")>]
            member __.HAVE_NOTHING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_NO_SOURCE)"); CompiledName("NETWORK_NO_SOURCE")>]
            member __.NETWORK_NO_SOURCE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_ENOUGH_DATA)"); CompiledName("HAVE_ENOUGH_DATA")>]
            member __.HAVE_ENOUGH_DATA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_EMPTY)"); CompiledName("NETWORK_EMPTY")>]
            member __.NETWORK_EMPTY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_LOADING)"); CompiledName("NETWORK_LOADING")>]
            member __.NETWORK_LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_IDLE)"); CompiledName("NETWORK_IDLE")>]
            member __.NETWORK_IDLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_FUTURE_DATA)"); CompiledName("HAVE_FUTURE_DATA")>]
            member __.HAVE_FUTURE_DATA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType255 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype173")>]
            member __.prototype with get() : DOMParser = failwith "never" and set (v : DOMParser) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create201")>]
            member __.Create() : DOMParser = failwith "never"




    type AnonymousType256 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype174")>]
            member __.prototype with get() : MSMimeTypesCollection = failwith "never" and set (v : MSMimeTypesCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create202")>]
            member __.Create() : MSMimeTypesCollection = failwith "never"




    type AnonymousType257 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype175")>]
            member __.prototype with get() : StyleSheet = failwith "never" and set (v : StyleSheet) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create203")>]
            member __.Create() : StyleSheet = failwith "never"




    type AnonymousType258 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype176")>]
            member __.prototype with get() : SVGTextPathElement = failwith "never" and set (v : SVGTextPathElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create204")>]
            member __.Create() : SVGTextPathElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_SPACINGTYPE_EXACT)"); CompiledName("TEXTPATH_SPACINGTYPE_EXACT")>]
            member __.TEXTPATH_SPACINGTYPE_EXACT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_METHODTYPE_STRETCH)"); CompiledName("TEXTPATH_METHODTYPE_STRETCH")>]
            member __.TEXTPATH_METHODTYPE_STRETCH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_SPACINGTYPE_AUTO)"); CompiledName("TEXTPATH_SPACINGTYPE_AUTO")>]
            member __.TEXTPATH_SPACINGTYPE_AUTO with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_SPACINGTYPE_UNKNOWN)"); CompiledName("TEXTPATH_SPACINGTYPE_UNKNOWN")>]
            member __.TEXTPATH_SPACINGTYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_METHODTYPE_UNKNOWN)"); CompiledName("TEXTPATH_METHODTYPE_UNKNOWN")>]
            member __.TEXTPATH_METHODTYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_METHODTYPE_ALIGN)"); CompiledName("TEXTPATH_METHODTYPE_ALIGN")>]
            member __.TEXTPATH_METHODTYPE_ALIGN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType259 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype177")>]
            member __.prototype with get() : HTMLDTElement = failwith "never" and set (v : HTMLDTElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create205")>]
            member __.Create() : HTMLDTElement = failwith "never"




    type AnonymousType26 with 

            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create206")>]
            member __.Create<'K, 'V>() : Map<'K, 'V> = failwith "never"




    type AnonymousType260 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype178")>]
            member __.prototype with get() : NodeList = failwith "never" and set (v : NodeList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create207")>]
            member __.Create() : NodeList = failwith "never"




    type AnonymousType261 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype179")>]
            member __.prototype with get() : XMLSerializer = failwith "never" and set (v : XMLSerializer) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create208")>]
            member __.Create() : XMLSerializer = failwith "never"




    type AnonymousType262 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype180")>]
            member __.prototype with get() : PerformanceMeasure = failwith "never" and set (v : PerformanceMeasure) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create209")>]
            member __.Create() : PerformanceMeasure = failwith "never"




    type AnonymousType263 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype181")>]
            member __.prototype with get() : SVGGradientElement = failwith "never" and set (v : SVGGradientElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create210")>]
            member __.Create() : SVGGradientElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_SPREADMETHOD_REFLECT)"); CompiledName("SVG_SPREADMETHOD_REFLECT")>]
            member __.SVG_SPREADMETHOD_REFLECT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_SPREADMETHOD_PAD)"); CompiledName("SVG_SPREADMETHOD_PAD")>]
            member __.SVG_SPREADMETHOD_PAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_SPREADMETHOD_UNKNOWN)"); CompiledName("SVG_SPREADMETHOD_UNKNOWN")>]
            member __.SVG_SPREADMETHOD_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_SPREADMETHOD_REPEAT)"); CompiledName("SVG_SPREADMETHOD_REPEAT")>]
            member __.SVG_SPREADMETHOD_REPEAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType264 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype182")>]
            member __.prototype with get() : SVGNumberList = failwith "never" and set (v : SVGNumberList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create211")>]
            member __.Create() : SVGNumberList = failwith "never"




    type AnonymousType265 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype183")>]
            member __.prototype with get() : MediaError = failwith "never" and set (v : MediaError) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create212")>]
            member __.Create() : MediaError = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_ERR_ABORTED)"); CompiledName("MEDIA_ERR_ABORTED")>]
            member __.MEDIA_ERR_ABORTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_ERR_NETWORK)"); CompiledName("MEDIA_ERR_NETWORK")>]
            member __.MEDIA_ERR_NETWORK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_ERR_SRC_NOT_SUPPORTED)"); CompiledName("MEDIA_ERR_SRC_NOT_SUPPORTED")>]
            member __.MEDIA_ERR_SRC_NOT_SUPPORTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_ERR_DECODE)"); CompiledName("MEDIA_ERR_DECODE")>]
            member __.MEDIA_ERR_DECODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_ERR_ENCRYPTED)"); CompiledName("MS_MEDIA_ERR_ENCRYPTED")>]
            member __.MS_MEDIA_ERR_ENCRYPTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType266 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype184")>]
            member __.prototype with get() : HTMLFieldSetElement = failwith "never" and set (v : HTMLFieldSetElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create213")>]
            member __.Create() : HTMLFieldSetElement = failwith "never"




    type AnonymousType267 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype185")>]
            member __.prototype with get() : HTMLBGSoundElement = failwith "never" and set (v : HTMLBGSoundElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create214")>]
            member __.Create() : HTMLBGSoundElement = failwith "never"




    type AnonymousType268 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype186")>]
            member __.prototype with get() : Comment = failwith "never" and set (v : Comment) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create215")>]
            member __.Create() : Comment = failwith "never"




    type AnonymousType269 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype187")>]
            member __.prototype with get() : PerformanceResourceTiming = failwith "never" and set (v : PerformanceResourceTiming) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create216")>]
            member __.Create() : PerformanceResourceTiming = failwith "never"




    type AnonymousType27 with 

            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create217")>]
            member __.Create<'K, 'V>() : WeakMap<'K, 'V> = failwith "never"




    type AnonymousType270 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype188")>]
            member __.prototype with get() : CanvasPattern = failwith "never" and set (v : CanvasPattern) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create218")>]
            member __.Create() : CanvasPattern = failwith "never"




    type AnonymousType271 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype189")>]
            member __.prototype with get() : HTMLHRElement = failwith "never" and set (v : HTMLHRElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create219")>]
            member __.Create() : HTMLHRElement = failwith "never"




    type AnonymousType272 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype190")>]
            member __.prototype with get() : HTMLObjectElement = failwith "never" and set (v : HTMLObjectElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create220")>]
            member __.Create() : HTMLObjectElement = failwith "never"




    type AnonymousType273 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype191")>]
            member __.prototype with get() : HTMLEmbedElement = failwith "never" and set (v : HTMLEmbedElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create221")>]
            member __.Create() : HTMLEmbedElement = failwith "never"




    type AnonymousType274 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype192")>]
            member __.prototype with get() : StorageEvent = failwith "never" and set (v : StorageEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create222")>]
            member __.Create() : StorageEvent = failwith "never"




    type AnonymousType275 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype193")>]
            member __.prototype with get() : CharacterData = failwith "never" and set (v : CharacterData) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create223")>]
            member __.Create() : CharacterData = failwith "never"




    type AnonymousType276 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype194")>]
            member __.prototype with get() : HTMLOptGroupElement = failwith "never" and set (v : HTMLOptGroupElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create224")>]
            member __.Create() : HTMLOptGroupElement = failwith "never"




    type AnonymousType277 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype195")>]
            member __.prototype with get() : HTMLIsIndexElement = failwith "never" and set (v : HTMLIsIndexElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create225")>]
            member __.Create() : HTMLIsIndexElement = failwith "never"




    type AnonymousType278 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype196")>]
            member __.prototype with get() : SVGPathSegLinetoRel = failwith "never" and set (v : SVGPathSegLinetoRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create226")>]
            member __.Create() : SVGPathSegLinetoRel = failwith "never"




    type AnonymousType279 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype197")>]
            member __.prototype with get() : DOMException = failwith "never" and set (v : DOMException) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create227")>]
            member __.Create() : DOMException = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIERARCHY_REQUEST_ERR)"); CompiledName("HIERARCHY_REQUEST_ERR")>]
            member __.HIERARCHY_REQUEST_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NO_MODIFICATION_ALLOWED_ERR)"); CompiledName("NO_MODIFICATION_ALLOWED_ERR")>]
            member __.NO_MODIFICATION_ALLOWED_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_MODIFICATION_ERR)"); CompiledName("INVALID_MODIFICATION_ERR")>]
            member __.INVALID_MODIFICATION_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NAMESPACE_ERR)"); CompiledName("NAMESPACE_ERR")>]
            member __.NAMESPACE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_CHARACTER_ERR)"); CompiledName("INVALID_CHARACTER_ERR")>]
            member __.INVALID_CHARACTER_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_MISMATCH_ERR)"); CompiledName("TYPE_MISMATCH_ERR")>]
            member __.TYPE_MISMATCH_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ABORT_ERR)"); CompiledName("ABORT_ERR")>]
            member __.ABORT_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_STATE_ERR)"); CompiledName("INVALID_STATE_ERR")>]
            member __.INVALID_STATE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SECURITY_ERR)"); CompiledName("SECURITY_ERR")>]
            member __.SECURITY_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_ERR)"); CompiledName("NETWORK_ERR")>]
            member __.NETWORK_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.WRONG_DOCUMENT_ERR)"); CompiledName("WRONG_DOCUMENT_ERR")>]
            member __.WRONG_DOCUMENT_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.QUOTA_EXCEEDED_ERR)"); CompiledName("QUOTA_EXCEEDED_ERR")>]
            member __.QUOTA_EXCEEDED_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INDEX_SIZE_ERR)"); CompiledName("INDEX_SIZE_ERR")>]
            member __.INDEX_SIZE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOMSTRING_SIZE_ERR)"); CompiledName("DOMSTRING_SIZE_ERR")>]
            member __.DOMSTRING_SIZE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SYNTAX_ERR)"); CompiledName("SYNTAX_ERR")>]
            member __.SYNTAX_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SERIALIZE_ERR)"); CompiledName("SERIALIZE_ERR")>]
            member __.SERIALIZE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VALIDATION_ERR)"); CompiledName("VALIDATION_ERR")>]
            member __.VALIDATION_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NOT_FOUND_ERR)"); CompiledName("NOT_FOUND_ERR")>]
            member __.NOT_FOUND_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.URL_MISMATCH_ERR)"); CompiledName("URL_MISMATCH_ERR")>]
            member __.URL_MISMATCH_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PARSE_ERR)"); CompiledName("PARSE_ERR")>]
            member __.PARSE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NO_DATA_ALLOWED_ERR)"); CompiledName("NO_DATA_ALLOWED_ERR")>]
            member __.NO_DATA_ALLOWED_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NOT_SUPPORTED_ERR)"); CompiledName("NOT_SUPPORTED_ERR")>]
            member __.NOT_SUPPORTED_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_ACCESS_ERR)"); CompiledName("INVALID_ACCESS_ERR")>]
            member __.INVALID_ACCESS_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INUSE_ATTRIBUTE_ERR)"); CompiledName("INUSE_ATTRIBUTE_ERR")>]
            member __.INUSE_ATTRIBUTE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_NODE_TYPE_ERR)"); CompiledName("INVALID_NODE_TYPE_ERR")>]
            member __.INVALID_NODE_TYPE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DATA_CLONE_ERR)"); CompiledName("DATA_CLONE_ERR")>]
            member __.DATA_CLONE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TIMEOUT_ERR)"); CompiledName("TIMEOUT_ERR")>]
            member __.TIMEOUT_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType28 with 

            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create228")>]
            member __.Create<'T>() : Set<'T> = failwith "never"




    type AnonymousType280 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype198")>]
            member __.prototype with get() : SVGAnimatedBoolean = failwith "never" and set (v : SVGAnimatedBoolean) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create229")>]
            member __.Create() : SVGAnimatedBoolean = failwith "never"




    type AnonymousType281 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype199")>]
            member __.prototype with get() : MSCompatibleInfoCollection = failwith "never" and set (v : MSCompatibleInfoCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create230")>]
            member __.Create() : MSCompatibleInfoCollection = failwith "never"




    type AnonymousType282 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype200")>]
            member __.prototype with get() : SVGSwitchElement = failwith "never" and set (v : SVGSwitchElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create231")>]
            member __.Create() : SVGSwitchElement = failwith "never"




    type AnonymousType283 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype201")>]
            member __.prototype with get() : SVGPreserveAspectRatio = failwith "never" and set (v : SVGPreserveAspectRatio) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create232")>]
            member __.Create() : SVGPreserveAspectRatio = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_NONE)"); CompiledName("SVG_PRESERVEASPECTRATIO_NONE")>]
            member __.SVG_PRESERVEASPECTRATIO_NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMINYMID)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMINYMID")>]
            member __.SVG_PRESERVEASPECTRATIO_XMINYMID with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMAXYMIN)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMAXYMIN")>]
            member __.SVG_PRESERVEASPECTRATIO_XMAXYMIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMINYMAX)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMINYMAX")>]
            member __.SVG_PRESERVEASPECTRATIO_XMINYMAX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMAXYMAX)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMAXYMAX")>]
            member __.SVG_PRESERVEASPECTRATIO_XMAXYMAX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MEETORSLICE_UNKNOWN)"); CompiledName("SVG_MEETORSLICE_UNKNOWN")>]
            member __.SVG_MEETORSLICE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMAXYMID)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMAXYMID")>]
            member __.SVG_PRESERVEASPECTRATIO_XMAXYMID with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMIDYMAX)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMIDYMAX")>]
            member __.SVG_PRESERVEASPECTRATIO_XMIDYMAX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMINYMIN)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMINYMIN")>]
            member __.SVG_PRESERVEASPECTRATIO_XMINYMIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MEETORSLICE_MEET)"); CompiledName("SVG_MEETORSLICE_MEET")>]
            member __.SVG_MEETORSLICE_MEET with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMIDYMID)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMIDYMID")>]
            member __.SVG_PRESERVEASPECTRATIO_XMIDYMID with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMIDYMIN)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMIDYMIN")>]
            member __.SVG_PRESERVEASPECTRATIO_XMIDYMIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MEETORSLICE_SLICE)"); CompiledName("SVG_MEETORSLICE_SLICE")>]
            member __.SVG_MEETORSLICE_SLICE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_UNKNOWN)"); CompiledName("SVG_PRESERVEASPECTRATIO_UNKNOWN")>]
            member __.SVG_PRESERVEASPECTRATIO_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType284 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype202")>]
            member __.prototype with get() : Attr = failwith "never" and set (v : Attr) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create233")>]
            member __.Create() : Attr = failwith "never"




    type AnonymousType285 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype203")>]
            member __.prototype with get() : PerformanceNavigation = failwith "never" and set (v : PerformanceNavigation) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create234")>]
            member __.Create() : PerformanceNavigation = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_RELOAD)"); CompiledName("TYPE_RELOAD")>]
            member __.TYPE_RELOAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_RESERVED)"); CompiledName("TYPE_RESERVED")>]
            member __.TYPE_RESERVED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_BACK_FORWARD)"); CompiledName("TYPE_BACK_FORWARD")>]
            member __.TYPE_BACK_FORWARD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_NAVIGATE)"); CompiledName("TYPE_NAVIGATE")>]
            member __.TYPE_NAVIGATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType286 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype204")>]
            member __.prototype with get() : SVGStopElement = failwith "never" and set (v : SVGStopElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create235")>]
            member __.Create() : SVGStopElement = failwith "never"




    type AnonymousType287 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype205")>]
            member __.prototype with get() : SVGSymbolElement = failwith "never" and set (v : SVGSymbolElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create236")>]
            member __.Create() : SVGSymbolElement = failwith "never"




    type AnonymousType288 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype206")>]
            member __.prototype with get() : SVGElementInstanceList = failwith "never" and set (v : SVGElementInstanceList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create237")>]
            member __.Create() : SVGElementInstanceList = failwith "never"




    type AnonymousType289 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype207")>]
            member __.prototype with get() : CSSRuleList = failwith "never" and set (v : CSSRuleList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create238")>]
            member __.Create() : CSSRuleList = failwith "never"




    type AnonymousType29 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create239")>]
            member __.Create(?locales : array<string>, ?options : CollatorOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create240")>]
            member __.CreateOverload2(?locale : string, ?options : CollatorOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke13")>]
            member __.Invoke(?locales : array<string>, ?options : CollatorOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke14")>]
            member __.InvokeOverload2(?locale : string, ?options : CollatorOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}.supportedLocalesOf({args}))"); CompiledName("supportedLocalesOf")>]
            member __.supportedLocalesOf(locales : array<string>, ?options : CollatorOptions) : array<string> = failwith "never"
            [<FunScript.JSEmitInline("({0}.supportedLocalesOf({args}))"); CompiledName("supportedLocalesOf1")>]
            member __.supportedLocalesOf(locale : string, ?options : CollatorOptions) : array<string> = failwith "never"




    type AnonymousType290 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype208")>]
            member __.prototype with get() : HTMLVideoElement = failwith "never" and set (v : HTMLVideoElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create241")>]
            member __.Create() : HTMLVideoElement = failwith "never"




    type AnonymousType291 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype209")>]
            member __.prototype with get() : ClientRectList = failwith "never" and set (v : ClientRectList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create242")>]
            member __.Create() : ClientRectList = failwith "never"




    type AnonymousType292 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype210")>]
            member __.prototype with get() : SVGMaskElement = failwith "never" and set (v : SVGMaskElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create243")>]
            member __.Create() : SVGMaskElement = failwith "never"




    type AnonymousType293 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype211")>]
            member __.prototype with get() : External = failwith "never" and set (v : External) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create244")>]
            member __.Create() : External = failwith "never"




    type AnonymousType294 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype212")>]
            member __.prototype with get() : MSGestureEvent = failwith "never" and set (v : MSGestureEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create245")>]
            member __.Create() : MSGestureEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_BEGIN)"); CompiledName("MSGESTURE_FLAG_BEGIN")>]
            member __.MSGESTURE_FLAG_BEGIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_END)"); CompiledName("MSGESTURE_FLAG_END")>]
            member __.MSGESTURE_FLAG_END with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_CANCEL)"); CompiledName("MSGESTURE_FLAG_CANCEL")>]
            member __.MSGESTURE_FLAG_CANCEL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_INERTIA)"); CompiledName("MSGESTURE_FLAG_INERTIA")>]
            member __.MSGESTURE_FLAG_INERTIA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_NONE)"); CompiledName("MSGESTURE_FLAG_NONE")>]
            member __.MSGESTURE_FLAG_NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType295 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype213")>]
            member __.prototype with get() : ErrorEvent = failwith "never" and set (v : ErrorEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create246")>]
            member __.Create() : ErrorEvent = failwith "never"




    type AnonymousType296 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype214")>]
            member __.prototype with get() : SVGFilterElement = failwith "never" and set (v : SVGFilterElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create247")>]
            member __.Create() : SVGFilterElement = failwith "never"




    type AnonymousType297 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype215")>]
            member __.prototype with get() : TrackEvent = failwith "never" and set (v : TrackEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create248")>]
            member __.Create() : TrackEvent = failwith "never"




    type AnonymousType298 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype216")>]
            member __.prototype with get() : SVGFEMergeNodeElement = failwith "never" and set (v : SVGFEMergeNodeElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create249")>]
            member __.Create() : SVGFEMergeNodeElement = failwith "never"




    type AnonymousType299 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype217")>]
            member __.prototype with get() : SVGFEFloodElement = failwith "never" and set (v : SVGFEFloodElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create250")>]
            member __.Create() : SVGFEFloodElement = failwith "never"




    type AnonymousType3 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create251")>]
            member __.Create(?value : obj) : String = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke15")>]
            member __.Invoke(?value : obj) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype218")>]
            member __.prototype with get() : String = failwith "never" and set (v : String) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fromCharCode())"); CompiledName("fromCharCode")>]
            member __.fromCharCode() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.fromCharCode({args}))"); CompiledName("fromCharCode1")>]
            member __.fromCharCodeOverload2([<System.ParamArray>] codes : array<float>) : string = failwith "never"




    type AnonymousType30 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create252")>]
            member __.Create(?locales : array<string>, ?options : NumberFormatOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create253")>]
            member __.CreateOverload2(?locale : string, ?options : NumberFormatOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke16")>]
            member __.Invoke(?locales : array<string>, ?options : NumberFormatOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke17")>]
            member __.InvokeOverload2(?locale : string, ?options : NumberFormatOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}.supportedLocalesOf({args}))"); CompiledName("supportedLocalesOf2")>]
            member __.supportedLocalesOf(locales : array<string>, ?options : NumberFormatOptions) : array<string> = failwith "never"
            [<FunScript.JSEmitInline("({0}.supportedLocalesOf({args}))"); CompiledName("supportedLocalesOf3")>]
            member __.supportedLocalesOf(locale : string, ?options : NumberFormatOptions) : array<string> = failwith "never"




    type AnonymousType300 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype219")>]
            member __.prototype with get() : MSGesture = failwith "never" and set (v : MSGesture) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create254")>]
            member __.Create() : MSGesture = failwith "never"




    type AnonymousType301 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype220")>]
            member __.prototype with get() : TextTrackCue = failwith "never" and set (v : TextTrackCue) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create255")>]
            member __.Create(startTime : float, endTime : float, text : string) : TextTrackCue = failwith "never"




    type AnonymousType302 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype221")>]
            member __.prototype with get() : MSStreamReader = failwith "never" and set (v : MSStreamReader) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create256")>]
            member __.Create() : MSStreamReader = failwith "never"




    type AnonymousType303 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype222")>]
            member __.prototype with get() : DOMTokenList = failwith "never" and set (v : DOMTokenList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create257")>]
            member __.Create() : DOMTokenList = failwith "never"




    type AnonymousType304 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype223")>]
            member __.prototype with get() : SVGFEFuncAElement = failwith "never" and set (v : SVGFEFuncAElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create258")>]
            member __.Create() : SVGFEFuncAElement = failwith "never"




    type AnonymousType305 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype224")>]
            member __.prototype with get() : SVGFETileElement = failwith "never" and set (v : SVGFETileElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create259")>]
            member __.Create() : SVGFETileElement = failwith "never"




    type AnonymousType306 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype225")>]
            member __.prototype with get() : SVGFEBlendElement = failwith "never" and set (v : SVGFEBlendElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create260")>]
            member __.Create() : SVGFEBlendElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_DARKEN)"); CompiledName("SVG_FEBLEND_MODE_DARKEN")>]
            member __.SVG_FEBLEND_MODE_DARKEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_UNKNOWN)"); CompiledName("SVG_FEBLEND_MODE_UNKNOWN")>]
            member __.SVG_FEBLEND_MODE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_MULTIPLY)"); CompiledName("SVG_FEBLEND_MODE_MULTIPLY")>]
            member __.SVG_FEBLEND_MODE_MULTIPLY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_NORMAL)"); CompiledName("SVG_FEBLEND_MODE_NORMAL")>]
            member __.SVG_FEBLEND_MODE_NORMAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_SCREEN)"); CompiledName("SVG_FEBLEND_MODE_SCREEN")>]
            member __.SVG_FEBLEND_MODE_SCREEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_LIGHTEN)"); CompiledName("SVG_FEBLEND_MODE_LIGHTEN")>]
            member __.SVG_FEBLEND_MODE_LIGHTEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType307 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype226")>]
            member __.prototype with get() : MessageChannel = failwith "never" and set (v : MessageChannel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create261")>]
            member __.Create() : MessageChannel = failwith "never"




    type AnonymousType308 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype227")>]
            member __.prototype with get() : SVGFEMergeElement = failwith "never" and set (v : SVGFEMergeElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create262")>]
            member __.Create() : SVGFEMergeElement = failwith "never"




    type AnonymousType309 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype228")>]
            member __.prototype with get() : TransitionEvent = failwith "never" and set (v : TransitionEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create263")>]
            member __.Create() : TransitionEvent = failwith "never"




    type AnonymousType31 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create264")>]
            member __.Create(?locales : array<string>, ?options : DateTimeFormatOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create265")>]
            member __.CreateOverload2(?locale : string, ?options : DateTimeFormatOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke18")>]
            member __.Invoke(?locales : array<string>, ?options : DateTimeFormatOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke19")>]
            member __.InvokeOverload2(?locale : string, ?options : DateTimeFormatOptions) : Collator = failwith "never"
            [<FunScript.JSEmitInline("({0}.supportedLocalesOf({args}))"); CompiledName("supportedLocalesOf4")>]
            member __.supportedLocalesOf(locales : array<string>, ?options : DateTimeFormatOptions) : array<string> = failwith "never"
            [<FunScript.JSEmitInline("({0}.supportedLocalesOf({args}))"); CompiledName("supportedLocalesOf5")>]
            member __.supportedLocalesOf(locale : string, ?options : DateTimeFormatOptions) : array<string> = failwith "never"




    type AnonymousType310 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype229")>]
            member __.prototype with get() : MediaQueryList = failwith "never" and set (v : MediaQueryList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create266")>]
            member __.Create() : MediaQueryList = failwith "never"




    type AnonymousType311 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype230")>]
            member __.prototype with get() : DOMError = failwith "never" and set (v : DOMError) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create267")>]
            member __.Create() : DOMError = failwith "never"




    type AnonymousType312 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype231")>]
            member __.prototype with get() : CloseEvent = failwith "never" and set (v : CloseEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create268")>]
            member __.Create() : CloseEvent = failwith "never"




    type AnonymousType313 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype232")>]
            member __.prototype with get() : WebSocket = failwith "never" and set (v : WebSocket) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create269")>]
            member __.Create(url : string, ?protocols : string) : WebSocket = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create270")>]
            member __.CreateOverload2(url : string, ?protocols : array<string>) : WebSocket = failwith "never"
            [<FunScript.JSEmitInline("({0}.OPEN)"); CompiledName("OPEN")>]
            member __.OPEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CLOSING)"); CompiledName("CLOSING")>]
            member __.CLOSING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CONNECTING)"); CompiledName("CONNECTING")>]
            member __.CONNECTING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CLOSED)"); CompiledName("CLOSED")>]
            member __.CLOSED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType314 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype233")>]
            member __.prototype with get() : SVGFEPointLightElement = failwith "never" and set (v : SVGFEPointLightElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create271")>]
            member __.Create() : SVGFEPointLightElement = failwith "never"




    type AnonymousType315 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype234")>]
            member __.prototype with get() : ProgressEvent = failwith "never" and set (v : ProgressEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create272")>]
            member __.Create() : ProgressEvent = failwith "never"




    type AnonymousType316 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype235")>]
            member __.prototype with get() : IDBObjectStore = failwith "never" and set (v : IDBObjectStore) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create273")>]
            member __.Create() : IDBObjectStore = failwith "never"




    type AnonymousType317 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype236")>]
            member __.prototype with get() : SVGFEGaussianBlurElement = failwith "never" and set (v : SVGFEGaussianBlurElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create274")>]
            member __.Create() : SVGFEGaussianBlurElement = failwith "never"




    type AnonymousType318 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype237")>]
            member __.prototype with get() : IDBVersionChangeEvent = failwith "never" and set (v : IDBVersionChangeEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create275")>]
            member __.Create() : IDBVersionChangeEvent = failwith "never"




    type AnonymousType319 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype238")>]
            member __.prototype with get() : IDBIndex = failwith "never" and set (v : IDBIndex) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create276")>]
            member __.Create() : IDBIndex = failwith "never"




    type AnonymousType32 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype239")>]
            member __.prototype with get() : HTMLElement = failwith "never" and set (v : HTMLElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create277")>]
            member __.Create() : HTMLElement = failwith "never"




    type AnonymousType320 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype240")>]
            member __.prototype with get() : FileList = failwith "never" and set (v : FileList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create278")>]
            member __.Create() : FileList = failwith "never"




    type AnonymousType321 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype241")>]
            member __.prototype with get() : IDBCursor = failwith "never" and set (v : IDBCursor) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create279")>]
            member __.Create() : IDBCursor = failwith "never"
            [<FunScript.JSEmitInline("({0}.PREV)"); CompiledName("PREV")>]
            member __.PREV with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PREV_NO_DUPLICATE)"); CompiledName("PREV_NO_DUPLICATE")>]
            member __.PREV_NO_DUPLICATE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEXT)"); CompiledName("NEXT")>]
            member __.NEXT with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEXT_NO_DUPLICATE)"); CompiledName("NEXT_NO_DUPLICATE")>]
            member __.NEXT_NO_DUPLICATE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type AnonymousType322 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype242")>]
            member __.prototype with get() : SVGFESpecularLightingElement = failwith "never" and set (v : SVGFESpecularLightingElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create280")>]
            member __.Create() : SVGFESpecularLightingElement = failwith "never"




    type AnonymousType323 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype243")>]
            member __.prototype with get() : File = failwith "never" and set (v : File) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create281")>]
            member __.Create() : File = failwith "never"




    type AnonymousType324 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype244")>]
            member __.prototype with get() : IDBCursorWithValue = failwith "never" and set (v : IDBCursorWithValue) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create282")>]
            member __.Create() : IDBCursorWithValue = failwith "never"




    type AnonymousType325 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype245")>]
            member __.prototype with get() : XMLHttpRequestEventTarget = failwith "never" and set (v : XMLHttpRequestEventTarget) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create283")>]
            member __.Create() : XMLHttpRequestEventTarget = failwith "never"




    type AnonymousType326 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype246")>]
            member __.prototype with get() : AudioTrackList = failwith "never" and set (v : AudioTrackList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create284")>]
            member __.Create() : AudioTrackList = failwith "never"




    type AnonymousType327 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype247")>]
            member __.prototype with get() : SVGFEMorphologyElement = failwith "never" and set (v : SVGFEMorphologyElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create285")>]
            member __.Create() : SVGFEMorphologyElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MORPHOLOGY_OPERATOR_UNKNOWN)"); CompiledName("SVG_MORPHOLOGY_OPERATOR_UNKNOWN")>]
            member __.SVG_MORPHOLOGY_OPERATOR_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MORPHOLOGY_OPERATOR_ERODE)"); CompiledName("SVG_MORPHOLOGY_OPERATOR_ERODE")>]
            member __.SVG_MORPHOLOGY_OPERATOR_ERODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MORPHOLOGY_OPERATOR_DILATE)"); CompiledName("SVG_MORPHOLOGY_OPERATOR_DILATE")>]
            member __.SVG_MORPHOLOGY_OPERATOR_DILATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType328 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype248")>]
            member __.prototype with get() : SVGFEFuncRElement = failwith "never" and set (v : SVGFEFuncRElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create286")>]
            member __.Create() : SVGFEFuncRElement = failwith "never"




    type AnonymousType329 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype249")>]
            member __.prototype with get() : SVGFEDisplacementMapElement = failwith "never" and set (v : SVGFEDisplacementMapElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create287")>]
            member __.Create() : SVGFEDisplacementMapElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_B)"); CompiledName("SVG_CHANNEL_B")>]
            member __.SVG_CHANNEL_B with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_R)"); CompiledName("SVG_CHANNEL_R")>]
            member __.SVG_CHANNEL_R with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_G)"); CompiledName("SVG_CHANNEL_G")>]
            member __.SVG_CHANNEL_G with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_UNKNOWN)"); CompiledName("SVG_CHANNEL_UNKNOWN")>]
            member __.SVG_CHANNEL_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_A)"); CompiledName("SVG_CHANNEL_A")>]
            member __.SVG_CHANNEL_A with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType33 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype250")>]
            member __.prototype with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create288")>]
            member __.Create() : Document = failwith "never"




    type AnonymousType330 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype251")>]
            member __.prototype with get() : AnimationEvent = failwith "never" and set (v : AnimationEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create289")>]
            member __.Create() : AnimationEvent = failwith "never"




    type AnonymousType331 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype252")>]
            member __.prototype with get() : SVGComponentTransferFunctionElement = failwith "never" and set (v : SVGComponentTransferFunctionElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create290")>]
            member __.Create() : SVGComponentTransferFunctionElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_TABLE)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_TABLE")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_TABLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_GAMMA")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_LINEAR")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType332 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype253")>]
            member __.prototype with get() : MSRangeCollection = failwith "never" and set (v : MSRangeCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create291")>]
            member __.Create() : MSRangeCollection = failwith "never"




    type AnonymousType333 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype254")>]
            member __.prototype with get() : SVGFEDistantLightElement = failwith "never" and set (v : SVGFEDistantLightElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create292")>]
            member __.Create() : SVGFEDistantLightElement = failwith "never"




    type AnonymousType334 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype255")>]
            member __.prototype with get() : SVGFEFuncBElement = failwith "never" and set (v : SVGFEFuncBElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create293")>]
            member __.Create() : SVGFEFuncBElement = failwith "never"




    type AnonymousType335 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype256")>]
            member __.prototype with get() : IDBKeyRange = failwith "never" and set (v : IDBKeyRange) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create294")>]
            member __.Create() : IDBKeyRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.bound({args}))"); CompiledName("bound")>]
            member __.bound(lower : obj, upper : obj, ?lowerOpen : bool, ?upperOpen : bool) : IDBKeyRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.only({args}))"); CompiledName("only")>]
            member __.only(value : obj) : IDBKeyRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.lowerBound({args}))"); CompiledName("lowerBound")>]
            member __.lowerBound(bound : obj, ?_open : bool) : IDBKeyRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.upperBound({args}))"); CompiledName("upperBound")>]
            member __.upperBound(bound : obj, ?_open : bool) : IDBKeyRange = failwith "never"




    type AnonymousType336 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype257")>]
            member __.prototype with get() : IDBTransaction = failwith "never" and set (v : IDBTransaction) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create295")>]
            member __.Create() : IDBTransaction = failwith "never"
            [<FunScript.JSEmitInline("({0}.READ_ONLY)"); CompiledName("READ_ONLY")>]
            member __.READ_ONLY with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERSION_CHANGE)"); CompiledName("VERSION_CHANGE")>]
            member __.VERSION_CHANGE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.READ_WRITE)"); CompiledName("READ_WRITE")>]
            member __.READ_WRITE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type AnonymousType337 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype258")>]
            member __.prototype with get() : AudioTrack = failwith "never" and set (v : AudioTrack) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create296")>]
            member __.Create() : AudioTrack = failwith "never"




    type AnonymousType338 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype259")>]
            member __.prototype with get() : SVGFEConvolveMatrixElement = failwith "never" and set (v : SVGFEConvolveMatrixElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create297")>]
            member __.Create() : SVGFEConvolveMatrixElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_EDGEMODE_WRAP)"); CompiledName("SVG_EDGEMODE_WRAP")>]
            member __.SVG_EDGEMODE_WRAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_EDGEMODE_DUPLICATE)"); CompiledName("SVG_EDGEMODE_DUPLICATE")>]
            member __.SVG_EDGEMODE_DUPLICATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_EDGEMODE_UNKNOWN)"); CompiledName("SVG_EDGEMODE_UNKNOWN")>]
            member __.SVG_EDGEMODE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_EDGEMODE_NONE)"); CompiledName("SVG_EDGEMODE_NONE")>]
            member __.SVG_EDGEMODE_NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType339 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype260")>]
            member __.prototype with get() : TextTrackCueList = failwith "never" and set (v : TextTrackCueList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create298")>]
            member __.Create() : TextTrackCueList = failwith "never"




    type AnonymousType34 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype261")>]
            member __.prototype with get() : Console = failwith "never" and set (v : Console) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create299")>]
            member __.Create() : Console = failwith "never"




    type AnonymousType340 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype262")>]
            member __.prototype with get() : CSSKeyframesRule = failwith "never" and set (v : CSSKeyframesRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create300")>]
            member __.Create() : CSSKeyframesRule = failwith "never"




    type AnonymousType341 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype263")>]
            member __.prototype with get() : SVGFETurbulenceElement = failwith "never" and set (v : SVGFETurbulenceElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create301")>]
            member __.Create() : SVGFETurbulenceElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_STITCHTYPE_UNKNOWN)"); CompiledName("SVG_STITCHTYPE_UNKNOWN")>]
            member __.SVG_STITCHTYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_STITCHTYPE_NOSTITCH)"); CompiledName("SVG_STITCHTYPE_NOSTITCH")>]
            member __.SVG_STITCHTYPE_NOSTITCH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TURBULENCE_TYPE_UNKNOWN)"); CompiledName("SVG_TURBULENCE_TYPE_UNKNOWN")>]
            member __.SVG_TURBULENCE_TYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TURBULENCE_TYPE_TURBULENCE)"); CompiledName("SVG_TURBULENCE_TYPE_TURBULENCE")>]
            member __.SVG_TURBULENCE_TYPE_TURBULENCE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TURBULENCE_TYPE_FRACTALNOISE)"); CompiledName("SVG_TURBULENCE_TYPE_FRACTALNOISE")>]
            member __.SVG_TURBULENCE_TYPE_FRACTALNOISE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_STITCHTYPE_STITCH)"); CompiledName("SVG_STITCHTYPE_STITCH")>]
            member __.SVG_STITCHTYPE_STITCH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType342 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype264")>]
            member __.prototype with get() : TextTrackList = failwith "never" and set (v : TextTrackList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create302")>]
            member __.Create() : TextTrackList = failwith "never"




    type AnonymousType343 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype265")>]
            member __.prototype with get() : SVGFEFuncGElement = failwith "never" and set (v : SVGFEFuncGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create303")>]
            member __.Create() : SVGFEFuncGElement = failwith "never"




    type AnonymousType344 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype266")>]
            member __.prototype with get() : SVGFEColorMatrixElement = failwith "never" and set (v : SVGFEColorMatrixElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create304")>]
            member __.Create() : SVGFEColorMatrixElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_SATURATE)"); CompiledName("SVG_FECOLORMATRIX_TYPE_SATURATE")>]
            member __.SVG_FECOLORMATRIX_TYPE_SATURATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_UNKNOWN)"); CompiledName("SVG_FECOLORMATRIX_TYPE_UNKNOWN")>]
            member __.SVG_FECOLORMATRIX_TYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_MATRIX)"); CompiledName("SVG_FECOLORMATRIX_TYPE_MATRIX")>]
            member __.SVG_FECOLORMATRIX_TYPE_MATRIX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_HUEROTATE)"); CompiledName("SVG_FECOLORMATRIX_TYPE_HUEROTATE")>]
            member __.SVG_FECOLORMATRIX_TYPE_HUEROTATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA)"); CompiledName("SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA")>]
            member __.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType345 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype267")>]
            member __.prototype with get() : SVGFESpotLightElement = failwith "never" and set (v : SVGFESpotLightElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create305")>]
            member __.Create() : SVGFESpotLightElement = failwith "never"




    type AnonymousType346 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype268")>]
            member __.prototype with get() : IDBDatabase = failwith "never" and set (v : IDBDatabase) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create306")>]
            member __.Create() : IDBDatabase = failwith "never"




    type AnonymousType347 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype269")>]
            member __.prototype with get() : DOMStringList = failwith "never" and set (v : DOMStringList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create307")>]
            member __.Create() : DOMStringList = failwith "never"




    type AnonymousType348 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype270")>]
            member __.prototype with get() : IDBOpenDBRequest = failwith "never" and set (v : IDBOpenDBRequest) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create308")>]
            member __.Create() : IDBOpenDBRequest = failwith "never"




    type AnonymousType349 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype271")>]
            member __.prototype with get() : HTMLProgressElement = failwith "never" and set (v : HTMLProgressElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create309")>]
            member __.Create() : HTMLProgressElement = failwith "never"




    type AnonymousType35 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype272")>]
            member __.prototype with get() : MSEventObj = failwith "never" and set (v : MSEventObj) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create310")>]
            member __.Create() : MSEventObj = failwith "never"




    type AnonymousType350 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype273")>]
            member __.prototype with get() : SVGFEOffsetElement = failwith "never" and set (v : SVGFEOffsetElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create311")>]
            member __.Create() : SVGFEOffsetElement = failwith "never"




    type AnonymousType351 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype274")>]
            member __.prototype with get() : TextTrack = failwith "never" and set (v : TextTrack) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create312")>]
            member __.Create() : TextTrack = failwith "never"
            [<FunScript.JSEmitInline("({0}.ERROR)"); CompiledName("ERROR")>]
            member __.ERROR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOWING)"); CompiledName("SHOWING")>]
            member __.SHOWING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADING)"); CompiledName("LOADING1")>]
            member __.LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADED)"); CompiledName("LOADED")>]
            member __.LOADED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NONE)"); CompiledName("NONE")>]
            member __.NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIDDEN)"); CompiledName("HIDDEN")>]
            member __.HIDDEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DISABLED)"); CompiledName("DISABLED")>]
            member __.DISABLED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType352 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype275")>]
            member __.prototype with get() : IDBRequest = failwith "never" and set (v : IDBRequest) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create313")>]
            member __.Create() : IDBRequest = failwith "never"




    type AnonymousType353 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype276")>]
            member __.prototype with get() : MessagePort = failwith "never" and set (v : MessagePort) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create314")>]
            member __.Create() : MessagePort = failwith "never"




    type AnonymousType354 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype277")>]
            member __.prototype with get() : FileReader = failwith "never" and set (v : FileReader) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create315")>]
            member __.Create() : FileReader = failwith "never"




    type AnonymousType355 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype278")>]
            member __.prototype with get() : ApplicationCache = failwith "never" and set (v : ApplicationCache) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create316")>]
            member __.Create() : ApplicationCache = failwith "never"
            [<FunScript.JSEmitInline("({0}.CHECKING)"); CompiledName("CHECKING")>]
            member __.CHECKING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNCACHED)"); CompiledName("UNCACHED")>]
            member __.UNCACHED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UPDATEREADY)"); CompiledName("UPDATEREADY")>]
            member __.UPDATEREADY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOWNLOADING)"); CompiledName("DOWNLOADING")>]
            member __.DOWNLOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.IDLE)"); CompiledName("IDLE")>]
            member __.IDLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.OBSOLETE)"); CompiledName("OBSOLETE")>]
            member __.OBSOLETE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType356 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype279")>]
            member __.prototype with get() : PopStateEvent = failwith "never" and set (v : PopStateEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create317")>]
            member __.Create() : PopStateEvent = failwith "never"




    type AnonymousType357 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype280")>]
            member __.prototype with get() : CSSKeyframeRule = failwith "never" and set (v : CSSKeyframeRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create318")>]
            member __.Create() : CSSKeyframeRule = failwith "never"




    type AnonymousType358 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype281")>]
            member __.prototype with get() : MSStream = failwith "never" and set (v : MSStream) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create319")>]
            member __.Create() : MSStream = failwith "never"




    type AnonymousType359 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype282")>]
            member __.prototype with get() : MSBlobBuilder = failwith "never" and set (v : MSBlobBuilder) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create320")>]
            member __.Create() : MSBlobBuilder = failwith "never"




    type AnonymousType36 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype283")>]
            member __.prototype with get() : HTMLCanvasElement = failwith "never" and set (v : HTMLCanvasElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create321")>]
            member __.Create() : HTMLCanvasElement = failwith "never"




    type AnonymousType360 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype284")>]
            member __.prototype with get() : DOMSettableTokenList = failwith "never" and set (v : DOMSettableTokenList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create322")>]
            member __.Create() : DOMSettableTokenList = failwith "never"




    type AnonymousType361 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype285")>]
            member __.prototype with get() : IDBFactory = failwith "never" and set (v : IDBFactory) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create323")>]
            member __.Create() : IDBFactory = failwith "never"




    type AnonymousType362 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype286")>]
            member __.prototype with get() : MSPointerEvent = failwith "never" and set (v : MSPointerEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create324")>]
            member __.Create() : MSPointerEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSPOINTER_TYPE_PEN)"); CompiledName("MSPOINTER_TYPE_PEN")>]
            member __.MSPOINTER_TYPE_PEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSPOINTER_TYPE_MOUSE)"); CompiledName("MSPOINTER_TYPE_MOUSE")>]
            member __.MSPOINTER_TYPE_MOUSE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSPOINTER_TYPE_TOUCH)"); CompiledName("MSPOINTER_TYPE_TOUCH")>]
            member __.MSPOINTER_TYPE_TOUCH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType363 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype287")>]
            member __.prototype with get() : MSManipulationEvent = failwith "never" and set (v : MSManipulationEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create325")>]
            member __.Create() : MSManipulationEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_STOPPED)"); CompiledName("MS_MANIPULATION_STATE_STOPPED")>]
            member __.MS_MANIPULATION_STATE_STOPPED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_ACTIVE)"); CompiledName("MS_MANIPULATION_STATE_ACTIVE")>]
            member __.MS_MANIPULATION_STATE_ACTIVE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_INERTIA)"); CompiledName("MS_MANIPULATION_STATE_INERTIA")>]
            member __.MS_MANIPULATION_STATE_INERTIA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_SELECTING)"); CompiledName("MS_MANIPULATION_STATE_SELECTING")>]
            member __.MS_MANIPULATION_STATE_SELECTING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_COMMITTED)"); CompiledName("MS_MANIPULATION_STATE_COMMITTED")>]
            member __.MS_MANIPULATION_STATE_COMMITTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_PRESELECT)"); CompiledName("MS_MANIPULATION_STATE_PRESELECT")>]
            member __.MS_MANIPULATION_STATE_PRESELECT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_DRAGGING)"); CompiledName("MS_MANIPULATION_STATE_DRAGGING")>]
            member __.MS_MANIPULATION_STATE_DRAGGING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_CANCELLED)"); CompiledName("MS_MANIPULATION_STATE_CANCELLED")>]
            member __.MS_MANIPULATION_STATE_CANCELLED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType364 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype288")>]
            member __.prototype with get() : FormData = failwith "never" and set (v : FormData) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create326")>]
            member __.Create() : FormData = failwith "never"




    type AnonymousType365 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype289")>]
            member __.prototype with get() : HTMLDataListElement = failwith "never" and set (v : HTMLDataListElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create327")>]
            member __.Create() : HTMLDataListElement = failwith "never"




    type AnonymousType366 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype290")>]
            member __.prototype with get() : SVGFEImageElement = failwith "never" and set (v : SVGFEImageElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create328")>]
            member __.Create() : SVGFEImageElement = failwith "never"




    type AnonymousType367 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype291")>]
            member __.prototype with get() : SVGFECompositeElement = failwith "never" and set (v : SVGFECompositeElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create329")>]
            member __.Create() : SVGFECompositeElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_OUT)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_OUT")>]
            member __.SVG_FECOMPOSITE_OPERATOR_OUT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_OVER)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_OVER")>]
            member __.SVG_FECOMPOSITE_OPERATOR_OVER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_XOR)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_XOR")>]
            member __.SVG_FECOMPOSITE_OPERATOR_XOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_ARITHMETIC")>]
            member __.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_UNKNOWN)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_UNKNOWN")>]
            member __.SVG_FECOMPOSITE_OPERATOR_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_IN)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_IN")>]
            member __.SVG_FECOMPOSITE_OPERATOR_IN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_ATOP)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_ATOP")>]
            member __.SVG_FECOMPOSITE_OPERATOR_ATOP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType368 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype292")>]
            member __.prototype with get() : ValidityState = failwith "never" and set (v : ValidityState) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create330")>]
            member __.Create() : ValidityState = failwith "never"




    type AnonymousType369 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype293")>]
            member __.prototype with get() : HTMLTrackElement = failwith "never" and set (v : HTMLTrackElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create331")>]
            member __.Create() : HTMLTrackElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.ERROR)"); CompiledName("ERROR1")>]
            member __.ERROR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADING)"); CompiledName("LOADING2")>]
            member __.LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADED)"); CompiledName("LOADED1")>]
            member __.LOADED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NONE)"); CompiledName("NONE1")>]
            member __.NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType37 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype294")>]
            member __.prototype with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create332")>]
            member __.Create() : Window = failwith "never"




    type AnonymousType370 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype295")>]
            member __.prototype with get() : SVGFEComponentTransferElement = failwith "never" and set (v : SVGFEComponentTransferElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create333")>]
            member __.Create() : SVGFEComponentTransferElement = failwith "never"




    type AnonymousType371 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype296")>]
            member __.prototype with get() : SVGFEDiffuseLightingElement = failwith "never" and set (v : SVGFEDiffuseLightingElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create334")>]
            member __.Create() : SVGFEDiffuseLightingElement = failwith "never"




    type AnonymousType372 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype297")>]
            member __.prototype with get() : MSCSSMatrix = failwith "never" and set (v : MSCSSMatrix) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create335")>]
            member __.Create(?text : string) : MSCSSMatrix = failwith "never"




    type AnonymousType373 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype298")>]
            member __.prototype with get() : Worker = failwith "never" and set (v : Worker) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create336")>]
            member __.Create(stringUrl : string) : Worker = failwith "never"




    type AnonymousType374 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype299")>]
            member __.prototype with get() : MSGraphicsTrust = failwith "never" and set (v : MSGraphicsTrust) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create337")>]
            member __.Create() : MSGraphicsTrust = failwith "never"




    type AnonymousType375 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype300")>]
            member __.prototype with get() : SubtleCrypto = failwith "never" and set (v : SubtleCrypto) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create338")>]
            member __.Create() : SubtleCrypto = failwith "never"




    type AnonymousType376 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype301")>]
            member __.prototype with get() : Crypto = failwith "never" and set (v : Crypto) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create339")>]
            member __.Create() : Crypto = failwith "never"




    type AnonymousType377 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype302")>]
            member __.prototype with get() : VideoPlaybackQuality = failwith "never" and set (v : VideoPlaybackQuality) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create340")>]
            member __.Create() : VideoPlaybackQuality = failwith "never"




    type AnonymousType378 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype303")>]
            member __.prototype with get() : Key = failwith "never" and set (v : Key) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create341")>]
            member __.Create() : Key = failwith "never"




    type AnonymousType379 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype304")>]
            member __.prototype with get() : DeviceAcceleration = failwith "never" and set (v : DeviceAcceleration) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create342")>]
            member __.Create() : DeviceAcceleration = failwith "never"




    type AnonymousType38 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype305")>]
            member __.prototype with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create343")>]
            member __.Create() : HTMLCollection = failwith "never"




    type AnonymousType380 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype306")>]
            member __.prototype with get() : HTMLAllCollection = failwith "never" and set (v : HTMLAllCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create344")>]
            member __.Create() : HTMLAllCollection = failwith "never"




    type AnonymousType381 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype307")>]
            member __.prototype with get() : AesGcmEncryptResult = failwith "never" and set (v : AesGcmEncryptResult) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create345")>]
            member __.Create() : AesGcmEncryptResult = failwith "never"




    type AnonymousType382 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype308")>]
            member __.prototype with get() : NavigationCompletedEvent = failwith "never" and set (v : NavigationCompletedEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create346")>]
            member __.Create() : NavigationCompletedEvent = failwith "never"




    type AnonymousType383 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype309")>]
            member __.prototype with get() : MutationRecord = failwith "never" and set (v : MutationRecord) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create347")>]
            member __.Create() : MutationRecord = failwith "never"




    type AnonymousType384 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype310")>]
            member __.prototype with get() : MimeTypeArray = failwith "never" and set (v : MimeTypeArray) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create348")>]
            member __.Create() : MimeTypeArray = failwith "never"




    type AnonymousType385 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype311")>]
            member __.prototype with get() : KeyOperation = failwith "never" and set (v : KeyOperation) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create349")>]
            member __.Create() : KeyOperation = failwith "never"




    type AnonymousType386 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype312")>]
            member __.prototype with get() : DOMStringMap = failwith "never" and set (v : DOMStringMap) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create350")>]
            member __.Create() : DOMStringMap = failwith "never"




    type AnonymousType387 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype313")>]
            member __.prototype with get() : DeviceOrientationEvent = failwith "never" and set (v : DeviceOrientationEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create351")>]
            member __.Create() : DeviceOrientationEvent = failwith "never"




    type AnonymousType388 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype314")>]
            member __.prototype with get() : MSMediaKeys = failwith "never" and set (v : MSMediaKeys) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create352")>]
            member __.Create(keySystem : string) : MSMediaKeys = failwith "never"
            [<FunScript.JSEmitInline("({0}.isTypeSupported({args}))"); CompiledName("isTypeSupported")>]
            member __.isTypeSupported(keySystem : string, ?_type : string) : bool = failwith "never"




    type AnonymousType389 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype315")>]
            member __.prototype with get() : MSMediaKeyMessageEvent = failwith "never" and set (v : MSMediaKeyMessageEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create353")>]
            member __.Create() : MSMediaKeyMessageEvent = failwith "never"




    type AnonymousType39 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype316")>]
            member __.prototype with get() : Blob = failwith "never" and set (v : Blob) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create354")>]
            member __.Create(?blobParts : array<obj>, ?options : BlobPropertyBag) : Blob = failwith "never"




    type AnonymousType390 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype317")>]
            member __.prototype with get() : MSHTMLWebViewElement = failwith "never" and set (v : MSHTMLWebViewElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create355")>]
            member __.Create() : MSHTMLWebViewElement = failwith "never"




    type AnonymousType391 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype318")>]
            member __.prototype with get() : NavigationEvent = failwith "never" and set (v : NavigationEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create356")>]
            member __.Create() : NavigationEvent = failwith "never"




    type AnonymousType392 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype319")>]
            member __.prototype with get() : SourceBuffer = failwith "never" and set (v : SourceBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create357")>]
            member __.Create() : SourceBuffer = failwith "never"




    type AnonymousType393 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype320")>]
            member __.prototype with get() : MSInputMethodContext = failwith "never" and set (v : MSInputMethodContext) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create358")>]
            member __.Create() : MSInputMethodContext = failwith "never"




    type AnonymousType394 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype321")>]
            member __.prototype with get() : DeviceRotationRate = failwith "never" and set (v : DeviceRotationRate) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create359")>]
            member __.Create() : DeviceRotationRate = failwith "never"




    type AnonymousType395 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype322")>]
            member __.prototype with get() : PluginArray = failwith "never" and set (v : PluginArray) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create360")>]
            member __.Create() : PluginArray = failwith "never"




    type AnonymousType396 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype323")>]
            member __.prototype with get() : MSMediaKeyError = failwith "never" and set (v : MSMediaKeyError) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create361")>]
            member __.Create() : MSMediaKeyError = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_SERVICE)"); CompiledName("MS_MEDIA_KEYERR_SERVICE")>]
            member __.MS_MEDIA_KEYERR_SERVICE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_HARDWARECHANGE)"); CompiledName("MS_MEDIA_KEYERR_HARDWARECHANGE")>]
            member __.MS_MEDIA_KEYERR_HARDWARECHANGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_OUTPUT)"); CompiledName("MS_MEDIA_KEYERR_OUTPUT")>]
            member __.MS_MEDIA_KEYERR_OUTPUT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_DOMAIN)"); CompiledName("MS_MEDIA_KEYERR_DOMAIN")>]
            member __.MS_MEDIA_KEYERR_DOMAIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_UNKNOWN)"); CompiledName("MS_MEDIA_KEYERR_UNKNOWN")>]
            member __.MS_MEDIA_KEYERR_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_CLIENT)"); CompiledName("MS_MEDIA_KEYERR_CLIENT")>]
            member __.MS_MEDIA_KEYERR_CLIENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType397 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype324")>]
            member __.prototype with get() : Plugin = failwith "never" and set (v : Plugin) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create362")>]
            member __.Create() : Plugin = failwith "never"




    type AnonymousType398 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype325")>]
            member __.prototype with get() : MediaSource = failwith "never" and set (v : MediaSource) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create363")>]
            member __.Create() : MediaSource = failwith "never"
            [<FunScript.JSEmitInline("({0}.isTypeSupported({args}))"); CompiledName("isTypeSupported1")>]
            member __.isTypeSupported(_type : string) : bool = failwith "never"




    type AnonymousType399 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype326")>]
            member __.prototype with get() : SourceBufferList = failwith "never" and set (v : SourceBufferList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create364")>]
            member __.Create() : SourceBufferList = failwith "never"




    type AnonymousType4 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create365")>]
            member __.Create(?value : obj) : Boolean = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke20")>]
            member __.Invoke(?value : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype327")>]
            member __.prototype with get() : Boolean = failwith "never" and set (v : Boolean) : unit = failwith "never"




    type AnonymousType40 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype328")>]
            member __.prototype with get() : HTMLTableElement = failwith "never" and set (v : HTMLTableElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create366")>]
            member __.Create() : HTMLTableElement = failwith "never"




    type AnonymousType400 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype329")>]
            member __.prototype with get() : XMLDocument = failwith "never" and set (v : XMLDocument) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create367")>]
            member __.Create() : XMLDocument = failwith "never"




    type AnonymousType401 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype330")>]
            member __.prototype with get() : DeviceMotionEvent = failwith "never" and set (v : DeviceMotionEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create368")>]
            member __.Create() : DeviceMotionEvent = failwith "never"




    type AnonymousType402 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype331")>]
            member __.prototype with get() : MimeType = failwith "never" and set (v : MimeType) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create369")>]
            member __.Create() : MimeType = failwith "never"




    type AnonymousType403 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype332")>]
            member __.prototype with get() : PointerEvent = failwith "never" and set (v : PointerEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create370")>]
            member __.Create() : PointerEvent = failwith "never"




    type AnonymousType404 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype333")>]
            member __.prototype with get() : MutationObserver = failwith "never" and set (v : MutationObserver) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create371")>]
            member __.Create(callback : System.Func<array<MutationRecord>, MutationObserver, obj>) : MutationObserver = failwith "never"




    type AnonymousType405 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype334")>]
            member __.prototype with get() : MSWebViewAsyncOperation = failwith "never" and set (v : MSWebViewAsyncOperation) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create372")>]
            member __.Create() : MSWebViewAsyncOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.ERROR)"); CompiledName("ERROR2")>]
            member __.ERROR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION)"); CompiledName("TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION")>]
            member __.TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_INVOKE_SCRIPT)"); CompiledName("TYPE_INVOKE_SCRIPT")>]
            member __.TYPE_INVOKE_SCRIPT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPLETED)"); CompiledName("COMPLETED")>]
            member __.COMPLETED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM)"); CompiledName("TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM")>]
            member __.TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STARTED)"); CompiledName("STARTED")>]
            member __.STARTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType406 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype335")>]
            member __.prototype with get() : ScriptNotifyEvent = failwith "never" and set (v : ScriptNotifyEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create373")>]
            member __.Create() : ScriptNotifyEvent = failwith "never"




    type AnonymousType407 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype336")>]
            member __.prototype with get() : PerformanceNavigationTiming = failwith "never" and set (v : PerformanceNavigationTiming) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create374")>]
            member __.Create() : PerformanceNavigationTiming = failwith "never"




    type AnonymousType408 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype337")>]
            member __.prototype with get() : MSMediaKeyNeededEvent = failwith "never" and set (v : MSMediaKeyNeededEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create375")>]
            member __.Create() : MSMediaKeyNeededEvent = failwith "never"




    type AnonymousType409 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype338")>]
            member __.prototype with get() : LongRunningScriptDetectedEvent = failwith "never" and set (v : LongRunningScriptDetectedEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create376")>]
            member __.Create() : LongRunningScriptDetectedEvent = failwith "never"




    type AnonymousType41 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype339")>]
            member __.prototype with get() : TreeWalker = failwith "never" and set (v : TreeWalker) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create377")>]
            member __.Create() : TreeWalker = failwith "never"




    type AnonymousType410 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype340")>]
            member __.prototype with get() : MSAppView = failwith "never" and set (v : MSAppView) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create378")>]
            member __.Create() : MSAppView = failwith "never"




    type AnonymousType411 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype341")>]
            member __.prototype with get() : PerfWidgetExternal = failwith "never" and set (v : PerfWidgetExternal) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create379")>]
            member __.Create() : PerfWidgetExternal = failwith "never"




    type AnonymousType412 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype342")>]
            member __.prototype with get() : PageTransitionEvent = failwith "never" and set (v : PageTransitionEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create380")>]
            member __.Create() : PageTransitionEvent = failwith "never"




    type AnonymousType413 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype343")>]
            member __.prototype with get() : HTMLDocument = failwith "never" and set (v : HTMLDocument) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create381")>]
            member __.Create() : HTMLDocument = failwith "never"




    type AnonymousType414 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype344")>]
            member __.prototype with get() : KeyPair = failwith "never" and set (v : KeyPair) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create382")>]
            member __.Create() : KeyPair = failwith "never"




    type AnonymousType415 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype345")>]
            member __.prototype with get() : MSMediaKeySession = failwith "never" and set (v : MSMediaKeySession) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create383")>]
            member __.Create() : MSMediaKeySession = failwith "never"




    type AnonymousType416 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype346")>]
            member __.prototype with get() : UnviewableContentIdentifiedEvent = failwith "never" and set (v : UnviewableContentIdentifiedEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create384")>]
            member __.Create() : UnviewableContentIdentifiedEvent = failwith "never"




    type AnonymousType417 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype347")>]
            member __.prototype with get() : CryptoOperation = failwith "never" and set (v : CryptoOperation) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create385")>]
            member __.Create() : CryptoOperation = failwith "never"




    type AnonymousType418 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype348")>]
            member __.prototype with get() : WebGLTexture = failwith "never" and set (v : WebGLTexture) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create386")>]
            member __.Create() : WebGLTexture = failwith "never"




    type AnonymousType419 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype349")>]
            member __.prototype with get() : OES_texture_float = failwith "never" and set (v : OES_texture_float) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create387")>]
            member __.Create() : OES_texture_float = failwith "never"




    type AnonymousType42 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype350")>]
            member __.prototype with get() : SVGPathSegCurvetoQuadraticRel = failwith "never" and set (v : SVGPathSegCurvetoQuadraticRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create388")>]
            member __.Create() : SVGPathSegCurvetoQuadraticRel = failwith "never"




    type AnonymousType420 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype351")>]
            member __.prototype with get() : WebGLContextEvent = failwith "never" and set (v : WebGLContextEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create389")>]
            member __.Create() : WebGLContextEvent = failwith "never"




    type AnonymousType421 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype352")>]
            member __.prototype with get() : WebGLRenderbuffer = failwith "never" and set (v : WebGLRenderbuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create390")>]
            member __.Create() : WebGLRenderbuffer = failwith "never"




    type AnonymousType422 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype353")>]
            member __.prototype with get() : WebGLUniformLocation = failwith "never" and set (v : WebGLUniformLocation) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create391")>]
            member __.Create() : WebGLUniformLocation = failwith "never"




    type AnonymousType423 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype354")>]
            member __.prototype with get() : WebGLActiveInfo = failwith "never" and set (v : WebGLActiveInfo) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create392")>]
            member __.Create() : WebGLActiveInfo = failwith "never"




    type AnonymousType424 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype355")>]
            member __.prototype with get() : WEBGL_compressed_texture_s3tc = failwith "never" and set (v : WEBGL_compressed_texture_s3tc) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create393")>]
            member __.Create() : WEBGL_compressed_texture_s3tc = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_RGBA_S3TC_DXT1_EXT)"); CompiledName("COMPRESSED_RGBA_S3TC_DXT1_EXT")>]
            member __.COMPRESSED_RGBA_S3TC_DXT1_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_RGBA_S3TC_DXT5_EXT)"); CompiledName("COMPRESSED_RGBA_S3TC_DXT5_EXT")>]
            member __.COMPRESSED_RGBA_S3TC_DXT5_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_RGBA_S3TC_DXT3_EXT)"); CompiledName("COMPRESSED_RGBA_S3TC_DXT3_EXT")>]
            member __.COMPRESSED_RGBA_S3TC_DXT3_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_RGB_S3TC_DXT1_EXT)"); CompiledName("COMPRESSED_RGB_S3TC_DXT1_EXT")>]
            member __.COMPRESSED_RGB_S3TC_DXT1_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType425 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype356")>]
            member __.prototype with get() : WebGLRenderingContext = failwith "never" and set (v : WebGLRenderingContext) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create394")>]
            member __.Create() : WebGLRenderingContext = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_FUNC)"); CompiledName("DEPTH_FUNC")>]
            member __.DEPTH_FUNC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_COMPONENT16)"); CompiledName("DEPTH_COMPONENT16")>]
            member __.DEPTH_COMPONENT16 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.REPLACE)"); CompiledName("REPLACE")>]
            member __.REPLACE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.REPEAT)"); CompiledName("REPEAT")>]
            member __.REPEAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_ENABLED)"); CompiledName("VERTEX_ATTRIB_ARRAY_ENABLED")>]
            member __.VERTEX_ATTRIB_ARRAY_ENABLED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_INCOMPLETE_DIMENSIONS)"); CompiledName("FRAMEBUFFER_INCOMPLETE_DIMENSIONS")>]
            member __.FRAMEBUFFER_INCOMPLETE_DIMENSIONS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BUFFER_BIT)"); CompiledName("STENCIL_BUFFER_BIT")>]
            member __.STENCIL_BUFFER_BIT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERER)"); CompiledName("RENDERER")>]
            member __.RENDERER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_REF)"); CompiledName("STENCIL_BACK_REF")>]
            member __.STENCIL_BACK_REF with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE26)"); CompiledName("TEXTURE26")>]
            member __.TEXTURE26 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGB565)"); CompiledName("RGB565")>]
            member __.RGB565 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DITHER)"); CompiledName("DITHER")>]
            member __.DITHER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CONSTANT_COLOR)"); CompiledName("CONSTANT_COLOR")>]
            member __.CONSTANT_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.GENERATE_MIPMAP_HINT)"); CompiledName("GENERATE_MIPMAP_HINT")>]
            member __.GENERATE_MIPMAP_HINT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POINTS)"); CompiledName("POINTS")>]
            member __.POINTS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DECR)"); CompiledName("DECR")>]
            member __.DECR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INT_VEC3)"); CompiledName("INT_VEC3")>]
            member __.INT_VEC3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE28)"); CompiledName("TEXTURE28")>]
            member __.TEXTURE28 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_CONSTANT_ALPHA)"); CompiledName("ONE_MINUS_CONSTANT_ALPHA")>]
            member __.ONE_MINUS_CONSTANT_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BACK)"); CompiledName("BACK")>]
            member __.BACK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_STENCIL_SIZE)"); CompiledName("RENDERBUFFER_STENCIL_SIZE")>]
            member __.RENDERBUFFER_STENCIL_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNPACK_FLIP_Y_WEBGL)"); CompiledName("UNPACK_FLIP_Y_WEBGL")>]
            member __.UNPACK_FLIP_Y_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND)"); CompiledName("BLEND")>]
            member __.BLEND with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE9)"); CompiledName("TEXTURE9")>]
            member __.TEXTURE9 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ARRAY_BUFFER_BINDING)"); CompiledName("ARRAY_BUFFER_BINDING")>]
            member __.ARRAY_BUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VIEWPORT_DIMS)"); CompiledName("MAX_VIEWPORT_DIMS")>]
            member __.MAX_VIEWPORT_DIMS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_FRAMEBUFFER_OPERATION)"); CompiledName("INVALID_FRAMEBUFFER_OPERATION")>]
            member __.INVALID_FRAMEBUFFER_OPERATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE)"); CompiledName("TEXTURE")>]
            member __.TEXTURE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE0)"); CompiledName("TEXTURE0")>]
            member __.TEXTURE0 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE31)"); CompiledName("TEXTURE31")>]
            member __.TEXTURE31 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE24)"); CompiledName("TEXTURE24")>]
            member __.TEXTURE24 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIGH_INT)"); CompiledName("HIGH_INT")>]
            member __.HIGH_INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_BINDING)"); CompiledName("RENDERBUFFER_BINDING")>]
            member __.RENDERBUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_COLOR)"); CompiledName("BLEND_COLOR")>]
            member __.BLEND_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FASTEST)"); CompiledName("FASTEST")>]
            member __.FASTEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_WRITEMASK)"); CompiledName("STENCIL_WRITEMASK")>]
            member __.STENCIL_WRITEMASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALIASED_POINT_SIZE_RANGE)"); CompiledName("ALIASED_POINT_SIZE_RANGE")>]
            member __.ALIASED_POINT_SIZE_RANGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE12)"); CompiledName("TEXTURE12")>]
            member __.TEXTURE12 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DST_ALPHA)"); CompiledName("DST_ALPHA")>]
            member __.DST_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_EQUATION_RGB)"); CompiledName("BLEND_EQUATION_RGB")>]
            member __.BLEND_EQUATION_RGB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_COMPLETE)"); CompiledName("FRAMEBUFFER_COMPLETE")>]
            member __.FRAMEBUFFER_COMPLETE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEAREST_MIPMAP_NEAREST)"); CompiledName("NEAREST_MIPMAP_NEAREST")>]
            member __.NEAREST_MIPMAP_NEAREST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_SIZE)"); CompiledName("VERTEX_ATTRIB_ARRAY_SIZE")>]
            member __.VERTEX_ATTRIB_ARRAY_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE3)"); CompiledName("TEXTURE3")>]
            member __.TEXTURE3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_WRITEMASK)"); CompiledName("DEPTH_WRITEMASK")>]
            member __.DEPTH_WRITEMASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CONTEXT_LOST_WEBGL)"); CompiledName("CONTEXT_LOST_WEBGL")>]
            member __.CONTEXT_LOST_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_VALUE)"); CompiledName("INVALID_VALUE")>]
            member __.INVALID_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_MAG_FILTER)"); CompiledName("TEXTURE_MAG_FILTER")>]
            member __.TEXTURE_MAG_FILTER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_CONSTANT_COLOR)"); CompiledName("ONE_MINUS_CONSTANT_COLOR")>]
            member __.ONE_MINUS_CONSTANT_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_SRC_ALPHA)"); CompiledName("ONE_MINUS_SRC_ALPHA")>]
            member __.ONE_MINUS_SRC_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_POSITIVE_Z)"); CompiledName("TEXTURE_CUBE_MAP_POSITIVE_Z")>]
            member __.TEXTURE_CUBE_MAP_POSITIVE_Z with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NOTEQUAL)"); CompiledName("NOTEQUAL")>]
            member __.NOTEQUAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALPHA)"); CompiledName("ALPHA")>]
            member __.ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_STENCIL)"); CompiledName("DEPTH_STENCIL")>]
            member __.DEPTH_STENCIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VERTEX_UNIFORM_VECTORS)"); CompiledName("MAX_VERTEX_UNIFORM_VECTORS")>]
            member __.MAX_VERTEX_UNIFORM_VECTORS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_COMPONENT)"); CompiledName("DEPTH_COMPONENT")>]
            member __.DEPTH_COMPONENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_RED_SIZE)"); CompiledName("RENDERBUFFER_RED_SIZE")>]
            member __.RENDERBUFFER_RED_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE20)"); CompiledName("TEXTURE20")>]
            member __.TEXTURE20 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RED_BITS)"); CompiledName("RED_BITS")>]
            member __.RED_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_BLUE_SIZE)"); CompiledName("RENDERBUFFER_BLUE_SIZE")>]
            member __.RENDERBUFFER_BLUE_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SCISSOR_BOX)"); CompiledName("SCISSOR_BOX")>]
            member __.SCISSOR_BOX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VENDOR)"); CompiledName("VENDOR")>]
            member __.VENDOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRONT_AND_BACK)"); CompiledName("FRONT_AND_BACK")>]
            member __.FRONT_AND_BACK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CONSTANT_ALPHA)"); CompiledName("CONSTANT_ALPHA")>]
            member __.CONSTANT_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)"); CompiledName("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING")>]
            member __.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEAREST)"); CompiledName("NEAREST")>]
            member __.NEAREST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CULL_FACE)"); CompiledName("CULL_FACE")>]
            member __.CULL_FACE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALIASED_LINE_WIDTH_RANGE)"); CompiledName("ALIASED_LINE_WIDTH_RANGE")>]
            member __.ALIASED_LINE_WIDTH_RANGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE19)"); CompiledName("TEXTURE19")>]
            member __.TEXTURE19 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRONT)"); CompiledName("FRONT")>]
            member __.FRONT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_CLEAR_VALUE)"); CompiledName("DEPTH_CLEAR_VALUE")>]
            member __.DEPTH_CLEAR_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.GREEN_BITS)"); CompiledName("GREEN_BITS")>]
            member __.GREEN_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE29)"); CompiledName("TEXTURE29")>]
            member __.TEXTURE29 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE23)"); CompiledName("TEXTURE23")>]
            member __.TEXTURE23 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_RENDERBUFFER_SIZE)"); CompiledName("MAX_RENDERBUFFER_SIZE")>]
            member __.MAX_RENDERBUFFER_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_ATTACHMENT)"); CompiledName("STENCIL_ATTACHMENT")>]
            member __.STENCIL_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE27)"); CompiledName("TEXTURE27")>]
            member __.TEXTURE27 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BOOL_VEC2)"); CompiledName("BOOL_VEC2")>]
            member __.BOOL_VEC2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.OUT_OF_MEMORY)"); CompiledName("OUT_OF_MEMORY")>]
            member __.OUT_OF_MEMORY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MIRRORED_REPEAT)"); CompiledName("MIRRORED_REPEAT")>]
            member __.MIRRORED_REPEAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POLYGON_OFFSET_UNITS)"); CompiledName("POLYGON_OFFSET_UNITS")>]
            member __.POLYGON_OFFSET_UNITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_MIN_FILTER)"); CompiledName("TEXTURE_MIN_FILTER")>]
            member __.TEXTURE_MIN_FILTER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_PASS_DEPTH_PASS)"); CompiledName("STENCIL_BACK_PASS_DEPTH_PASS")>]
            member __.STENCIL_BACK_PASS_DEPTH_PASS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINE_LOOP)"); CompiledName("LINE_LOOP")>]
            member __.LINE_LOOP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_MAT3)"); CompiledName("FLOAT_MAT3")>]
            member __.FLOAT_MAT3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE14)"); CompiledName("TEXTURE14")>]
            member __.TEXTURE14 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINEAR)"); CompiledName("LINEAR")>]
            member __.LINEAR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGB5_A1)"); CompiledName("RGB5_A1")>]
            member __.RGB5_A1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_SRC_COLOR)"); CompiledName("ONE_MINUS_SRC_COLOR")>]
            member __.ONE_MINUS_SRC_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_COVERAGE_INVERT)"); CompiledName("SAMPLE_COVERAGE_INVERT")>]
            member __.SAMPLE_COVERAGE_INVERT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DONT_CARE)"); CompiledName("DONT_CARE")>]
            member __.DONT_CARE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_BINDING)"); CompiledName("FRAMEBUFFER_BINDING")>]
            member __.FRAMEBUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_ALPHA_SIZE)"); CompiledName("RENDERBUFFER_ALPHA_SIZE")>]
            member __.RENDERBUFFER_ALPHA_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_REF)"); CompiledName("STENCIL_REF")>]
            member __.STENCIL_REF with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ZERO)"); CompiledName("ZERO")>]
            member __.ZERO with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DECR_WRAP)"); CompiledName("DECR_WRAP")>]
            member __.DECR_WRAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_COVERAGE)"); CompiledName("SAMPLE_COVERAGE")>]
            member __.SAMPLE_COVERAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_FUNC)"); CompiledName("STENCIL_BACK_FUNC")>]
            member __.STENCIL_BACK_FUNC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE30)"); CompiledName("TEXTURE30")>]
            member __.TEXTURE30 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VIEWPORT)"); CompiledName("VIEWPORT")>]
            member __.VIEWPORT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BITS)"); CompiledName("STENCIL_BITS")>]
            member __.STENCIL_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT)"); CompiledName("FLOAT")>]
            member __.FLOAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COLOR_WRITEMASK)"); CompiledName("COLOR_WRITEMASK")>]
            member __.COLOR_WRITEMASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_COVERAGE_VALUE)"); CompiledName("SAMPLE_COVERAGE_VALUE")>]
            member __.SAMPLE_COVERAGE_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_NEGATIVE_Y)"); CompiledName("TEXTURE_CUBE_MAP_NEGATIVE_Y")>]
            member __.TEXTURE_CUBE_MAP_NEGATIVE_Y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_FAIL)"); CompiledName("STENCIL_BACK_FAIL")>]
            member __.STENCIL_BACK_FAIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_MAT4)"); CompiledName("FLOAT_MAT4")>]
            member __.FLOAT_MAT4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_SHORT_4_4_4_4)"); CompiledName("UNSIGNED_SHORT_4_4_4_4")>]
            member __.UNSIGNED_SHORT_4_4_4_4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE6)"); CompiledName("TEXTURE6")>]
            member __.TEXTURE6 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_WIDTH)"); CompiledName("RENDERBUFFER_WIDTH")>]
            member __.RENDERBUFFER_WIDTH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGBA4)"); CompiledName("RGBA4")>]
            member __.RGBA4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALWAYS)"); CompiledName("ALWAYS")>]
            member __.ALWAYS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_EQUATION_ALPHA)"); CompiledName("BLEND_EQUATION_ALPHA")>]
            member __.BLEND_EQUATION_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COLOR_BUFFER_BIT)"); CompiledName("COLOR_BUFFER_BIT")>]
            member __.COLOR_BUFFER_BIT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP)"); CompiledName("TEXTURE_CUBE_MAP")>]
            member __.TEXTURE_CUBE_MAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_BUFFER_BIT)"); CompiledName("DEPTH_BUFFER_BIT")>]
            member __.DEPTH_BUFFER_BIT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_CLEAR_VALUE)"); CompiledName("STENCIL_CLEAR_VALUE")>]
            member __.STENCIL_CLEAR_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_EQUATION)"); CompiledName("BLEND_EQUATION")>]
            member __.BLEND_EQUATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_GREEN_SIZE)"); CompiledName("RENDERBUFFER_GREEN_SIZE")>]
            member __.RENDERBUFFER_GREEN_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEAREST_MIPMAP_LINEAR)"); CompiledName("NEAREST_MIPMAP_LINEAR")>]
            member __.NEAREST_MIPMAP_LINEAR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_TYPE)"); CompiledName("VERTEX_ATTRIB_ARRAY_TYPE")>]
            member __.VERTEX_ATTRIB_ARRAY_TYPE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INCR_WRAP)"); CompiledName("INCR_WRAP")>]
            member __.INCR_WRAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_DST_COLOR)"); CompiledName("ONE_MINUS_DST_COLOR")>]
            member __.ONE_MINUS_DST_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIGH_FLOAT)"); CompiledName("HIGH_FLOAT")>]
            member __.HIGH_FLOAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTE)"); CompiledName("BYTE")>]
            member __.BYTE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRONT_FACE)"); CompiledName("FRONT_FACE")>]
            member __.FRONT_FACE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_ALPHA_TO_COVERAGE)"); CompiledName("SAMPLE_ALPHA_TO_COVERAGE")>]
            member __.SAMPLE_ALPHA_TO_COVERAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CCW)"); CompiledName("CCW")>]
            member __.CCW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE13)"); CompiledName("TEXTURE13")>]
            member __.TEXTURE13 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VERTEX_ATTRIBS)"); CompiledName("MAX_VERTEX_ATTRIBS")>]
            member __.MAX_VERTEX_ATTRIBS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VERTEX_TEXTURE_IMAGE_UNITS)"); CompiledName("MAX_VERTEX_TEXTURE_IMAGE_UNITS")>]
            member __.MAX_VERTEX_TEXTURE_IMAGE_UNITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_WRAP_T)"); CompiledName("TEXTURE_WRAP_T")>]
            member __.TEXTURE_WRAP_T with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNPACK_PREMULTIPLY_ALPHA_WEBGL)"); CompiledName("UNPACK_PREMULTIPLY_ALPHA_WEBGL")>]
            member __.UNPACK_PREMULTIPLY_ALPHA_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_VEC2)"); CompiledName("FLOAT_VEC2")>]
            member __.FLOAT_VEC2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LUMINANCE)"); CompiledName("LUMINANCE")>]
            member __.LUMINANCE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.GREATER)"); CompiledName("GREATER")>]
            member __.GREATER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INT_VEC2)"); CompiledName("INT_VEC2")>]
            member __.INT_VEC2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VALIDATE_STATUS)"); CompiledName("VALIDATE_STATUS")>]
            member __.VALIDATE_STATUS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER)"); CompiledName("FRAMEBUFFER")>]
            member __.FRAMEBUFFER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_UNSUPPORTED)"); CompiledName("FRAMEBUFFER_UNSUPPORTED")>]
            member __.FRAMEBUFFER_UNSUPPORTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE5)"); CompiledName("TEXTURE5")>]
            member __.TEXTURE5 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FUNC_SUBTRACT)"); CompiledName("FUNC_SUBTRACT")>]
            member __.FUNC_SUBTRACT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_DST_ALPHA)"); CompiledName("BLEND_DST_ALPHA")>]
            member __.BLEND_DST_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLER_CUBE)"); CompiledName("SAMPLER_CUBE")>]
            member __.SAMPLER_CUBE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_DST_ALPHA)"); CompiledName("ONE_MINUS_DST_ALPHA")>]
            member __.ONE_MINUS_DST_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LESS)"); CompiledName("LESS")>]
            member __.LESS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_POSITIVE_X)"); CompiledName("TEXTURE_CUBE_MAP_POSITIVE_X")>]
            member __.TEXTURE_CUBE_MAP_POSITIVE_X with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLUE_BITS)"); CompiledName("BLUE_BITS")>]
            member __.BLUE_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_TEST)"); CompiledName("DEPTH_TEST")>]
            member __.DEPTH_TEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_STRIDE)"); CompiledName("VERTEX_ATTRIB_ARRAY_STRIDE")>]
            member __.VERTEX_ATTRIB_ARRAY_STRIDE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DELETE_STATUS)"); CompiledName("DELETE_STATUS")>]
            member __.DELETE_STATUS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE18)"); CompiledName("TEXTURE18")>]
            member __.TEXTURE18 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POLYGON_OFFSET_FACTOR)"); CompiledName("POLYGON_OFFSET_FACTOR")>]
            member __.POLYGON_OFFSET_FACTOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_INT)"); CompiledName("UNSIGNED_INT")>]
            member __.UNSIGNED_INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_2D)"); CompiledName("TEXTURE_2D")>]
            member __.TEXTURE_2D with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DST_COLOR)"); CompiledName("DST_COLOR")>]
            member __.DST_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_MAT2)"); CompiledName("FLOAT_MAT2")>]
            member __.FLOAT_MAT2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_TEXTURE_FORMATS)"); CompiledName("COMPRESSED_TEXTURE_FORMATS")>]
            member __.COMPRESSED_TEXTURE_FORMATS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_FRAGMENT_UNIFORM_VECTORS)"); CompiledName("MAX_FRAGMENT_UNIFORM_VECTORS")>]
            member __.MAX_FRAGMENT_UNIFORM_VECTORS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_STENCIL_ATTACHMENT)"); CompiledName("DEPTH_STENCIL_ATTACHMENT")>]
            member __.DEPTH_STENCIL_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LUMINANCE_ALPHA)"); CompiledName("LUMINANCE_ALPHA")>]
            member __.LUMINANCE_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CW)"); CompiledName("CW")>]
            member __.CW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_NORMALIZED)"); CompiledName("VERTEX_ATTRIB_ARRAY_NORMALIZED")>]
            member __.VERTEX_ATTRIB_ARRAY_NORMALIZED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_NEGATIVE_Z)"); CompiledName("TEXTURE_CUBE_MAP_NEGATIVE_Z")>]
            member __.TEXTURE_CUBE_MAP_NEGATIVE_Z with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINEAR_MIPMAP_LINEAR)"); CompiledName("LINEAR_MIPMAP_LINEAR")>]
            member __.LINEAR_MIPMAP_LINEAR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BUFFER_SIZE)"); CompiledName("BUFFER_SIZE")>]
            member __.BUFFER_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_BUFFERS)"); CompiledName("SAMPLE_BUFFERS")>]
            member __.SAMPLE_BUFFERS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE15)"); CompiledName("TEXTURE15")>]
            member __.TEXTURE15 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ACTIVE_TEXTURE)"); CompiledName("ACTIVE_TEXTURE")>]
            member __.ACTIVE_TEXTURE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_SHADER)"); CompiledName("VERTEX_SHADER")>]
            member __.VERTEX_SHADER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE22)"); CompiledName("TEXTURE22")>]
            member __.TEXTURE22 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_POINTER)"); CompiledName("VERTEX_ATTRIB_ARRAY_POINTER")>]
            member __.VERTEX_ATTRIB_ARRAY_POINTER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INCR)"); CompiledName("INCR")>]
            member __.INCR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPILE_STATUS)"); CompiledName("COMPILE_STATUS")>]
            member __.COMPILE_STATUS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_COMBINED_TEXTURE_IMAGE_UNITS)"); CompiledName("MAX_COMBINED_TEXTURE_IMAGE_UNITS")>]
            member __.MAX_COMBINED_TEXTURE_IMAGE_UNITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE7)"); CompiledName("TEXTURE7")>]
            member __.TEXTURE7 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_SHORT_5_5_5_1)"); CompiledName("UNSIGNED_SHORT_5_5_5_1")>]
            member __.UNSIGNED_SHORT_5_5_5_1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_BITS)"); CompiledName("DEPTH_BITS")>]
            member __.DEPTH_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGBA)"); CompiledName("RGBA")>]
            member __.RGBA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TRIANGLE_STRIP)"); CompiledName("TRIANGLE_STRIP")>]
            member __.TRIANGLE_STRIP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COLOR_CLEAR_VALUE)"); CompiledName("COLOR_CLEAR_VALUE")>]
            member __.COLOR_CLEAR_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BROWSER_DEFAULT_WEBGL)"); CompiledName("BROWSER_DEFAULT_WEBGL")>]
            member __.BROWSER_DEFAULT_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_ENUM)"); CompiledName("INVALID_ENUM")>]
            member __.INVALID_ENUM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SCISSOR_TEST)"); CompiledName("SCISSOR_TEST")>]
            member __.SCISSOR_TEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINE_STRIP)"); CompiledName("LINE_STRIP")>]
            member __.LINE_STRIP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_INCOMPLETE_ATTACHMENT)"); CompiledName("FRAMEBUFFER_INCOMPLETE_ATTACHMENT")>]
            member __.FRAMEBUFFER_INCOMPLETE_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_FUNC)"); CompiledName("STENCIL_FUNC")>]
            member __.STENCIL_FUNC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)"); CompiledName("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME")>]
            member __.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_HEIGHT)"); CompiledName("RENDERBUFFER_HEIGHT")>]
            member __.RENDERBUFFER_HEIGHT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE8)"); CompiledName("TEXTURE8")>]
            member __.TEXTURE8 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TRIANGLES)"); CompiledName("TRIANGLES")>]
            member __.TRIANGLES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)"); CompiledName("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE")>]
            member __.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_VALUE_MASK)"); CompiledName("STENCIL_BACK_VALUE_MASK")>]
            member __.STENCIL_BACK_VALUE_MASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE25)"); CompiledName("TEXTURE25")>]
            member __.TEXTURE25 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER)"); CompiledName("RENDERBUFFER")>]
            member __.RENDERBUFFER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LEQUAL)"); CompiledName("LEQUAL")>]
            member __.LEQUAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE1)"); CompiledName("TEXTURE1")>]
            member __.TEXTURE1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_INDEX8)"); CompiledName("STENCIL_INDEX8")>]
            member __.STENCIL_INDEX8 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FUNC_ADD)"); CompiledName("FUNC_ADD")>]
            member __.FUNC_ADD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_FAIL)"); CompiledName("STENCIL_FAIL")>]
            member __.STENCIL_FAIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_SRC_ALPHA)"); CompiledName("BLEND_SRC_ALPHA")>]
            member __.BLEND_SRC_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BOOL)"); CompiledName("BOOL")>]
            member __.BOOL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALPHA_BITS)"); CompiledName("ALPHA_BITS")>]
            member __.ALPHA_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOW_INT)"); CompiledName("LOW_INT")>]
            member __.LOW_INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE10)"); CompiledName("TEXTURE10")>]
            member __.TEXTURE10 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SRC_COLOR)"); CompiledName("SRC_COLOR")>]
            member __.SRC_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VARYING_VECTORS)"); CompiledName("MAX_VARYING_VECTORS")>]
            member __.MAX_VARYING_VECTORS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_DST_RGB)"); CompiledName("BLEND_DST_RGB")>]
            member __.BLEND_DST_RGB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_BINDING_CUBE_MAP)"); CompiledName("TEXTURE_BINDING_CUBE_MAP")>]
            member __.TEXTURE_BINDING_CUBE_MAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_INDEX)"); CompiledName("STENCIL_INDEX")>]
            member __.STENCIL_INDEX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_BINDING_2D)"); CompiledName("TEXTURE_BINDING_2D")>]
            member __.TEXTURE_BINDING_2D with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIUM_INT)"); CompiledName("MEDIUM_INT")>]
            member __.MEDIUM_INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHADER_TYPE)"); CompiledName("SHADER_TYPE")>]
            member __.SHADER_TYPE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POLYGON_OFFSET_FILL)"); CompiledName("POLYGON_OFFSET_FILL")>]
            member __.POLYGON_OFFSET_FILL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DYNAMIC_DRAW)"); CompiledName("DYNAMIC_DRAW")>]
            member __.DYNAMIC_DRAW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE4)"); CompiledName("TEXTURE4")>]
            member __.TEXTURE4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_PASS_DEPTH_FAIL)"); CompiledName("STENCIL_BACK_PASS_DEPTH_FAIL")>]
            member __.STENCIL_BACK_PASS_DEPTH_FAIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STREAM_DRAW)"); CompiledName("STREAM_DRAW")>]
            member __.STREAM_DRAW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_CUBE_MAP_TEXTURE_SIZE)"); CompiledName("MAX_CUBE_MAP_TEXTURE_SIZE")>]
            member __.MAX_CUBE_MAP_TEXTURE_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE17)"); CompiledName("TEXTURE17")>]
            member __.TEXTURE17 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TRIANGLE_FAN)"); CompiledName("TRIANGLE_FAN")>]
            member __.TRIANGLE_FAN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNPACK_ALIGNMENT)"); CompiledName("UNPACK_ALIGNMENT")>]
            member __.UNPACK_ALIGNMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CURRENT_PROGRAM)"); CompiledName("CURRENT_PROGRAM")>]
            member __.CURRENT_PROGRAM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINES)"); CompiledName("LINES")>]
            member __.LINES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_OPERATION)"); CompiledName("INVALID_OPERATION")>]
            member __.INVALID_OPERATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)"); CompiledName("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT")>]
            member __.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINEAR_MIPMAP_NEAREST)"); CompiledName("LINEAR_MIPMAP_NEAREST")>]
            member __.LINEAR_MIPMAP_NEAREST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CLAMP_TO_EDGE)"); CompiledName("CLAMP_TO_EDGE")>]
            member __.CLAMP_TO_EDGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_DEPTH_SIZE)"); CompiledName("RENDERBUFFER_DEPTH_SIZE")>]
            member __.RENDERBUFFER_DEPTH_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_WRAP_S)"); CompiledName("TEXTURE_WRAP_S")>]
            member __.TEXTURE_WRAP_S with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ELEMENT_ARRAY_BUFFER)"); CompiledName("ELEMENT_ARRAY_BUFFER")>]
            member __.ELEMENT_ARRAY_BUFFER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_SHORT_5_6_5)"); CompiledName("UNSIGNED_SHORT_5_6_5")>]
            member __.UNSIGNED_SHORT_5_6_5 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ACTIVE_UNIFORMS)"); CompiledName("ACTIVE_UNIFORMS")>]
            member __.ACTIVE_UNIFORMS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_VEC3)"); CompiledName("FLOAT_VEC3")>]
            member __.FLOAT_VEC3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NO_ERROR)"); CompiledName("NO_ERROR")>]
            member __.NO_ERROR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ATTACHED_SHADERS)"); CompiledName("ATTACHED_SHADERS")>]
            member __.ATTACHED_SHADERS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_ATTACHMENT)"); CompiledName("DEPTH_ATTACHMENT")>]
            member __.DEPTH_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE11)"); CompiledName("TEXTURE11")>]
            member __.TEXTURE11 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_TEST)"); CompiledName("STENCIL_TEST")>]
            member __.STENCIL_TEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE)"); CompiledName("ONE")>]
            member __.ONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE)"); CompiledName("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE")>]
            member __.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STATIC_DRAW)"); CompiledName("STATIC_DRAW")>]
            member __.STATIC_DRAW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.GEQUAL)"); CompiledName("GEQUAL")>]
            member __.GEQUAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BOOL_VEC4)"); CompiledName("BOOL_VEC4")>]
            member __.BOOL_VEC4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COLOR_ATTACHMENT0)"); CompiledName("COLOR_ATTACHMENT0")>]
            member __.COLOR_ATTACHMENT0 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PACK_ALIGNMENT)"); CompiledName("PACK_ALIGNMENT")>]
            member __.PACK_ALIGNMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_TEXTURE_SIZE)"); CompiledName("MAX_TEXTURE_SIZE")>]
            member __.MAX_TEXTURE_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_PASS_DEPTH_FAIL)"); CompiledName("STENCIL_PASS_DEPTH_FAIL")>]
            member __.STENCIL_PASS_DEPTH_FAIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CULL_FACE_MODE)"); CompiledName("CULL_FACE_MODE")>]
            member __.CULL_FACE_MODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE16)"); CompiledName("TEXTURE16")>]
            member __.TEXTURE16 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_WRITEMASK)"); CompiledName("STENCIL_BACK_WRITEMASK")>]
            member __.STENCIL_BACK_WRITEMASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SRC_ALPHA)"); CompiledName("SRC_ALPHA")>]
            member __.SRC_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_SHORT)"); CompiledName("UNSIGNED_SHORT")>]
            member __.UNSIGNED_SHORT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE21)"); CompiledName("TEXTURE21")>]
            member __.TEXTURE21 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FUNC_REVERSE_SUBTRACT)"); CompiledName("FUNC_REVERSE_SUBTRACT")>]
            member __.FUNC_REVERSE_SUBTRACT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHADING_LANGUAGE_VERSION)"); CompiledName("SHADING_LANGUAGE_VERSION")>]
            member __.SHADING_LANGUAGE_VERSION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.EQUAL)"); CompiledName("EQUAL")>]
            member __.EQUAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)"); CompiledName("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL")>]
            member __.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BOOL_VEC3)"); CompiledName("BOOL_VEC3")>]
            member __.BOOL_VEC3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLER_2D)"); CompiledName("SAMPLER_2D")>]
            member __.SAMPLER_2D with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_NEGATIVE_X)"); CompiledName("TEXTURE_CUBE_MAP_NEGATIVE_X")>]
            member __.TEXTURE_CUBE_MAP_NEGATIVE_X with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_TEXTURE_IMAGE_UNITS)"); CompiledName("MAX_TEXTURE_IMAGE_UNITS")>]
            member __.MAX_TEXTURE_IMAGE_UNITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_POSITIVE_Y)"); CompiledName("TEXTURE_CUBE_MAP_POSITIVE_Y")>]
            member __.TEXTURE_CUBE_MAP_POSITIVE_Y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_INTERNAL_FORMAT)"); CompiledName("RENDERBUFFER_INTERNAL_FORMAT")>]
            member __.RENDERBUFFER_INTERNAL_FORMAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_VALUE_MASK)"); CompiledName("STENCIL_VALUE_MASK")>]
            member __.STENCIL_VALUE_MASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ELEMENT_ARRAY_BUFFER_BINDING)"); CompiledName("ELEMENT_ARRAY_BUFFER_BINDING")>]
            member __.ELEMENT_ARRAY_BUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ARRAY_BUFFER)"); CompiledName("ARRAY_BUFFER")>]
            member __.ARRAY_BUFFER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_RANGE)"); CompiledName("DEPTH_RANGE")>]
            member __.DEPTH_RANGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NICEST)"); CompiledName("NICEST")>]
            member __.NICEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ACTIVE_ATTRIBUTES)"); CompiledName("ACTIVE_ATTRIBUTES")>]
            member __.ACTIVE_ATTRIBUTES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEVER)"); CompiledName("NEVER")>]
            member __.NEVER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_VEC4)"); CompiledName("FLOAT_VEC4")>]
            member __.FLOAT_VEC4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CURRENT_VERTEX_ATTRIB)"); CompiledName("CURRENT_VERTEX_ATTRIB")>]
            member __.CURRENT_VERTEX_ATTRIB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_PASS_DEPTH_PASS)"); CompiledName("STENCIL_PASS_DEPTH_PASS")>]
            member __.STENCIL_PASS_DEPTH_PASS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVERT)"); CompiledName("INVERT")>]
            member __.INVERT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINK_STATUS)"); CompiledName("LINK_STATUS")>]
            member __.LINK_STATUS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGB)"); CompiledName("RGB")>]
            member __.RGB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INT_VEC4)"); CompiledName("INT_VEC4")>]
            member __.INT_VEC4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE2)"); CompiledName("TEXTURE2")>]
            member __.TEXTURE2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNPACK_COLORSPACE_CONVERSION_WEBGL)"); CompiledName("UNPACK_COLORSPACE_CONVERSION_WEBGL")>]
            member __.UNPACK_COLORSPACE_CONVERSION_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIUM_FLOAT)"); CompiledName("MEDIUM_FLOAT")>]
            member __.MEDIUM_FLOAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SRC_ALPHA_SATURATE)"); CompiledName("SRC_ALPHA_SATURATE")>]
            member __.SRC_ALPHA_SATURATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BUFFER_USAGE)"); CompiledName("BUFFER_USAGE")>]
            member __.BUFFER_USAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHORT)"); CompiledName("SHORT")>]
            member __.SHORT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NONE)"); CompiledName("NONE2")>]
            member __.NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_BYTE)"); CompiledName("UNSIGNED_BYTE")>]
            member __.UNSIGNED_BYTE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INT)"); CompiledName("INT")>]
            member __.INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SUBPIXEL_BITS)"); CompiledName("SUBPIXEL_BITS")>]
            member __.SUBPIXEL_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.KEEP)"); CompiledName("KEEP")>]
            member __.KEEP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLES)"); CompiledName("SAMPLES")>]
            member __.SAMPLES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAGMENT_SHADER)"); CompiledName("FRAGMENT_SHADER")>]
            member __.FRAGMENT_SHADER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINE_WIDTH)"); CompiledName("LINE_WIDTH")>]
            member __.LINE_WIDTH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_SRC_RGB)"); CompiledName("BLEND_SRC_RGB")>]
            member __.BLEND_SRC_RGB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOW_FLOAT)"); CompiledName("LOW_FLOAT")>]
            member __.LOW_FLOAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERSION)"); CompiledName("VERSION")>]
            member __.VERSION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType426 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype357")>]
            member __.prototype with get() : WebGLProgram = failwith "never" and set (v : WebGLProgram) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create395")>]
            member __.Create() : WebGLProgram = failwith "never"




    type AnonymousType427 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype358")>]
            member __.prototype with get() : OES_standard_derivatives = failwith "never" and set (v : OES_standard_derivatives) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create396")>]
            member __.Create() : OES_standard_derivatives = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAGMENT_SHADER_DERIVATIVE_HINT_OES)"); CompiledName("FRAGMENT_SHADER_DERIVATIVE_HINT_OES")>]
            member __.FRAGMENT_SHADER_DERIVATIVE_HINT_OES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType428 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype359")>]
            member __.prototype with get() : WebGLFramebuffer = failwith "never" and set (v : WebGLFramebuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create397")>]
            member __.Create() : WebGLFramebuffer = failwith "never"




    type AnonymousType429 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype360")>]
            member __.prototype with get() : WebGLShader = failwith "never" and set (v : WebGLShader) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create398")>]
            member __.Create() : WebGLShader = failwith "never"




    type AnonymousType43 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype361")>]
            member __.prototype with get() : Performance = failwith "never" and set (v : Performance) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create399")>]
            member __.Create() : Performance = failwith "never"




    type AnonymousType430 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype362")>]
            member __.prototype with get() : OES_texture_float_linear = failwith "never" and set (v : OES_texture_float_linear) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create400")>]
            member __.Create() : OES_texture_float_linear = failwith "never"




    type AnonymousType431 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype363")>]
            member __.prototype with get() : WebGLObject = failwith "never" and set (v : WebGLObject) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create401")>]
            member __.Create() : WebGLObject = failwith "never"




    type AnonymousType432 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype364")>]
            member __.prototype with get() : WebGLBuffer = failwith "never" and set (v : WebGLBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create402")>]
            member __.Create() : WebGLBuffer = failwith "never"




    type AnonymousType433 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype365")>]
            member __.prototype with get() : WebGLShaderPrecisionFormat = failwith "never" and set (v : WebGLShaderPrecisionFormat) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create403")>]
            member __.Create() : WebGLShaderPrecisionFormat = failwith "never"




    type AnonymousType434 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype366")>]
            member __.prototype with get() : EXT_texture_filter_anisotropic = failwith "never" and set (v : EXT_texture_filter_anisotropic) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create404")>]
            member __.Create() : EXT_texture_filter_anisotropic = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_MAX_ANISOTROPY_EXT)"); CompiledName("TEXTURE_MAX_ANISOTROPY_EXT")>]
            member __.TEXTURE_MAX_ANISOTROPY_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_TEXTURE_MAX_ANISOTROPY_EXT)"); CompiledName("MAX_TEXTURE_MAX_ANISOTROPY_EXT")>]
            member __.MAX_TEXTURE_MAX_ANISOTROPY_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType435 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create405")>]
            member __.Create(?text : string, ?value : string, ?defaultSelected : bool, ?selected : bool) : HTMLOptionElement = failwith "never"




    type AnonymousType436 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create406")>]
            member __.Create(?width : float, ?height : float) : HTMLImageElement = failwith "never"




    type AnonymousType437 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create407")>]
            member __.Create(?src : string) : HTMLAudioElement = failwith "never"




    type AnonymousType438 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create408")>]
            member __.Create(s : string) : obj = failwith "never"




    type AnonymousType439 with 

            [<FunScript.JSEmitInline("({0}.Echo({args}))"); CompiledName("Echo")>]
            member __.Echo(s : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.StdErr)"); CompiledName("StdErr")>]
            member __.StdErr with get() : ITextWriter = failwith "never" and set (v : ITextWriter) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.StdOut)"); CompiledName("StdOut")>]
            member __.StdOut with get() : ITextWriter = failwith "never" and set (v : ITextWriter) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.Arguments)"); CompiledName("Arguments")>]
            member __.Arguments with get() : AnonymousType440 = failwith "never" and set (v : AnonymousType440) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ScriptFullName)"); CompiledName("ScriptFullName")>]
            member __.ScriptFullName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.Quit({args}))"); CompiledName("Quit")>]
            member __.Quit(?exitCode : float) : float = failwith "never"




    type AnonymousType44 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype367")>]
            member __.prototype with get() : CompositionEvent = failwith "never" and set (v : CompositionEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create409")>]
            member __.Create() : CompositionEvent = failwith "never"




    type AnonymousType440 with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length1")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.Item({args}))"); CompiledName("Item")>]
            member __.Item(n : float) : string = failwith "never"




    type AnonymousType45 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype368")>]
            member __.prototype with get() : SVGMarkerElement = failwith "never" and set (v : SVGMarkerElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create410")>]
            member __.Create() : SVGMarkerElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKER_ORIENT_UNKNOWN)"); CompiledName("SVG_MARKER_ORIENT_UNKNOWN")>]
            member __.SVG_MARKER_ORIENT_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKER_ORIENT_ANGLE)"); CompiledName("SVG_MARKER_ORIENT_ANGLE")>]
            member __.SVG_MARKER_ORIENT_ANGLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKERUNITS_UNKNOWN)"); CompiledName("SVG_MARKERUNITS_UNKNOWN")>]
            member __.SVG_MARKERUNITS_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKERUNITS_STROKEWIDTH)"); CompiledName("SVG_MARKERUNITS_STROKEWIDTH")>]
            member __.SVG_MARKERUNITS_STROKEWIDTH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKER_ORIENT_AUTO)"); CompiledName("SVG_MARKER_ORIENT_AUTO")>]
            member __.SVG_MARKER_ORIENT_AUTO with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKERUNITS_USERSPACEONUSE)"); CompiledName("SVG_MARKERUNITS_USERSPACEONUSE")>]
            member __.SVG_MARKERUNITS_USERSPACEONUSE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType46 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype369")>]
            member __.prototype with get() : CSSStyleDeclaration = failwith "never" and set (v : CSSStyleDeclaration) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create411")>]
            member __.Create() : CSSStyleDeclaration = failwith "never"




    type AnonymousType47 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype370")>]
            member __.prototype with get() : SVGGElement = failwith "never" and set (v : SVGGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create412")>]
            member __.Create() : SVGGElement = failwith "never"




    type AnonymousType48 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype371")>]
            member __.prototype with get() : MSStyleCSSProperties = failwith "never" and set (v : MSStyleCSSProperties) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create413")>]
            member __.Create() : MSStyleCSSProperties = failwith "never"




    type AnonymousType49 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype372")>]
            member __.prototype with get() : Navigator = failwith "never" and set (v : Navigator) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create414")>]
            member __.Create() : Navigator = failwith "never"




    type AnonymousType5 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create415")>]
            member __.Create(?value : obj) : Number = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke21")>]
            member __.Invoke(?value : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype373")>]
            member __.prototype with get() : Number = failwith "never" and set (v : Number) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VALUE)"); CompiledName("MAX_VALUE")>]
            member __.MAX_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MIN_VALUE)"); CompiledName("MIN_VALUE")>]
            member __.MIN_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NaN)"); CompiledName("NaN1")>]
            member __.NaN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEGATIVE_INFINITY)"); CompiledName("NEGATIVE_INFINITY")>]
            member __.NEGATIVE_INFINITY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POSITIVE_INFINITY)"); CompiledName("POSITIVE_INFINITY")>]
            member __.POSITIVE_INFINITY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType50 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype374")>]
            member __.prototype with get() : SVGPathSegCurvetoCubicSmoothAbs = failwith "never" and set (v : SVGPathSegCurvetoCubicSmoothAbs) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create416")>]
            member __.Create() : SVGPathSegCurvetoCubicSmoothAbs = failwith "never"




    type AnonymousType51 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype375")>]
            member __.prototype with get() : SVGZoomEvent = failwith "never" and set (v : SVGZoomEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create417")>]
            member __.Create() : SVGZoomEvent = failwith "never"




    type AnonymousType52 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype376")>]
            member __.prototype with get() : HTMLTableDataCellElement = failwith "never" and set (v : HTMLTableDataCellElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create418")>]
            member __.Create() : HTMLTableDataCellElement = failwith "never"




    type AnonymousType53 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype377")>]
            member __.prototype with get() : HTMLBaseElement = failwith "never" and set (v : HTMLBaseElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create419")>]
            member __.Create() : HTMLBaseElement = failwith "never"




    type AnonymousType54 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype378")>]
            member __.prototype with get() : ClientRect = failwith "never" and set (v : ClientRect) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create420")>]
            member __.Create() : ClientRect = failwith "never"




    type AnonymousType55 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype379")>]
            member __.prototype with get() : DOMImplementation = failwith "never" and set (v : DOMImplementation) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create421")>]
            member __.Create() : DOMImplementation = failwith "never"




    type AnonymousType56 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype380")>]
            member __.prototype with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create422")>]
            member __.Create() : Element = failwith "never"




    type AnonymousType57 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype381")>]
            member __.prototype with get() : HTMLNextIdElement = failwith "never" and set (v : HTMLNextIdElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create423")>]
            member __.Create() : HTMLNextIdElement = failwith "never"




    type AnonymousType58 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype382")>]
            member __.prototype with get() : SVGPathSegMovetoRel = failwith "never" and set (v : SVGPathSegMovetoRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create424")>]
            member __.Create() : SVGPathSegMovetoRel = failwith "never"




    type AnonymousType59 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype383")>]
            member __.prototype with get() : SVGLineElement = failwith "never" and set (v : SVGLineElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create425")>]
            member __.Create() : SVGLineElement = failwith "never"




    type AnonymousType6 with 

            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create426")>]
            member __.Create() : Date = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create427")>]
            member __.Create(value : float) : Date = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create428")>]
            member __.Create(value : string) : Date = failwith "never"
            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create429")>]
            member __.Create(year : float, month : float, ?date : float, ?hours : float, ?minutes : float, ?seconds : float, ?ms : float) : Date = failwith "never"
            [<FunScript.JSEmitInline("({0}())"); CompiledName("Invoke22")>]
            member __.Invoke() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype384")>]
            member __.prototype with get() : Date = failwith "never" and set (v : Date) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parse({args}))"); CompiledName("parse")>]
            member __.parse(s : string) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.UTC({args}))"); CompiledName("UTC")>]
            member __.UTC(year : float, month : float, ?date : float, ?hours : float, ?minutes : float, ?seconds : float, ?ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.now())"); CompiledName("now")>]
            member __.now() : float = failwith "never"




    type AnonymousType60 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype385")>]
            member __.prototype with get() : HTMLParagraphElement = failwith "never" and set (v : HTMLParagraphElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create430")>]
            member __.Create() : HTMLParagraphElement = failwith "never"




    type AnonymousType61 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype386")>]
            member __.prototype with get() : HTMLAreasCollection = failwith "never" and set (v : HTMLAreasCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create431")>]
            member __.Create() : HTMLAreasCollection = failwith "never"




    type AnonymousType62 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype387")>]
            member __.prototype with get() : SVGDescElement = failwith "never" and set (v : SVGDescElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create432")>]
            member __.Create() : SVGDescElement = failwith "never"




    type AnonymousType63 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype388")>]
            member __.prototype with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create433")>]
            member __.Create() : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.ENTITY_REFERENCE_NODE)"); CompiledName("ENTITY_REFERENCE_NODE")>]
            member __.ENTITY_REFERENCE_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ATTRIBUTE_NODE)"); CompiledName("ATTRIBUTE_NODE")>]
            member __.ATTRIBUTE_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_FRAGMENT_NODE)"); CompiledName("DOCUMENT_FRAGMENT_NODE")>]
            member __.DOCUMENT_FRAGMENT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXT_NODE)"); CompiledName("TEXT_NODE")>]
            member __.TEXT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ELEMENT_NODE)"); CompiledName("ELEMENT_NODE")>]
            member __.ELEMENT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMMENT_NODE)"); CompiledName("COMMENT_NODE")>]
            member __.COMMENT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_DISCONNECTED)"); CompiledName("DOCUMENT_POSITION_DISCONNECTED")>]
            member __.DOCUMENT_POSITION_DISCONNECTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_CONTAINED_BY)"); CompiledName("DOCUMENT_POSITION_CONTAINED_BY")>]
            member __.DOCUMENT_POSITION_CONTAINED_BY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_CONTAINS)"); CompiledName("DOCUMENT_POSITION_CONTAINS")>]
            member __.DOCUMENT_POSITION_CONTAINS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_TYPE_NODE)"); CompiledName("DOCUMENT_TYPE_NODE")>]
            member __.DOCUMENT_TYPE_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC)"); CompiledName("DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC")>]
            member __.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_NODE)"); CompiledName("DOCUMENT_NODE")>]
            member __.DOCUMENT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ENTITY_NODE)"); CompiledName("ENTITY_NODE")>]
            member __.ENTITY_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PROCESSING_INSTRUCTION_NODE)"); CompiledName("PROCESSING_INSTRUCTION_NODE")>]
            member __.PROCESSING_INSTRUCTION_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CDATA_SECTION_NODE)"); CompiledName("CDATA_SECTION_NODE")>]
            member __.CDATA_SECTION_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NOTATION_NODE)"); CompiledName("NOTATION_NODE")>]
            member __.NOTATION_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_FOLLOWING)"); CompiledName("DOCUMENT_POSITION_FOLLOWING")>]
            member __.DOCUMENT_POSITION_FOLLOWING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_PRECEDING)"); CompiledName("DOCUMENT_POSITION_PRECEDING")>]
            member __.DOCUMENT_POSITION_PRECEDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType64 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype389")>]
            member __.prototype with get() : SVGPathSegCurvetoQuadraticSmoothRel = failwith "never" and set (v : SVGPathSegCurvetoQuadraticSmoothRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create434")>]
            member __.Create() : SVGPathSegCurvetoQuadraticSmoothRel = failwith "never"




    type AnonymousType65 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype390")>]
            member __.prototype with get() : MSScriptHost = failwith "never" and set (v : MSScriptHost) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create435")>]
            member __.Create() : MSScriptHost = failwith "never"




    type AnonymousType66 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype391")>]
            member __.prototype with get() : SVGClipPathElement = failwith "never" and set (v : SVGClipPathElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create436")>]
            member __.Create() : SVGClipPathElement = failwith "never"




    type AnonymousType67 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype392")>]
            member __.prototype with get() : MouseEvent = failwith "never" and set (v : MouseEvent) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create437")>]
            member __.Create() : MouseEvent = failwith "never"




    type AnonymousType68 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype393")>]
            member __.prototype with get() : RangeException = failwith "never" and set (v : RangeException) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create438")>]
            member __.Create() : RangeException = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_NODE_TYPE_ERR)"); CompiledName("INVALID_NODE_TYPE_ERR1")>]
            member __.INVALID_NODE_TYPE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BAD_BOUNDARYPOINTS_ERR)"); CompiledName("BAD_BOUNDARYPOINTS_ERR")>]
            member __.BAD_BOUNDARYPOINTS_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type AnonymousType69 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype394")>]
            member __.prototype with get() : SVGTextPositioningElement = failwith "never" and set (v : SVGTextPositioningElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create439")>]
            member __.Create() : SVGTextPositioningElement = failwith "never"




    type AnonymousType7 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create440")>]
            member __.Create(pattern : string, ?flags : string) : RegExp = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke23")>]
            member __.Invoke(pattern : string, ?flags : string) : RegExp = failwith "never"
            [<FunScript.JSEmitInline("({0}.$1)"); CompiledName("Dollar1")>]
            member __.Dollar1 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.$2)"); CompiledName("Dollar2")>]
            member __.Dollar2 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.$3)"); CompiledName("Dollar3")>]
            member __.Dollar3 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.$4)"); CompiledName("Dollar4")>]
            member __.Dollar4 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.$5)"); CompiledName("Dollar5")>]
            member __.Dollar5 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.$6)"); CompiledName("Dollar6")>]
            member __.Dollar6 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.$7)"); CompiledName("Dollar7")>]
            member __.Dollar7 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.$8)"); CompiledName("Dollar8")>]
            member __.Dollar8 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.$9)"); CompiledName("Dollar9")>]
            member __.Dollar9 with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastMatch)"); CompiledName("lastMatch")>]
            member __.lastMatch with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type AnonymousType70 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype395")>]
            member __.prototype with get() : HTMLAppletElement = failwith "never" and set (v : HTMLAppletElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create441")>]
            member __.Create() : HTMLAppletElement = failwith "never"




    type AnonymousType71 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype396")>]
            member __.prototype with get() : TextMetrics = failwith "never" and set (v : TextMetrics) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create442")>]
            member __.Create() : TextMetrics = failwith "never"




    type AnonymousType72 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype397")>]
            member __.prototype with get() : HTMLOListElement = failwith "never" and set (v : HTMLOListElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create443")>]
            member __.Create() : HTMLOListElement = failwith "never"




    type AnonymousType73 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype398")>]
            member __.prototype with get() : SVGPathSegLinetoVerticalRel = failwith "never" and set (v : SVGPathSegLinetoVerticalRel) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create444")>]
            member __.Create() : SVGPathSegLinetoVerticalRel = failwith "never"




    type AnonymousType74 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype399")>]
            member __.prototype with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create445")>]
            member __.Create() : SVGAnimatedString = failwith "never"




    type AnonymousType75 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype400")>]
            member __.prototype with get() : CDATASection = failwith "never" and set (v : CDATASection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create446")>]
            member __.Create() : CDATASection = failwith "never"




    type AnonymousType76 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype401")>]
            member __.prototype with get() : StyleMedia = failwith "never" and set (v : StyleMedia) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create447")>]
            member __.Create() : StyleMedia = failwith "never"




    type AnonymousType77 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype402")>]
            member __.prototype with get() : HTMLSelectElement = failwith "never" and set (v : HTMLSelectElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create448")>]
            member __.Create() : HTMLSelectElement = failwith "never"




    type AnonymousType78 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype403")>]
            member __.prototype with get() : TextRange = failwith "never" and set (v : TextRange) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create449")>]
            member __.Create() : TextRange = failwith "never"




    type AnonymousType79 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype404")>]
            member __.prototype with get() : HTMLBlockElement = failwith "never" and set (v : HTMLBlockElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create450")>]
            member __.Create() : HTMLBlockElement = failwith "never"




    type AnonymousType8 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create451")>]
            member __.Create(?message : string) : Error = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke24")>]
            member __.Invoke(?message : string) : Error = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype405")>]
            member __.prototype with get() : Error = failwith "never" and set (v : Error) : unit = failwith "never"




    type AnonymousType80 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype406")>]
            member __.prototype with get() : CSSStyleSheet = failwith "never" and set (v : CSSStyleSheet) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create452")>]
            member __.Create() : CSSStyleSheet = failwith "never"




    type AnonymousType81 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype407")>]
            member __.prototype with get() : MSSelection = failwith "never" and set (v : MSSelection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create453")>]
            member __.Create() : MSSelection = failwith "never"




    type AnonymousType82 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype408")>]
            member __.prototype with get() : HTMLMetaElement = failwith "never" and set (v : HTMLMetaElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create454")>]
            member __.Create() : HTMLMetaElement = failwith "never"




    type AnonymousType83 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype409")>]
            member __.prototype with get() : SVGPatternElement = failwith "never" and set (v : SVGPatternElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create455")>]
            member __.Create() : SVGPatternElement = failwith "never"




    type AnonymousType84 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype410")>]
            member __.prototype with get() : SVGAnimatedAngle = failwith "never" and set (v : SVGAnimatedAngle) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create456")>]
            member __.Create() : SVGAnimatedAngle = failwith "never"




    type AnonymousType85 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype411")>]
            member __.prototype with get() : Selection = failwith "never" and set (v : Selection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create457")>]
            member __.Create() : Selection = failwith "never"




    type AnonymousType86 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype412")>]
            member __.prototype with get() : SVGScriptElement = failwith "never" and set (v : SVGScriptElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create458")>]
            member __.Create() : SVGScriptElement = failwith "never"




    type AnonymousType87 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype413")>]
            member __.prototype with get() : HTMLDDElement = failwith "never" and set (v : HTMLDDElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create459")>]
            member __.Create() : HTMLDDElement = failwith "never"




    type AnonymousType88 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype414")>]
            member __.prototype with get() : CSSStyleRule = failwith "never" and set (v : CSSStyleRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create460")>]
            member __.Create() : CSSStyleRule = failwith "never"




    type AnonymousType89 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype415")>]
            member __.prototype with get() : NodeIterator = failwith "never" and set (v : NodeIterator) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create461")>]
            member __.Create() : NodeIterator = failwith "never"




    type AnonymousType9 with 

            [<FunScript.JSEmitInline("(new {0}({args}))"); CompiledName("Create462")>]
            member __.Create(?message : string) : EvalError = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke25")>]
            member __.Invoke(?message : string) : EvalError = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype416")>]
            member __.prototype with get() : EvalError = failwith "never" and set (v : EvalError) : unit = failwith "never"




    type AnonymousType90 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype417")>]
            member __.prototype with get() : SVGViewElement = failwith "never" and set (v : SVGViewElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create463")>]
            member __.Create() : SVGViewElement = failwith "never"




    type AnonymousType91 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype418")>]
            member __.prototype with get() : HTMLLinkElement = failwith "never" and set (v : HTMLLinkElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create464")>]
            member __.Create() : HTMLLinkElement = failwith "never"




    type AnonymousType92 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype419")>]
            member __.prototype with get() : HTMLFontElement = failwith "never" and set (v : HTMLFontElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create465")>]
            member __.Create() : HTMLFontElement = failwith "never"




    type AnonymousType93 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype420")>]
            member __.prototype with get() : SVGTitleElement = failwith "never" and set (v : SVGTitleElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create466")>]
            member __.Create() : SVGTitleElement = failwith "never"




    type AnonymousType94 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype421")>]
            member __.prototype with get() : ControlRangeCollection = failwith "never" and set (v : ControlRangeCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create467")>]
            member __.Create() : ControlRangeCollection = failwith "never"




    type AnonymousType95 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype422")>]
            member __.prototype with get() : MSNamespaceInfo = failwith "never" and set (v : MSNamespaceInfo) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create468")>]
            member __.Create() : MSNamespaceInfo = failwith "never"




    type AnonymousType96 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype423")>]
            member __.prototype with get() : SVGAnimatedTransformList = failwith "never" and set (v : SVGAnimatedTransformList) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create469")>]
            member __.Create() : SVGAnimatedTransformList = failwith "never"




    type AnonymousType97 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype424")>]
            member __.prototype with get() : HTMLTableCaptionElement = failwith "never" and set (v : HTMLTableCaptionElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create470")>]
            member __.Create() : HTMLTableCaptionElement = failwith "never"




    type AnonymousType98 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype425")>]
            member __.prototype with get() : HTMLOptionElement = failwith "never" and set (v : HTMLOptionElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create471")>]
            member __.Create() : HTMLOptionElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.create())"); CompiledName("create4")>]
            member __.create() : HTMLOptionElement = failwith "never"




    type AnonymousType99 with 

            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype426")>]
            member __.prototype with get() : HTMLMapElement = failwith "never" and set (v : HTMLMapElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("(new {0}())"); CompiledName("Create472")>]
            member __.Create() : HTMLMapElement = failwith "never"




    type ApplicationCache with 

            [<FunScript.JSEmitInline("({0}.status)"); CompiledName("status1")>]
            member __.status with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondownloading)"); CompiledName("ondownloading")>]
            member __.ondownloading with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress1")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onupdateready)"); CompiledName("onupdateready")>]
            member __.onupdateready with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncached)"); CompiledName("oncached")>]
            member __.oncached with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onobsolete)"); CompiledName("onobsolete")>]
            member __.onobsolete with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror2")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onchecking)"); CompiledName("onchecking")>]
            member __.onchecking with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onnoupdate)"); CompiledName("onnoupdate")>]
            member __.onnoupdate with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.swapCache())"); CompiledName("swapCache")>]
            member __.swapCache() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abort())"); CompiledName("abort")>]
            member __.abort() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.update())"); CompiledName("update")>]
            member __.update() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CHECKING)"); CompiledName("CHECKING1")>]
            member __.CHECKING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNCACHED)"); CompiledName("UNCACHED1")>]
            member __.UNCACHED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UPDATEREADY)"); CompiledName("UPDATEREADY1")>]
            member __.UPDATEREADY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOWNLOADING)"); CompiledName("DOWNLOADING1")>]
            member __.DOWNLOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.IDLE)"); CompiledName("IDLE1")>]
            member __.IDLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.OBSOLETE)"); CompiledName("OBSOLETE1")>]
            member __.OBSOLETE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"downloading\", {args})"); CompiledName("addEventListener97")>]
            member __.addEventListener_downloading(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener98")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"updateready\", {args})"); CompiledName("addEventListener99")>]
            member __.addEventListener_updateready(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cached\", {args})"); CompiledName("addEventListener100")>]
            member __.addEventListener_cached(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"obsolete\", {args})"); CompiledName("addEventListener101")>]
            member __.addEventListener_obsolete(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener102")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"checking\", {args})"); CompiledName("addEventListener103")>]
            member __.addEventListener_checking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"noupdate\", {args})"); CompiledName("addEventListener104")>]
            member __.addEventListener_noupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener105")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type System.Collections.Generic.IList<'T> with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length2")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString1")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleString())"); CompiledName("toLocaleString")>]
            member __.toLocaleString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.push())"); CompiledName("push")>]
            member __.push() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.push({args}))"); CompiledName("push1")>]
            member __.pushOverload2([<System.ParamArray>] items : array<'T>) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.pop())"); CompiledName("pop")>]
            member __.pop() : 'T = failwith "never"
            [<FunScript.JSEmitInline("({0}.concat())"); CompiledName("concat")>]
            member __.concat<'U>() : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.concat({args}))"); CompiledName("concat1")>]
            member __.concatOverload2<'U>([<System.ParamArray>] items : array<array<'T>>) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.concat())"); CompiledName("concat2")>]
            member __.concat() : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.concat({args}))"); CompiledName("concat3")>]
            member __.concatOverload2([<System.ParamArray>] items : array<'T>) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.join({args}))"); CompiledName("join")>]
            member __.join(?separator : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.reverse())"); CompiledName("reverse")>]
            member __.reverse() : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.shift())"); CompiledName("shift")>]
            member __.shift() : 'T = failwith "never"
            [<FunScript.JSEmitInline("({0}.slice({args}))"); CompiledName("slice")>]
            member __.slice(?start : float, ?_end : float) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.sort({args}))"); CompiledName("sort")>]
            member __.sort(?compareFn : System.Func<'T, 'T, float>) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.splice({args}))"); CompiledName("splice")>]
            member __.splice(start : float) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.splice({args}))"); CompiledName("splice1")>]
            member __.splice(start : float, deleteCount : float) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.splice({args}))"); CompiledName("splice2")>]
            member __.spliceOverload2(start : float, deleteCount : float, [<System.ParamArray>] items : array<'T>) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.unshift())"); CompiledName("unshift")>]
            member __.unshift() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.unshift({args}))"); CompiledName("unshift1")>]
            member __.unshiftOverload2([<System.ParamArray>] items : array<'T>) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.indexOf({args}))"); CompiledName("indexOf")>]
            member __.indexOf(searchElement : 'T, ?fromIndex : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastIndexOf({args}))"); CompiledName("lastIndexOf")>]
            member __.lastIndexOf(searchElement : 'T, ?fromIndex : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.every({args}))"); CompiledName("every")>]
            member __.every(callbackfn : System.Func<'T, float, array<'T>, bool>, ?thisArg : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.some({args}))"); CompiledName("some")>]
            member __.some(callbackfn : System.Func<'T, float, array<'T>, bool>, ?thisArg : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.forEach({args}))"); CompiledName("forEach")>]
            member __.forEach(callbackfn : System.Func<'T, float, array<'T>, unit>, ?thisArg : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.map({args}))"); CompiledName("map")>]
            member __.map<'U>(callbackfn : System.Func<'T, float, array<'T>, 'U>, ?thisArg : obj) : array<'U> = failwith "never"
            [<FunScript.JSEmitInline("({0}.filter({args}))"); CompiledName("filter")>]
            member __.filter(callbackfn : System.Func<'T, float, array<'T>, bool>, ?thisArg : obj) : array<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.reduce({args}))"); CompiledName("reduce")>]
            member __.reduce(callbackfn : System.Func<'T, 'T, float, array<'T>, 'T>, ?initialValue : 'T) : 'T = failwith "never"
            [<FunScript.JSEmitInline("({0}.reduce({args}))"); CompiledName("reduce1")>]
            member __.reduce<'U>(callbackfn : System.Func<'U, 'T, float, array<'T>, 'U>, initialValue : 'U) : 'U = failwith "never"
            [<FunScript.JSEmitInline("({0}.reduceRight({args}))"); CompiledName("reduceRight")>]
            member __.reduceRight(callbackfn : System.Func<'T, 'T, float, array<'T>, 'T>, ?initialValue : 'T) : 'T = failwith "never"
            [<FunScript.JSEmitInline("({0}.reduceRight({args}))"); CompiledName("reduceRight1")>]
            member __.reduceRight<'U>(callbackfn : System.Func<'U, 'T, float, array<'T>, 'U>, initialValue : 'U) : 'U = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item1")>]
            member __.Item with get(i : int) : 'T = failwith "never" and set (i : int) (v : 'T) : unit = failwith "never"




    type ArrayBuffer with 

            [<FunScript.JSEmitInline("({0}.byteLength)"); CompiledName("byteLength")>]
            member __.byteLength with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.slice({args}))"); CompiledName("slice1")>]
            member __.slice(_begin : float, ?_end : float) : ArrayBuffer = failwith "never"




    type ArrayBufferView with 

            [<FunScript.JSEmitInline("({0}.buffer)"); CompiledName("buffer")>]
            member __.buffer with get() : ArrayBuffer = failwith "never" and set (v : ArrayBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.byteOffset)"); CompiledName("byteOffset")>]
            member __.byteOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.byteLength)"); CompiledName("byteLength1")>]
            member __.byteLength with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type Attr with 

            [<FunScript.JSEmitInline("({0}.expando)"); CompiledName("expando")>]
            member __.expando with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.specified)"); CompiledName("specified")>]
            member __.specified with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ownerElement)"); CompiledName("ownerElement")>]
            member __.ownerElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name2")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type AudioTrack with 

            [<FunScript.JSEmitInline("({0}.kind)"); CompiledName("kind")>]
            member __.kind with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.language)"); CompiledName("language")>]
            member __.language with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.id)"); CompiledName("id")>]
            member __.id with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.label)"); CompiledName("label")>]
            member __.label with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.enabled)"); CompiledName("enabled")>]
            member __.enabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sourceBuffer)"); CompiledName("sourceBuffer")>]
            member __.sourceBuffer with get() : SourceBuffer = failwith "never" and set (v : SourceBuffer) : unit = failwith "never"




    type AudioTrackList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length3")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onchange)"); CompiledName("onchange1")>]
            member __.onchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onaddtrack)"); CompiledName("onaddtrack")>]
            member __.onaddtrack with get() : System.Func<TrackEvent, obj> = failwith "never" and set (v : System.Func<TrackEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onremovetrack)"); CompiledName("onremovetrack")>]
            member __.onremovetrack with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getTrackById({args}))"); CompiledName("getTrackById")>]
            member __.getTrackById(id : string) : AudioTrack = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item1")>]
            member __.item(index : float) : AudioTrack = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item2")>]
            member __.Item with get(i : int) : AudioTrack = failwith "never" and set (i : int) (v : AudioTrack) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener106")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"addtrack\", {args})"); CompiledName("addEventListener107")>]
            member __.addEventListener_addtrack(listener : System.Func<TrackEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"removetrack\", {args})"); CompiledName("addEventListener108")>]
            member __.addEventListener_removetrack(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener109")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type BeforeUnloadEvent with 

            [<FunScript.JSEmitInline("({0}.returnValue)"); CompiledName("returnValue")>]
            member __.returnValue with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type Blob with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.size)"); CompiledName("size")>]
            member __.size with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msDetachStream())"); CompiledName("msDetachStream")>]
            member __.msDetachStream() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.slice({args}))"); CompiledName("slice2")>]
            member __.slice(?start : float, ?_end : float, ?contentType : string) : Blob = failwith "never"
            [<FunScript.JSEmitInline("({0}.msClose())"); CompiledName("msClose")>]
            member __.msClose() : unit = failwith "never"




    type BlobPropertyBag with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type1")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.endings)"); CompiledName("endings")>]
            member __.endings with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type BookmarkCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length4")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item2")>]
            member __.item(index : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item3")>]
            member __.Item with get(i : int) : obj = failwith "never" and set (i : int) (v : obj) : unit = failwith "never"




    type CSSFontFaceRule with 

            [<FunScript.JSEmitInline("({0}.style)"); CompiledName("style")>]
            member __.style with get() : CSSStyleDeclaration = failwith "never" and set (v : CSSStyleDeclaration) : unit = failwith "never"




    type CSSImportRule with 

            [<FunScript.JSEmitInline("({0}.styleSheet)"); CompiledName("styleSheet")>]
            member __.styleSheet with get() : CSSStyleSheet = failwith "never" and set (v : CSSStyleSheet) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media")>]
            member __.media with get() : MediaList = failwith "never" and set (v : MediaList) : unit = failwith "never"




    type CSSKeyframeRule with 

            [<FunScript.JSEmitInline("({0}.keyText)"); CompiledName("keyText")>]
            member __.keyText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.style)"); CompiledName("style1")>]
            member __.style with get() : CSSStyleDeclaration = failwith "never" and set (v : CSSStyleDeclaration) : unit = failwith "never"




    type CSSKeyframesRule with 

            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name3")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cssRules)"); CompiledName("cssRules")>]
            member __.cssRules with get() : CSSRuleList = failwith "never" and set (v : CSSRuleList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.findRule({args}))"); CompiledName("findRule")>]
            member __.findRule(rule : string) : CSSKeyframeRule = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteRule({args}))"); CompiledName("deleteRule")>]
            member __.deleteRule(rule : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendRule({args}))"); CompiledName("appendRule")>]
            member __.appendRule(rule : string) : unit = failwith "never"




    type CSSMediaRule with 

            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media1")>]
            member __.media with get() : MediaList = failwith "never" and set (v : MediaList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cssRules)"); CompiledName("cssRules1")>]
            member __.cssRules with get() : CSSRuleList = failwith "never" and set (v : CSSRuleList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertRule({args}))"); CompiledName("insertRule")>]
            member __.insertRule(rule : string, ?index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteRule({args}))"); CompiledName("deleteRule1")>]
            member __.deleteRule(?index : float) : unit = failwith "never"




    type CSSNamespaceRule with 

            [<FunScript.JSEmitInline("({0}.namespaceURI)"); CompiledName("namespaceURI")>]
            member __.namespaceURI with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.prefix)"); CompiledName("prefix")>]
            member __.prefix with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type CSSPageRule with 

            [<FunScript.JSEmitInline("({0}.pseudoClass)"); CompiledName("pseudoClass")>]
            member __.pseudoClass with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectorText)"); CompiledName("selectorText")>]
            member __.selectorText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selector)"); CompiledName("selector")>]
            member __.selector with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.style)"); CompiledName("style2")>]
            member __.style with get() : CSSStyleDeclaration = failwith "never" and set (v : CSSStyleDeclaration) : unit = failwith "never"




    type CSSRule with 

            [<FunScript.JSEmitInline("({0}.cssText)"); CompiledName("cssText")>]
            member __.cssText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentStyleSheet)"); CompiledName("parentStyleSheet")>]
            member __.parentStyleSheet with get() : CSSStyleSheet = failwith "never" and set (v : CSSStyleSheet) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentRule)"); CompiledName("parentRule")>]
            member __.parentRule with get() : CSSRule = failwith "never" and set (v : CSSRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type2")>]
            member __._type with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.IMPORT_RULE)"); CompiledName("IMPORT_RULE1")>]
            member __.IMPORT_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_RULE)"); CompiledName("MEDIA_RULE1")>]
            member __.MEDIA_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STYLE_RULE)"); CompiledName("STYLE_RULE1")>]
            member __.STYLE_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NAMESPACE_RULE)"); CompiledName("NAMESPACE_RULE1")>]
            member __.NAMESPACE_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PAGE_RULE)"); CompiledName("PAGE_RULE1")>]
            member __.PAGE_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNKNOWN_RULE)"); CompiledName("UNKNOWN_RULE1")>]
            member __.UNKNOWN_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FONT_FACE_RULE)"); CompiledName("FONT_FACE_RULE1")>]
            member __.FONT_FACE_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CHARSET_RULE)"); CompiledName("CHARSET_RULE1")>]
            member __.CHARSET_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.KEYFRAMES_RULE)"); CompiledName("KEYFRAMES_RULE1")>]
            member __.KEYFRAMES_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.KEYFRAME_RULE)"); CompiledName("KEYFRAME_RULE1")>]
            member __.KEYFRAME_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VIEWPORT_RULE)"); CompiledName("VIEWPORT_RULE1")>]
            member __.VIEWPORT_RULE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type CSSRuleList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length5")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item3")>]
            member __.item(index : float) : CSSRule = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item4")>]
            member __.Item with get(i : int) : CSSRule = failwith "never" and set (i : int) (v : CSSRule) : unit = failwith "never"




    type CSSStyleDeclaration with 

            [<FunScript.JSEmitInline("({0}.backgroundAttachment)"); CompiledName("backgroundAttachment")>]
            member __.backgroundAttachment with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.visibility)"); CompiledName("visibility")>]
            member __.visibility with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textAlignLast)"); CompiledName("textAlignLast")>]
            member __.textAlignLast with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderRightStyle)"); CompiledName("borderRightStyle")>]
            member __.borderRightStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.counterIncrement)"); CompiledName("counterIncrement")>]
            member __.counterIncrement with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.orphans)"); CompiledName("orphans")>]
            member __.orphans with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cssText)"); CompiledName("cssText1")>]
            member __.cssText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderStyle)"); CompiledName("borderStyle")>]
            member __.borderStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointerEvents)"); CompiledName("pointerEvents")>]
            member __.pointerEvents with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderTopColor)"); CompiledName("borderTopColor")>]
            member __.borderTopColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.markerEnd)"); CompiledName("markerEnd")>]
            member __.markerEnd with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textIndent)"); CompiledName("textIndent")>]
            member __.textIndent with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.listStyleImage)"); CompiledName("listStyleImage")>]
            member __.listStyleImage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cursor)"); CompiledName("cursor")>]
            member __.cursor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.listStylePosition)"); CompiledName("listStylePosition")>]
            member __.listStylePosition with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.wordWrap)"); CompiledName("wordWrap")>]
            member __.wordWrap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderTopStyle)"); CompiledName("borderTopStyle")>]
            member __.borderTopStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alignmentBaseline)"); CompiledName("alignmentBaseline")>]
            member __.alignmentBaseline with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.opacity)"); CompiledName("opacity")>]
            member __.opacity with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.direction)"); CompiledName("direction")>]
            member __.direction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeMiterlimit)"); CompiledName("strokeMiterlimit")>]
            member __.strokeMiterlimit with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maxWidth)"); CompiledName("maxWidth")>]
            member __.maxWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.color)"); CompiledName("color")>]
            member __.color with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clip)"); CompiledName("clip")>]
            member __.clip with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderRightWidth)"); CompiledName("borderRightWidth")>]
            member __.borderRightWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.verticalAlign)"); CompiledName("verticalAlign")>]
            member __.verticalAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.overflow)"); CompiledName("overflow")>]
            member __.overflow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mask)"); CompiledName("mask")>]
            member __.mask with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderLeftStyle)"); CompiledName("borderLeftStyle")>]
            member __.borderLeftStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.emptyCells)"); CompiledName("emptyCells")>]
            member __.emptyCells with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stopOpacity)"); CompiledName("stopOpacity")>]
            member __.stopOpacity with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.paddingRight)"); CompiledName("paddingRight")>]
            member __.paddingRight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentRule)"); CompiledName("parentRule1")>]
            member __.parentRule with get() : CSSRule = failwith "never" and set (v : CSSRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.background)"); CompiledName("background")>]
            member __.background with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.boxSizing)"); CompiledName("boxSizing")>]
            member __.boxSizing with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textJustify)"); CompiledName("textJustify")>]
            member __.textJustify with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height")>]
            member __.height with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.paddingTop)"); CompiledName("paddingTop")>]
            member __.paddingTop with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length6")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.right)"); CompiledName("right")>]
            member __.right with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baselineShift)"); CompiledName("baselineShift")>]
            member __.baselineShift with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderLeft)"); CompiledName("borderLeft")>]
            member __.borderLeft with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.widows)"); CompiledName("widows")>]
            member __.widows with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineHeight)"); CompiledName("lineHeight")>]
            member __.lineHeight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.left)"); CompiledName("left")>]
            member __.left with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textUnderlinePosition)"); CompiledName("textUnderlinePosition")>]
            member __.textUnderlinePosition with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.glyphOrientationHorizontal)"); CompiledName("glyphOrientationHorizontal")>]
            member __.glyphOrientationHorizontal with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.display)"); CompiledName("display")>]
            member __.display with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textAnchor)"); CompiledName("textAnchor")>]
            member __.textAnchor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cssFloat)"); CompiledName("cssFloat")>]
            member __.cssFloat with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeDasharray)"); CompiledName("strokeDasharray")>]
            member __.strokeDasharray with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rubyAlign)"); CompiledName("rubyAlign")>]
            member __.rubyAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontSizeAdjust)"); CompiledName("fontSizeAdjust")>]
            member __.fontSizeAdjust with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderLeftColor)"); CompiledName("borderLeftColor")>]
            member __.borderLeftColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundImage)"); CompiledName("backgroundImage")>]
            member __.backgroundImage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.listStyleType)"); CompiledName("listStyleType")>]
            member __.listStyleType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeWidth)"); CompiledName("strokeWidth")>]
            member __.strokeWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textOverflow)"); CompiledName("textOverflow")>]
            member __.textOverflow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fillRule)"); CompiledName("fillRule")>]
            member __.fillRule with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderBottomColor)"); CompiledName("borderBottomColor")>]
            member __.borderBottomColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.zIndex)"); CompiledName("zIndex")>]
            member __.zIndex with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.position)"); CompiledName("position")>]
            member __.position with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.listStyle)"); CompiledName("listStyle")>]
            member __.listStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTransformOrigin)"); CompiledName("msTransformOrigin")>]
            member __.msTransformOrigin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dominantBaseline)"); CompiledName("dominantBaseline")>]
            member __.dominantBaseline with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.overflowY)"); CompiledName("overflowY")>]
            member __.overflowY with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fill)"); CompiledName("fill")>]
            member __.fill with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.captionSide)"); CompiledName("captionSide")>]
            member __.captionSide with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderCollapse)"); CompiledName("borderCollapse")>]
            member __.borderCollapse with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.boxShadow)"); CompiledName("boxShadow")>]
            member __.boxShadow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.quotes)"); CompiledName("quotes")>]
            member __.quotes with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tableLayout)"); CompiledName("tableLayout")>]
            member __.tableLayout with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.unicodeBidi)"); CompiledName("unicodeBidi")>]
            member __.unicodeBidi with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderBottomWidth)"); CompiledName("borderBottomWidth")>]
            member __.borderBottomWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundSize)"); CompiledName("backgroundSize")>]
            member __.backgroundSize with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textDecoration)"); CompiledName("textDecoration")>]
            member __.textDecoration with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeDashoffset)"); CompiledName("strokeDashoffset")>]
            member __.strokeDashoffset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontSize)"); CompiledName("fontSize")>]
            member __.fontSize with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.border)"); CompiledName("border")>]
            member __.border with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pageBreakBefore)"); CompiledName("pageBreakBefore")>]
            member __.pageBreakBefore with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderTopRightRadius)"); CompiledName("borderTopRightRadius")>]
            member __.borderTopRightRadius with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTransform)"); CompiledName("msTransform")>]
            member __.msTransform with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderBottomLeftRadius)"); CompiledName("borderBottomLeftRadius")>]
            member __.borderBottomLeftRadius with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textTransform)"); CompiledName("textTransform")>]
            member __.textTransform with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rubyPosition)"); CompiledName("rubyPosition")>]
            member __.rubyPosition with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeLinejoin)"); CompiledName("strokeLinejoin")>]
            member __.strokeLinejoin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clipPath)"); CompiledName("clipPath")>]
            member __.clipPath with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderRightColor)"); CompiledName("borderRightColor")>]
            member __.borderRightColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontFamily)"); CompiledName("fontFamily")>]
            member __.fontFamily with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear)"); CompiledName("clear")>]
            member __.clear with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.content)"); CompiledName("content")>]
            member __.content with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundClip)"); CompiledName("backgroundClip")>]
            member __.backgroundClip with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marginBottom)"); CompiledName("marginBottom")>]
            member __.marginBottom with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.counterReset)"); CompiledName("counterReset")>]
            member __.counterReset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.outlineWidth)"); CompiledName("outlineWidth")>]
            member __.outlineWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marginRight)"); CompiledName("marginRight")>]
            member __.marginRight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.paddingLeft)"); CompiledName("paddingLeft")>]
            member __.paddingLeft with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderBottom)"); CompiledName("borderBottom")>]
            member __.borderBottom with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.wordBreak)"); CompiledName("wordBreak")>]
            member __.wordBreak with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marginTop)"); CompiledName("marginTop")>]
            member __.marginTop with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.top)"); CompiledName("top1")>]
            member __.top with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontWeight)"); CompiledName("fontWeight")>]
            member __.fontWeight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderRight)"); CompiledName("borderRight")>]
            member __.borderRight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width")>]
            member __.width with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.kerning)"); CompiledName("kerning")>]
            member __.kerning with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pageBreakAfter)"); CompiledName("pageBreakAfter")>]
            member __.pageBreakAfter with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderBottomStyle)"); CompiledName("borderBottomStyle")>]
            member __.borderBottomStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontStretch)"); CompiledName("fontStretch")>]
            member __.fontStretch with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.padding)"); CompiledName("padding")>]
            member __.padding with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeOpacity)"); CompiledName("strokeOpacity")>]
            member __.strokeOpacity with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.markerStart)"); CompiledName("markerStart")>]
            member __.markerStart with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bottom)"); CompiledName("bottom")>]
            member __.bottom with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderLeftWidth)"); CompiledName("borderLeftWidth")>]
            member __.borderLeftWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clipRule)"); CompiledName("clipRule")>]
            member __.clipRule with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundPosition)"); CompiledName("backgroundPosition")>]
            member __.backgroundPosition with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundColor)"); CompiledName("backgroundColor")>]
            member __.backgroundColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pageBreakInside)"); CompiledName("pageBreakInside")>]
            member __.pageBreakInside with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundOrigin)"); CompiledName("backgroundOrigin")>]
            member __.backgroundOrigin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeLinecap)"); CompiledName("strokeLinecap")>]
            member __.strokeLinecap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderTopWidth)"); CompiledName("borderTopWidth")>]
            member __.borderTopWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.outlineStyle)"); CompiledName("outlineStyle")>]
            member __.outlineStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderTop)"); CompiledName("borderTop")>]
            member __.borderTop with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.outlineColor)"); CompiledName("outlineColor")>]
            member __.outlineColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.paddingBottom)"); CompiledName("paddingBottom")>]
            member __.paddingBottom with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marginLeft)"); CompiledName("marginLeft")>]
            member __.marginLeft with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.font)"); CompiledName("font")>]
            member __.font with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.outline)"); CompiledName("outline")>]
            member __.outline with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.wordSpacing)"); CompiledName("wordSpacing")>]
            member __.wordSpacing with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maxHeight)"); CompiledName("maxHeight")>]
            member __.maxHeight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fillOpacity)"); CompiledName("fillOpacity")>]
            member __.fillOpacity with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.letterSpacing)"); CompiledName("letterSpacing")>]
            member __.letterSpacing with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderSpacing)"); CompiledName("borderSpacing")>]
            member __.borderSpacing with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundRepeat)"); CompiledName("backgroundRepeat")>]
            member __.backgroundRepeat with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderRadius)"); CompiledName("borderRadius")>]
            member __.borderRadius with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderWidth)"); CompiledName("borderWidth")>]
            member __.borderWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderBottomRightRadius)"); CompiledName("borderBottomRightRadius")>]
            member __.borderBottomRightRadius with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.whiteSpace)"); CompiledName("whiteSpace")>]
            member __.whiteSpace with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontStyle)"); CompiledName("fontStyle")>]
            member __.fontStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.minWidth)"); CompiledName("minWidth")>]
            member __.minWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stopColor)"); CompiledName("stopColor")>]
            member __.stopColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderTopLeftRadius)"); CompiledName("borderTopLeftRadius")>]
            member __.borderTopLeftRadius with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColor)"); CompiledName("borderColor")>]
            member __.borderColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marker)"); CompiledName("marker")>]
            member __.marker with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.glyphOrientationVertical)"); CompiledName("glyphOrientationVertical")>]
            member __.glyphOrientationVertical with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.markerMid)"); CompiledName("markerMid")>]
            member __.markerMid with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontVariant)"); CompiledName("fontVariant")>]
            member __.fontVariant with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.minHeight)"); CompiledName("minHeight")>]
            member __.minHeight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stroke)"); CompiledName("stroke")>]
            member __.stroke with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rubyOverhang)"); CompiledName("rubyOverhang")>]
            member __.rubyOverhang with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.overflowX)"); CompiledName("overflowX")>]
            member __.overflowX with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textAlign)"); CompiledName("textAlign")>]
            member __.textAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.margin)"); CompiledName("margin")>]
            member __.margin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationFillMode)"); CompiledName("animationFillMode")>]
            member __.animationFillMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.floodColor)"); CompiledName("floodColor")>]
            member __.floodColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationIterationCount)"); CompiledName("animationIterationCount")>]
            member __.animationIterationCount with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textShadow)"); CompiledName("textShadow")>]
            member __.textShadow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backfaceVisibility)"); CompiledName("backfaceVisibility")>]
            member __.backfaceVisibility with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationIterationCount)"); CompiledName("msAnimationIterationCount")>]
            member __.msAnimationIterationCount with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationDelay)"); CompiledName("animationDelay")>]
            member __.animationDelay with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationTimingFunction)"); CompiledName("animationTimingFunction")>]
            member __.animationTimingFunction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnWidth)"); CompiledName("columnWidth")>]
            member __.columnWidth with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollSnapX)"); CompiledName("msScrollSnapX")>]
            member __.msScrollSnapX with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnRuleColor)"); CompiledName("columnRuleColor")>]
            member __.columnRuleColor with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnRuleWidth)"); CompiledName("columnRuleWidth")>]
            member __.columnRuleWidth with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transitionDelay)"); CompiledName("transitionDelay")>]
            member __.transitionDelay with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transition)"); CompiledName("transition")>]
            member __.transition with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlowFrom)"); CompiledName("msFlowFrom")>]
            member __.msFlowFrom with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollSnapType)"); CompiledName("msScrollSnapType")>]
            member __.msScrollSnapType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZoomSnapType)"); CompiledName("msContentZoomSnapType")>]
            member __.msContentZoomSnapType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGridColumns)"); CompiledName("msGridColumns")>]
            member __.msGridColumns with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationName)"); CompiledName("msAnimationName")>]
            member __.msAnimationName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGridRowAlign)"); CompiledName("msGridRowAlign")>]
            member __.msGridRowAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZoomChaining)"); CompiledName("msContentZoomChaining")>]
            member __.msContentZoomChaining with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGridColumn)"); CompiledName("msGridColumn")>]
            member __.msGridColumn with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msHyphenateLimitZone)"); CompiledName("msHyphenateLimitZone")>]
            member __.msHyphenateLimitZone with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollRails)"); CompiledName("msScrollRails")>]
            member __.msScrollRails with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationDelay)"); CompiledName("msAnimationDelay")>]
            member __.msAnimationDelay with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.enableBackground)"); CompiledName("enableBackground")>]
            member __.enableBackground with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msWrapThrough)"); CompiledName("msWrapThrough")>]
            member __.msWrapThrough with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnRuleStyle)"); CompiledName("columnRuleStyle")>]
            member __.columnRuleStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimation)"); CompiledName("msAnimation")>]
            member __.msAnimation with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexFlow)"); CompiledName("msFlexFlow")>]
            member __.msFlexFlow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollSnapY)"); CompiledName("msScrollSnapY")>]
            member __.msScrollSnapY with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msHyphenateLimitLines)"); CompiledName("msHyphenateLimitLines")>]
            member __.msHyphenateLimitLines with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTouchAction)"); CompiledName("msTouchAction")>]
            member __.msTouchAction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollLimit)"); CompiledName("msScrollLimit")>]
            member __.msScrollLimit with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animation)"); CompiledName("animation")>]
            member __.animation with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transform)"); CompiledName("transform")>]
            member __.transform with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filter)"); CompiledName("filter1")>]
            member __.filter with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.colorInterpolationFilters)"); CompiledName("colorInterpolationFilters")>]
            member __.colorInterpolationFilters with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transitionTimingFunction)"); CompiledName("transitionTimingFunction")>]
            member __.transitionTimingFunction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msBackfaceVisibility)"); CompiledName("msBackfaceVisibility")>]
            member __.msBackfaceVisibility with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationPlayState)"); CompiledName("animationPlayState")>]
            member __.animationPlayState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transformOrigin)"); CompiledName("transformOrigin")>]
            member __.transformOrigin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollLimitYMin)"); CompiledName("msScrollLimitYMin")>]
            member __.msScrollLimitYMin with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFontFeatureSettings)"); CompiledName("msFontFeatureSettings")>]
            member __.msFontFeatureSettings with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZoomLimitMin)"); CompiledName("msContentZoomLimitMin")>]
            member __.msContentZoomLimitMin with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnGap)"); CompiledName("columnGap")>]
            member __.columnGap with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transitionProperty)"); CompiledName("transitionProperty")>]
            member __.transitionProperty with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationDuration)"); CompiledName("msAnimationDuration")>]
            member __.msAnimationDuration with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationFillMode)"); CompiledName("msAnimationFillMode")>]
            member __.msAnimationFillMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexDirection)"); CompiledName("msFlexDirection")>]
            member __.msFlexDirection with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTransitionDuration)"); CompiledName("msTransitionDuration")>]
            member __.msTransitionDuration with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontFeatureSettings)"); CompiledName("fontFeatureSettings")>]
            member __.fontFeatureSettings with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.breakBefore)"); CompiledName("breakBefore")>]
            member __.breakBefore with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexWrap)"); CompiledName("msFlexWrap")>]
            member __.msFlexWrap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.perspective)"); CompiledName("perspective")>]
            member __.perspective with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlowInto)"); CompiledName("msFlowInto")>]
            member __.msFlowInto with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTransformStyle)"); CompiledName("msTransformStyle")>]
            member __.msTransformStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollTranslation)"); CompiledName("msScrollTranslation")>]
            member __.msScrollTranslation with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTransitionProperty)"); CompiledName("msTransitionProperty")>]
            member __.msTransitionProperty with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msUserSelect)"); CompiledName("msUserSelect")>]
            member __.msUserSelect with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msOverflowStyle)"); CompiledName("msOverflowStyle")>]
            member __.msOverflowStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollSnapPointsY)"); CompiledName("msScrollSnapPointsY")>]
            member __.msScrollSnapPointsY with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationDirection)"); CompiledName("animationDirection")>]
            member __.animationDirection with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationDuration)"); CompiledName("animationDuration")>]
            member __.animationDuration with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlex)"); CompiledName("msFlex")>]
            member __.msFlex with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTransitionTimingFunction)"); CompiledName("msTransitionTimingFunction")>]
            member __.msTransitionTimingFunction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationName)"); CompiledName("animationName1")>]
            member __.animationName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnRule)"); CompiledName("columnRule")>]
            member __.columnRule with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGridColumnSpan)"); CompiledName("msGridColumnSpan")>]
            member __.msGridColumnSpan with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexNegative)"); CompiledName("msFlexNegative")>]
            member __.msFlexNegative with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnFill)"); CompiledName("columnFill")>]
            member __.columnFill with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGridRow)"); CompiledName("msGridRow")>]
            member __.msGridRow with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexOrder)"); CompiledName("msFlexOrder")>]
            member __.msFlexOrder with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexItemAlign)"); CompiledName("msFlexItemAlign")>]
            member __.msFlexItemAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexPositive)"); CompiledName("msFlexPositive")>]
            member __.msFlexPositive with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZoomLimitMax)"); CompiledName("msContentZoomLimitMax")>]
            member __.msContentZoomLimitMax with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollLimitYMax)"); CompiledName("msScrollLimitYMax")>]
            member __.msScrollLimitYMax with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGridColumnAlign)"); CompiledName("msGridColumnAlign")>]
            member __.msGridColumnAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.perspectiveOrigin)"); CompiledName("perspectiveOrigin")>]
            member __.perspectiveOrigin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lightingColor)"); CompiledName("lightingColor")>]
            member __.lightingColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columns)"); CompiledName("columns")>]
            member __.columns with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollChaining)"); CompiledName("msScrollChaining")>]
            member __.msScrollChaining with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msHyphenateLimitChars)"); CompiledName("msHyphenateLimitChars")>]
            member __.msHyphenateLimitChars with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTouchSelect)"); CompiledName("msTouchSelect")>]
            member __.msTouchSelect with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.floodOpacity)"); CompiledName("floodOpacity")>]
            member __.floodOpacity with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationDirection)"); CompiledName("msAnimationDirection")>]
            member __.msAnimationDirection with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationPlayState)"); CompiledName("msAnimationPlayState")>]
            member __.msAnimationPlayState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnSpan)"); CompiledName("columnSpan")>]
            member __.columnSpan with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZooming)"); CompiledName("msContentZooming")>]
            member __.msContentZooming with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPerspective)"); CompiledName("msPerspective")>]
            member __.msPerspective with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexPack)"); CompiledName("msFlexPack")>]
            member __.msFlexPack with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollSnapPointsX)"); CompiledName("msScrollSnapPointsX")>]
            member __.msScrollSnapPointsX with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZoomSnapPoints)"); CompiledName("msContentZoomSnapPoints")>]
            member __.msContentZoomSnapPoints with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGridRowSpan)"); CompiledName("msGridRowSpan")>]
            member __.msGridRowSpan with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZoomSnap)"); CompiledName("msContentZoomSnap")>]
            member __.msContentZoomSnap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollLimitXMin)"); CompiledName("msScrollLimitXMin")>]
            member __.msScrollLimitXMin with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.breakInside)"); CompiledName("breakInside")>]
            member __.breakInside with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msHighContrastAdjust)"); CompiledName("msHighContrastAdjust")>]
            member __.msHighContrastAdjust with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexLinePack)"); CompiledName("msFlexLinePack")>]
            member __.msFlexLinePack with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGridRows)"); CompiledName("msGridRows")>]
            member __.msGridRows with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transitionDuration)"); CompiledName("transitionDuration")>]
            member __.transitionDuration with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msHyphens)"); CompiledName("msHyphens")>]
            member __.msHyphens with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.breakAfter)"); CompiledName("breakAfter")>]
            member __.breakAfter with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTransition)"); CompiledName("msTransition")>]
            member __.msTransition with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPerspectiveOrigin)"); CompiledName("msPerspectiveOrigin")>]
            member __.msPerspectiveOrigin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZoomLimit)"); CompiledName("msContentZoomLimit")>]
            member __.msContentZoomLimit with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msScrollLimitXMax)"); CompiledName("msScrollLimitXMax")>]
            member __.msScrollLimitXMax with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexAlign)"); CompiledName("msFlexAlign")>]
            member __.msFlexAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msWrapMargin)"); CompiledName("msWrapMargin")>]
            member __.msWrapMargin with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.columnCount)"); CompiledName("columnCount")>]
            member __.columnCount with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationTimingFunction)"); CompiledName("msAnimationTimingFunction")>]
            member __.msAnimationTimingFunction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTransitionDelay)"); CompiledName("msTransitionDelay")>]
            member __.msTransitionDelay with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transformStyle)"); CompiledName("transformStyle")>]
            member __.transformStyle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msWrapFlow)"); CompiledName("msWrapFlow")>]
            member __.msWrapFlow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFlexPreferredSize)"); CompiledName("msFlexPreferredSize")>]
            member __.msFlexPreferredSize with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alignItems)"); CompiledName("alignItems")>]
            member __.alignItems with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderImageSource)"); CompiledName("borderImageSource")>]
            member __.borderImageSource with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.flexBasis)"); CompiledName("flexBasis")>]
            member __.flexBasis with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderImageWidth)"); CompiledName("borderImageWidth")>]
            member __.borderImageWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderImageRepeat)"); CompiledName("borderImageRepeat")>]
            member __.borderImageRepeat with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.order)"); CompiledName("order")>]
            member __.order with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.flex)"); CompiledName("flex")>]
            member __.flex with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alignContent)"); CompiledName("alignContent")>]
            member __.alignContent with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msImeAlign)"); CompiledName("msImeAlign")>]
            member __.msImeAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.flexShrink)"); CompiledName("flexShrink")>]
            member __.flexShrink with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.flexGrow)"); CompiledName("flexGrow")>]
            member __.flexGrow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderImageSlice)"); CompiledName("borderImageSlice")>]
            member __.borderImageSlice with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.flexWrap)"); CompiledName("flexWrap")>]
            member __.flexWrap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderImageOutset)"); CompiledName("borderImageOutset")>]
            member __.borderImageOutset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.flexDirection)"); CompiledName("flexDirection")>]
            member __.flexDirection with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.touchAction)"); CompiledName("touchAction")>]
            member __.touchAction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.flexFlow)"); CompiledName("flexFlow")>]
            member __.flexFlow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderImage)"); CompiledName("borderImage")>]
            member __.borderImage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.justifyContent)"); CompiledName("justifyContent")>]
            member __.justifyContent with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alignSelf)"); CompiledName("alignSelf")>]
            member __.alignSelf with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msTextCombineHorizontal)"); CompiledName("msTextCombineHorizontal")>]
            member __.msTextCombineHorizontal with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getPropertyPriority({args}))"); CompiledName("getPropertyPriority")>]
            member __.getPropertyPriority(propertyName : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.getPropertyValue({args}))"); CompiledName("getPropertyValue")>]
            member __.getPropertyValue(propertyName : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeProperty({args}))"); CompiledName("removeProperty")>]
            member __.removeProperty(propertyName : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item4")>]
            member __.item(index : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item5")>]
            member __.Item with get(i : int) : string = failwith "never" and set (i : int) (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setProperty({args}))"); CompiledName("setProperty")>]
            member __.setProperty(propertyName : string, value : string, ?priority : string) : unit = failwith "never"




    type CSSStyleRule with 

            [<FunScript.JSEmitInline("({0}.selectorText)"); CompiledName("selectorText1")>]
            member __.selectorText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.style)"); CompiledName("style3")>]
            member __.style with get() : MSStyleCSSProperties = failwith "never" and set (v : MSStyleCSSProperties) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readOnly)"); CompiledName("readOnly")>]
            member __.readOnly with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type CSSStyleSheet with 

            [<FunScript.JSEmitInline("({0}.owningElement)"); CompiledName("owningElement")>]
            member __.owningElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.imports)"); CompiledName("imports")>]
            member __.imports with get() : StyleSheetList = failwith "never" and set (v : StyleSheetList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isAlternate)"); CompiledName("isAlternate")>]
            member __.isAlternate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rules)"); CompiledName("rules")>]
            member __.rules with get() : MSCSSRuleList = failwith "never" and set (v : MSCSSRuleList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isPrefAlternate)"); CompiledName("isPrefAlternate")>]
            member __.isPrefAlternate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readOnly)"); CompiledName("readOnly1")>]
            member __.readOnly with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cssText)"); CompiledName("cssText2")>]
            member __.cssText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ownerRule)"); CompiledName("ownerRule")>]
            member __.ownerRule with get() : CSSRule = failwith "never" and set (v : CSSRule) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href1")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cssRules)"); CompiledName("cssRules2")>]
            member __.cssRules with get() : CSSRuleList = failwith "never" and set (v : CSSRuleList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.id)"); CompiledName("id1")>]
            member __.id with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pages)"); CompiledName("pages")>]
            member __.pages with get() : StyleSheetPageList = failwith "never" and set (v : StyleSheetPageList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addImport({args}))"); CompiledName("addImport")>]
            member __.addImport(bstrURL : string, ?lIndex : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.addPageRule({args}))"); CompiledName("addPageRule")>]
            member __.addPageRule(bstrSelector : string, bstrStyle : string, ?lIndex : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertRule({args}))"); CompiledName("insertRule1")>]
            member __.insertRule(rule : string, ?index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeRule({args}))"); CompiledName("removeRule")>]
            member __.removeRule(lIndex : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteRule({args}))"); CompiledName("deleteRule2")>]
            member __.deleteRule(?index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addRule({args}))"); CompiledName("addRule")>]
            member __.addRule(bstrSelector : string, ?bstrStyle : string, ?lIndex : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeImport({args}))"); CompiledName("removeImport")>]
            member __.removeImport(lIndex : float) : unit = failwith "never"




    type CanvasGradient with 

            [<FunScript.JSEmitInline("({0}.addColorStop({args}))"); CompiledName("addColorStop")>]
            member __.addColorStop(offset : float, color : string) : unit = failwith "never"




    type CanvasRenderingContext2D with 

            [<FunScript.JSEmitInline("({0}.miterLimit)"); CompiledName("miterLimit")>]
            member __.miterLimit with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.font)"); CompiledName("font1")>]
            member __.font with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.globalCompositeOperation)"); CompiledName("globalCompositeOperation")>]
            member __.globalCompositeOperation with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFillRule)"); CompiledName("msFillRule")>]
            member __.msFillRule with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineCap)"); CompiledName("lineCap")>]
            member __.lineCap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msImageSmoothingEnabled)"); CompiledName("msImageSmoothingEnabled")>]
            member __.msImageSmoothingEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineDashOffset)"); CompiledName("lineDashOffset")>]
            member __.lineDashOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shadowColor)"); CompiledName("shadowColor")>]
            member __.shadowColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineJoin)"); CompiledName("lineJoin")>]
            member __.lineJoin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shadowOffsetX)"); CompiledName("shadowOffsetX")>]
            member __.shadowOffsetX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineWidth)"); CompiledName("lineWidth")>]
            member __.lineWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.canvas)"); CompiledName("canvas")>]
            member __.canvas with get() : HTMLCanvasElement = failwith "never" and set (v : HTMLCanvasElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeStyle)"); CompiledName("strokeStyle")>]
            member __.strokeStyle with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.globalAlpha)"); CompiledName("globalAlpha")>]
            member __.globalAlpha with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shadowOffsetY)"); CompiledName("shadowOffsetY")>]
            member __.shadowOffsetY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fillStyle)"); CompiledName("fillStyle")>]
            member __.fillStyle with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shadowBlur)"); CompiledName("shadowBlur")>]
            member __.shadowBlur with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textAlign)"); CompiledName("textAlign1")>]
            member __.textAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textBaseline)"); CompiledName("textBaseline")>]
            member __.textBaseline with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.restore())"); CompiledName("restore")>]
            member __.restore() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setTransform({args}))"); CompiledName("setTransform")>]
            member __.setTransform(m11 : float, m12 : float, m21 : float, m22 : float, dx : float, dy : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.save())"); CompiledName("save")>]
            member __.save() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.arc({args}))"); CompiledName("arc")>]
            member __.arc(x : float, y : float, radius : float, startAngle : float, endAngle : float, ?anticlockwise : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.measureText({args}))"); CompiledName("measureText")>]
            member __.measureText(text : string) : TextMetrics = failwith "never"
            [<FunScript.JSEmitInline("({0}.isPointInPath({args}))"); CompiledName("isPointInPath")>]
            member __.isPointInPath(x : float, y : float, ?fillRule : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.quadraticCurveTo({args}))"); CompiledName("quadraticCurveTo")>]
            member __.quadraticCurveTo(cpx : float, cpy : float, x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.putImageData({args}))"); CompiledName("putImageData")>]
            member __.putImageData(imagedata : ImageData, dx : float, dy : float, ?dirtyX : float, ?dirtyY : float, ?dirtyWidth : float, ?dirtyHeight : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotate({args}))"); CompiledName("rotate")>]
            member __.rotate(angle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fillText({args}))"); CompiledName("fillText")>]
            member __.fillText(text : string, x : float, y : float, ?maxWidth : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.translate({args}))"); CompiledName("translate")>]
            member __.translate(x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scale({args}))"); CompiledName("scale")>]
            member __.scale(x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createRadialGradient({args}))"); CompiledName("createRadialGradient")>]
            member __.createRadialGradient(x0 : float, y0 : float, r0 : float, x1 : float, y1 : float, r1 : float) : CanvasGradient = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineTo({args}))"); CompiledName("lineTo")>]
            member __.lineTo(x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getLineDash())"); CompiledName("getLineDash")>]
            member __.getLineDash() : array<float> = failwith "never"
            [<FunScript.JSEmitInline("({0}.fill({args}))"); CompiledName("fill1")>]
            member __.fill(?fillRule : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createImageData({args}))"); CompiledName("createImageData")>]
            member __.createImageData(imageDataOrSw : obj, ?sh : float) : ImageData = failwith "never"
            [<FunScript.JSEmitInline("({0}.createPattern({args}))"); CompiledName("createPattern")>]
            member __.createPattern(image : HTMLElement, repetition : string) : CanvasPattern = failwith "never"
            [<FunScript.JSEmitInline("({0}.closePath())"); CompiledName("closePath")>]
            member __.closePath() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rect({args}))"); CompiledName("rect")>]
            member __.rect(x : float, y : float, w : float, h : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clip({args}))"); CompiledName("clip1")>]
            member __.clip(?fillRule : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearRect({args}))"); CompiledName("clearRect")>]
            member __.clearRect(x : float, y : float, w : float, h : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveTo({args}))"); CompiledName("moveTo1")>]
            member __.moveTo(x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getImageData({args}))"); CompiledName("getImageData")>]
            member __.getImageData(sx : float, sy : float, sw : float, sh : float) : ImageData = failwith "never"
            [<FunScript.JSEmitInline("({0}.fillRect({args}))"); CompiledName("fillRect")>]
            member __.fillRect(x : float, y : float, w : float, h : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bezierCurveTo({args}))"); CompiledName("bezierCurveTo")>]
            member __.bezierCurveTo(cp1x : float, cp1y : float, cp2x : float, cp2y : float, x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.drawImage({args}))"); CompiledName("drawImage")>]
            member __.drawImage(image : HTMLElement, offsetX : float, offsetY : float, ?width : float, ?height : float, ?canvasOffsetX : float, ?canvasOffsetY : float, ?canvasImageWidth : float, ?canvasImageHeight : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transform({args}))"); CompiledName("transform1")>]
            member __.transform(m11 : float, m12 : float, m21 : float, m22 : float, dx : float, dy : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stroke())"); CompiledName("stroke1")>]
            member __.stroke() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeRect({args}))"); CompiledName("strokeRect")>]
            member __.strokeRect(x : float, y : float, w : float, h : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setLineDash({args}))"); CompiledName("setLineDash")>]
            member __.setLineDash(segments : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.strokeText({args}))"); CompiledName("strokeText")>]
            member __.strokeText(text : string, x : float, y : float, ?maxWidth : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.beginPath())"); CompiledName("beginPath")>]
            member __.beginPath() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.arcTo({args}))"); CompiledName("arcTo")>]
            member __.arcTo(x1 : float, y1 : float, x2 : float, y2 : float, radius : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createLinearGradient({args}))"); CompiledName("createLinearGradient")>]
            member __.createLinearGradient(x0 : float, y0 : float, x1 : float, y1 : float) : CanvasGradient = failwith "never"




    type CharacterData with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length7")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data")>]
            member __.data with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteData({args}))"); CompiledName("deleteData")>]
            member __.deleteData(offset : float, count : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceData({args}))"); CompiledName("replaceData")>]
            member __.replaceData(offset : float, count : float, arg : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendData({args}))"); CompiledName("appendData")>]
            member __.appendData(arg : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertData({args}))"); CompiledName("insertData")>]
            member __.insertData(offset : float, arg : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.substringData({args}))"); CompiledName("substringData")>]
            member __.substringData(offset : float, count : float) : string = failwith "never"




    type ClientRect with 

            [<FunScript.JSEmitInline("({0}.left)"); CompiledName("left1")>]
            member __.left with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width1")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.right)"); CompiledName("right1")>]
            member __.right with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.top)"); CompiledName("top2")>]
            member __.top with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bottom)"); CompiledName("bottom1")>]
            member __.bottom with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height1")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type ClientRectList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length8")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item5")>]
            member __.item(index : float) : ClientRect = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item6")>]
            member __.Item with get(i : int) : ClientRect = failwith "never" and set (i : int) (v : ClientRect) : unit = failwith "never"




    type CloseEvent with 

            [<FunScript.JSEmitInline("({0}.wasClean)"); CompiledName("wasClean")>]
            member __.wasClean with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.reason)"); CompiledName("reason")>]
            member __.reason with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code")>]
            member __.code with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initCloseEvent({args}))"); CompiledName("initCloseEvent")>]
            member __.initCloseEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, wasCleanArg : bool, codeArg : float, reasonArg : string) : unit = failwith "never"




    type Collator with 

            [<FunScript.JSEmitInline("({0}.compare({args}))"); CompiledName("compare")>]
            member __.compare(x : string, y : string) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.resolvedOptions())"); CompiledName("resolvedOptions")>]
            member __.resolvedOptions() : ResolvedCollatorOptions = failwith "never"




    type CollatorOptions with 

            [<FunScript.JSEmitInline("({0}.usage)"); CompiledName("usage")>]
            member __.usage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.localeMatcher)"); CompiledName("localeMatcher")>]
            member __.localeMatcher with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.numeric)"); CompiledName("numeric")>]
            member __.numeric with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.caseFirst)"); CompiledName("caseFirst")>]
            member __.caseFirst with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sensitivity)"); CompiledName("sensitivity")>]
            member __.sensitivity with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ignorePunctuation)"); CompiledName("ignorePunctuation")>]
            member __.ignorePunctuation with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type Comment with 

            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text")>]
            member __.text with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type CompositionEvent with 

            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data1")>]
            member __.data with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.locale)"); CompiledName("locale")>]
            member __.locale with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initCompositionEvent({args}))"); CompiledName("initCompositionEvent")>]
            member __.initCompositionEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, dataArg : string, locale : string) : unit = failwith "never"




    type ConfirmSiteSpecificExceptionsInformation with 

            [<FunScript.JSEmitInline("({0}.arrayOfDomainStrings)"); CompiledName("arrayOfDomainStrings")>]
            member __.arrayOfDomainStrings with get() : array<string> = failwith "never" and set (v : array<string>) : unit = failwith "never"




    type Console with 

            [<FunScript.JSEmitInline("({0}.info({args}))"); CompiledName("info")>]
            member __.info(?message : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.info({args}))"); CompiledName("info1")>]
            member __.info(message : obj, [<System.ParamArray>] optionalParams : array<obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.warn({args}))"); CompiledName("warn")>]
            member __.warn(?message : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.warn({args}))"); CompiledName("warn1")>]
            member __.warn(message : obj, [<System.ParamArray>] optionalParams : array<obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.error({args}))"); CompiledName("error")>]
            member __.error(?message : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.error({args}))"); CompiledName("error1")>]
            member __.error(message : obj, [<System.ParamArray>] optionalParams : array<obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.log({args}))"); CompiledName("log")>]
            member __.log(?message : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.log({args}))"); CompiledName("log1")>]
            member __.log(message : obj, [<System.ParamArray>] optionalParams : array<obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.profile({args}))"); CompiledName("profile")>]
            member __.profile(?reportName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.assert({args}))"); CompiledName("_assert")>]
            member __._assert(?test : bool, ?message : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.assert({args}))"); CompiledName("_assert1")>]
            member __._assert(test : bool, message : string, [<System.ParamArray>] optionalParams : array<obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msIsIndependentlyComposed({args}))"); CompiledName("msIsIndependentlyComposed")>]
            member __.msIsIndependentlyComposed(element : Element) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear1")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dir({args}))"); CompiledName("dir")>]
            member __.dir(?value : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dir({args}))"); CompiledName("dir1")>]
            member __.dir(value : obj, [<System.ParamArray>] optionalParams : array<obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.profileEnd())"); CompiledName("profileEnd")>]
            member __.profileEnd() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.count({args}))"); CompiledName("count")>]
            member __.count(?countTitle : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.groupEnd())"); CompiledName("groupEnd")>]
            member __.groupEnd() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.time({args}))"); CompiledName("time")>]
            member __.time(?timerName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.timeEnd({args}))"); CompiledName("timeEnd")>]
            member __.timeEnd(?timerName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.trace())"); CompiledName("trace")>]
            member __.trace() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.group({args}))"); CompiledName("group")>]
            member __.group(?groupTitle : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dirxml({args}))"); CompiledName("dirxml")>]
            member __.dirxml(value : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.debug({args}))"); CompiledName("debug")>]
            member __.debug(?message : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.debug({args}))"); CompiledName("debug1")>]
            member __.debug(message : string, [<System.ParamArray>] optionalParams : array<obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.groupCollapsed({args}))"); CompiledName("groupCollapsed")>]
            member __.groupCollapsed(?groupTitle : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.select({args}))"); CompiledName("select")>]
            member __.select(element : Element) : unit = failwith "never"




    type ControlRangeCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length9")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandValue({args}))"); CompiledName("queryCommandValue")>]
            member __.queryCommandValue(cmdID : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.remove({args}))"); CompiledName("remove")>]
            member __.remove(index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.add({args}))"); CompiledName("add")>]
            member __.add(item : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandIndeterm({args}))"); CompiledName("queryCommandIndeterm")>]
            member __.queryCommandIndeterm(cmdID : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollIntoView({args}))"); CompiledName("scrollIntoView")>]
            member __.scrollIntoView(?varargStart : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item6")>]
            member __.item(index : float) : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item7")>]
            member __.Item with get(i : int) : Element = failwith "never" and set (i : int) (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.execCommand({args}))"); CompiledName("execCommand")>]
            member __.execCommand(cmdID : string, ?showUI : bool, ?value : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.addElement({args}))"); CompiledName("addElement")>]
            member __.addElement(item : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandState({args}))"); CompiledName("queryCommandState")>]
            member __.queryCommandState(cmdID : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandSupported({args}))"); CompiledName("queryCommandSupported")>]
            member __.queryCommandSupported(cmdID : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandEnabled({args}))"); CompiledName("queryCommandEnabled")>]
            member __.queryCommandEnabled(cmdID : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandText({args}))"); CompiledName("queryCommandText")>]
            member __.queryCommandText(cmdID : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.select())"); CompiledName("select1")>]
            member __.select() : unit = failwith "never"




    type Coordinates with 

            [<FunScript.JSEmitInline("({0}.altitudeAccuracy)"); CompiledName("altitudeAccuracy")>]
            member __.altitudeAccuracy with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.longitude)"); CompiledName("longitude")>]
            member __.longitude with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.latitude)"); CompiledName("latitude")>]
            member __.latitude with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.speed)"); CompiledName("speed")>]
            member __.speed with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.heading)"); CompiledName("heading")>]
            member __.heading with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.altitude)"); CompiledName("altitude")>]
            member __.altitude with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.accuracy)"); CompiledName("accuracy")>]
            member __.accuracy with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type Crypto with 

            [<FunScript.JSEmitInline("({0}.subtle)"); CompiledName("subtle")>]
            member __.subtle with get() : SubtleCrypto = failwith "never" and set (v : SubtleCrypto) : unit = failwith "never"




    type CryptoOperation with 

            [<FunScript.JSEmitInline("({0}.algorithm)"); CompiledName("algorithm")>]
            member __.algorithm with get() : Algorithm = failwith "never" and set (v : Algorithm) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncomplete)"); CompiledName("oncomplete")>]
            member __.oncomplete with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror3")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress2")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort1")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.key)"); CompiledName("key")>]
            member __.key with get() : Key = failwith "never" and set (v : Key) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.result)"); CompiledName("result")>]
            member __.result with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abort())"); CompiledName("abort1")>]
            member __.abort() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.finish())"); CompiledName("finish")>]
            member __.finish() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.process({args}))"); CompiledName("_process")>]
            member __._process(buffer : ArrayBufferView) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"complete\", {args})"); CompiledName("addEventListener110")>]
            member __.addEventListener_complete(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener111")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener112")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener113")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener114")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type CustomEvent with 

            [<FunScript.JSEmitInline("({0}.detail)"); CompiledName("detail")>]
            member __.detail with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initCustomEvent({args}))"); CompiledName("initCustomEvent")>]
            member __.initCustomEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, detailArg : obj) : unit = failwith "never"




    type DOMError with 

            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name4")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString2")>]
            member __.toString() : string = failwith "never"




    type DOMException with 

            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code1")>]
            member __.code with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.message)"); CompiledName("message")>]
            member __.message with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name5")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString3")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIERARCHY_REQUEST_ERR)"); CompiledName("HIERARCHY_REQUEST_ERR1")>]
            member __.HIERARCHY_REQUEST_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NO_MODIFICATION_ALLOWED_ERR)"); CompiledName("NO_MODIFICATION_ALLOWED_ERR1")>]
            member __.NO_MODIFICATION_ALLOWED_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_MODIFICATION_ERR)"); CompiledName("INVALID_MODIFICATION_ERR1")>]
            member __.INVALID_MODIFICATION_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NAMESPACE_ERR)"); CompiledName("NAMESPACE_ERR1")>]
            member __.NAMESPACE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_CHARACTER_ERR)"); CompiledName("INVALID_CHARACTER_ERR1")>]
            member __.INVALID_CHARACTER_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_MISMATCH_ERR)"); CompiledName("TYPE_MISMATCH_ERR1")>]
            member __.TYPE_MISMATCH_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ABORT_ERR)"); CompiledName("ABORT_ERR1")>]
            member __.ABORT_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_STATE_ERR)"); CompiledName("INVALID_STATE_ERR1")>]
            member __.INVALID_STATE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SECURITY_ERR)"); CompiledName("SECURITY_ERR1")>]
            member __.SECURITY_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_ERR)"); CompiledName("NETWORK_ERR1")>]
            member __.NETWORK_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.WRONG_DOCUMENT_ERR)"); CompiledName("WRONG_DOCUMENT_ERR1")>]
            member __.WRONG_DOCUMENT_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.QUOTA_EXCEEDED_ERR)"); CompiledName("QUOTA_EXCEEDED_ERR1")>]
            member __.QUOTA_EXCEEDED_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INDEX_SIZE_ERR)"); CompiledName("INDEX_SIZE_ERR1")>]
            member __.INDEX_SIZE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOMSTRING_SIZE_ERR)"); CompiledName("DOMSTRING_SIZE_ERR1")>]
            member __.DOMSTRING_SIZE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SYNTAX_ERR)"); CompiledName("SYNTAX_ERR1")>]
            member __.SYNTAX_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SERIALIZE_ERR)"); CompiledName("SERIALIZE_ERR1")>]
            member __.SERIALIZE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VALIDATION_ERR)"); CompiledName("VALIDATION_ERR1")>]
            member __.VALIDATION_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NOT_FOUND_ERR)"); CompiledName("NOT_FOUND_ERR1")>]
            member __.NOT_FOUND_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.URL_MISMATCH_ERR)"); CompiledName("URL_MISMATCH_ERR1")>]
            member __.URL_MISMATCH_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PARSE_ERR)"); CompiledName("PARSE_ERR1")>]
            member __.PARSE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NO_DATA_ALLOWED_ERR)"); CompiledName("NO_DATA_ALLOWED_ERR1")>]
            member __.NO_DATA_ALLOWED_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NOT_SUPPORTED_ERR)"); CompiledName("NOT_SUPPORTED_ERR1")>]
            member __.NOT_SUPPORTED_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_ACCESS_ERR)"); CompiledName("INVALID_ACCESS_ERR1")>]
            member __.INVALID_ACCESS_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INUSE_ATTRIBUTE_ERR)"); CompiledName("INUSE_ATTRIBUTE_ERR1")>]
            member __.INUSE_ATTRIBUTE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_NODE_TYPE_ERR)"); CompiledName("INVALID_NODE_TYPE_ERR2")>]
            member __.INVALID_NODE_TYPE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DATA_CLONE_ERR)"); CompiledName("DATA_CLONE_ERR1")>]
            member __.DATA_CLONE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TIMEOUT_ERR)"); CompiledName("TIMEOUT_ERR1")>]
            member __.TIMEOUT_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type DOMImplementation with 

            [<FunScript.JSEmitInline("({0}.createDocumentType({args}))"); CompiledName("createDocumentType")>]
            member __.createDocumentType(qualifiedName : string, publicId : string, systemId : string) : DocumentType = failwith "never"
            [<FunScript.JSEmitInline("({0}.createDocument({args}))"); CompiledName("createDocument")>]
            member __.createDocument(namespaceURI : string, qualifiedName : string, doctype : DocumentType) : Document = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasFeature({args}))"); CompiledName("hasFeature")>]
            member __.hasFeature(feature : string, ?version : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.createHTMLDocument({args}))"); CompiledName("createHTMLDocument")>]
            member __.createHTMLDocument(title : string) : Document = failwith "never"




    type DOML2DeprecatedAlignmentStyle with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type DOML2DeprecatedBackgroundColorStyle with 

            [<FunScript.JSEmitInline("({0}.bgColor)"); CompiledName("bgColor")>]
            member __.bgColor with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"




    type DOML2DeprecatedBackgroundStyle with 

            [<FunScript.JSEmitInline("({0}.background)"); CompiledName("background1")>]
            member __.background with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type DOML2DeprecatedBorderStyle with 

            [<FunScript.JSEmitInline("({0}.border)"); CompiledName("border1")>]
            member __.border with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type DOML2DeprecatedColorProperty with 

            [<FunScript.JSEmitInline("({0}.color)"); CompiledName("color1")>]
            member __.color with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type DOML2DeprecatedListNumberingAndBulletStyle with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type3")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type DOML2DeprecatedListSpaceReduction with 

            [<FunScript.JSEmitInline("({0}.compact)"); CompiledName("compact")>]
            member __.compact with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type DOML2DeprecatedMarginStyle with 

            [<FunScript.JSEmitInline("({0}.vspace)"); CompiledName("vspace")>]
            member __.vspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hspace)"); CompiledName("hspace")>]
            member __.hspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type DOML2DeprecatedSizeProperty with 

            [<FunScript.JSEmitInline("({0}.size)"); CompiledName("size1")>]
            member __.size with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type DOML2DeprecatedTextFlowControl with 

            [<FunScript.JSEmitInline("({0}.clear)"); CompiledName("clear2")>]
            member __.clear with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type DOMParser with 

            [<FunScript.JSEmitInline("({0}.parseFromString({args}))"); CompiledName("parseFromString")>]
            member __.parseFromString(source : string, mimeType : string) : Document = failwith "never"




    type DOMSettableTokenList with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value1")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type DOMStringList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length10")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contains({args}))"); CompiledName("contains")>]
            member __.contains(str : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item7")>]
            member __.item(index : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item8")>]
            member __.Item with get(i : int) : string = failwith "never" and set (i : int) (v : string) : unit = failwith "never"




    type DOMTokenList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length11")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contains({args}))"); CompiledName("contains1")>]
            member __.contains(token : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.remove({args}))"); CompiledName("remove1")>]
            member __.remove(token : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toggle({args}))"); CompiledName("toggle")>]
            member __.toggle(token : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.add({args}))"); CompiledName("add1")>]
            member __.add(token : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item8")>]
            member __.item(index : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item9")>]
            member __.Item with get(i : int) : string = failwith "never" and set (i : int) (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString4")>]
            member __.toString() : string = failwith "never"




    type DataTransfer with 

            [<FunScript.JSEmitInline("({0}.effectAllowed)"); CompiledName("effectAllowed")>]
            member __.effectAllowed with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dropEffect)"); CompiledName("dropEffect")>]
            member __.dropEffect with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.types)"); CompiledName("types")>]
            member __.types with get() : DOMStringList = failwith "never" and set (v : DOMStringList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.files)"); CompiledName("files")>]
            member __.files with get() : FileList = failwith "never" and set (v : FileList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearData({args}))"); CompiledName("clearData")>]
            member __.clearData(?format : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.setData({args}))"); CompiledName("setData")>]
            member __.setData(format : string, data : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.getData({args}))"); CompiledName("getData")>]
            member __.getData(format : string) : string = failwith "never"




    type DataView with 

            [<FunScript.JSEmitInline("({0}.getInt8({args}))"); CompiledName("getInt8")>]
            member __.getInt8(byteOffset : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUint8({args}))"); CompiledName("getUint8")>]
            member __.getUint8(byteOffset : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getInt16({args}))"); CompiledName("getInt16")>]
            member __.getInt16(byteOffset : float, ?littleEndian : bool) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUint16({args}))"); CompiledName("getUint16")>]
            member __.getUint16(byteOffset : float, ?littleEndian : bool) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getInt32({args}))"); CompiledName("getInt32")>]
            member __.getInt32(byteOffset : float, ?littleEndian : bool) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUint32({args}))"); CompiledName("getUint32")>]
            member __.getUint32(byteOffset : float, ?littleEndian : bool) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getFloat32({args}))"); CompiledName("getFloat32")>]
            member __.getFloat32(byteOffset : float, ?littleEndian : bool) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getFloat64({args}))"); CompiledName("getFloat64")>]
            member __.getFloat64(byteOffset : float, ?littleEndian : bool) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setInt8({args}))"); CompiledName("setInt8")>]
            member __.setInt8(byteOffset : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUint8({args}))"); CompiledName("setUint8")>]
            member __.setUint8(byteOffset : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setInt16({args}))"); CompiledName("setInt16")>]
            member __.setInt16(byteOffset : float, value : float, ?littleEndian : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUint16({args}))"); CompiledName("setUint16")>]
            member __.setUint16(byteOffset : float, value : float, ?littleEndian : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setInt32({args}))"); CompiledName("setInt32")>]
            member __.setInt32(byteOffset : float, value : float, ?littleEndian : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUint32({args}))"); CompiledName("setUint32")>]
            member __.setUint32(byteOffset : float, value : float, ?littleEndian : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setFloat32({args}))"); CompiledName("setFloat32")>]
            member __.setFloat32(byteOffset : float, value : float, ?littleEndian : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setFloat64({args}))"); CompiledName("setFloat64")>]
            member __.setFloat64(byteOffset : float, value : float, ?littleEndian : bool) : unit = failwith "never"




    type Date with 

            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString5")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toDateString())"); CompiledName("toDateString")>]
            member __.toDateString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toTimeString())"); CompiledName("toTimeString")>]
            member __.toTimeString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleString())"); CompiledName("toLocaleString1")>]
            member __.toLocaleString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleDateString())"); CompiledName("toLocaleDateString")>]
            member __.toLocaleDateString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleTimeString())"); CompiledName("toLocaleTimeString")>]
            member __.toLocaleTimeString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.valueOf())"); CompiledName("valueOf")>]
            member __.valueOf() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getTime())"); CompiledName("getTime")>]
            member __.getTime() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getFullYear())"); CompiledName("getFullYear")>]
            member __.getFullYear() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUTCFullYear())"); CompiledName("getUTCFullYear")>]
            member __.getUTCFullYear() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getMonth())"); CompiledName("getMonth")>]
            member __.getMonth() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUTCMonth())"); CompiledName("getUTCMonth")>]
            member __.getUTCMonth() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getDate())"); CompiledName("getDate")>]
            member __.getDate() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUTCDate())"); CompiledName("getUTCDate")>]
            member __.getUTCDate() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getDay())"); CompiledName("getDay")>]
            member __.getDay() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUTCDay())"); CompiledName("getUTCDay")>]
            member __.getUTCDay() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getHours())"); CompiledName("getHours")>]
            member __.getHours() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUTCHours())"); CompiledName("getUTCHours")>]
            member __.getUTCHours() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getMinutes())"); CompiledName("getMinutes")>]
            member __.getMinutes() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUTCMinutes())"); CompiledName("getUTCMinutes")>]
            member __.getUTCMinutes() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getSeconds())"); CompiledName("getSeconds")>]
            member __.getSeconds() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUTCSeconds())"); CompiledName("getUTCSeconds")>]
            member __.getUTCSeconds() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getMilliseconds())"); CompiledName("getMilliseconds")>]
            member __.getMilliseconds() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUTCMilliseconds())"); CompiledName("getUTCMilliseconds")>]
            member __.getUTCMilliseconds() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getTimezoneOffset())"); CompiledName("getTimezoneOffset")>]
            member __.getTimezoneOffset() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setTime({args}))"); CompiledName("setTime")>]
            member __.setTime(time : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setMilliseconds({args}))"); CompiledName("setMilliseconds")>]
            member __.setMilliseconds(ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUTCMilliseconds({args}))"); CompiledName("setUTCMilliseconds")>]
            member __.setUTCMilliseconds(ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setSeconds({args}))"); CompiledName("setSeconds")>]
            member __.setSeconds(sec : float, ?ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUTCSeconds({args}))"); CompiledName("setUTCSeconds")>]
            member __.setUTCSeconds(sec : float, ?ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setMinutes({args}))"); CompiledName("setMinutes")>]
            member __.setMinutes(min : float, ?sec : float, ?ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUTCMinutes({args}))"); CompiledName("setUTCMinutes")>]
            member __.setUTCMinutes(min : float, ?sec : float, ?ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setHours({args}))"); CompiledName("setHours")>]
            member __.setHours(hours : float, ?min : float, ?sec : float, ?ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUTCHours({args}))"); CompiledName("setUTCHours")>]
            member __.setUTCHours(hours : float, ?min : float, ?sec : float, ?ms : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setDate({args}))"); CompiledName("setDate")>]
            member __.setDate(date : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUTCDate({args}))"); CompiledName("setUTCDate")>]
            member __.setUTCDate(date : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setMonth({args}))"); CompiledName("setMonth")>]
            member __.setMonth(month : float, ?date : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUTCMonth({args}))"); CompiledName("setUTCMonth")>]
            member __.setUTCMonth(month : float, ?date : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setFullYear({args}))"); CompiledName("setFullYear")>]
            member __.setFullYear(year : float, ?month : float, ?date : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setUTCFullYear({args}))"); CompiledName("setUTCFullYear")>]
            member __.setUTCFullYear(year : float, ?month : float, ?date : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.toUTCString())"); CompiledName("toUTCString")>]
            member __.toUTCString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toISOString())"); CompiledName("toISOString")>]
            member __.toISOString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toJSON({args}))"); CompiledName("toJSON")>]
            member __.toJSON(?key : obj) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleString({args}))"); CompiledName("toLocaleString2")>]
            member __.toLocaleStringOverload2(?locales : array<string>, ?options : DateTimeFormatOptions) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleString({args}))"); CompiledName("toLocaleString3")>]
            member __.toLocaleStringOverload3(?locale : string, ?options : DateTimeFormatOptions) : string = failwith "never"




    type DateTimeFormat with 

            [<FunScript.JSEmitInline("({0}.format({args}))"); CompiledName("format")>]
            member __.format(date : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.resolvedOptions())"); CompiledName("resolvedOptions1")>]
            member __.resolvedOptions() : ResolvedDateTimeFormatOptions = failwith "never"




    type DateTimeFormatOptions with 

            [<FunScript.JSEmitInline("({0}.localeMatcher)"); CompiledName("localeMatcher1")>]
            member __.localeMatcher with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.weekday)"); CompiledName("weekday")>]
            member __.weekday with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.era)"); CompiledName("era")>]
            member __.era with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.year)"); CompiledName("year")>]
            member __.year with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.month)"); CompiledName("month")>]
            member __.month with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.day)"); CompiledName("day")>]
            member __.day with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hour)"); CompiledName("hour")>]
            member __.hour with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.minute)"); CompiledName("minute")>]
            member __.minute with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.second)"); CompiledName("second")>]
            member __.second with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.timeZoneName)"); CompiledName("timeZoneName")>]
            member __.timeZoneName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formatMatcher)"); CompiledName("formatMatcher")>]
            member __.formatMatcher with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hour12)"); CompiledName("hour12")>]
            member __.hour12 with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type DeviceAcceleration with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.z)"); CompiledName("z")>]
            member __.z with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type DeviceAccelerationDict with 

            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x1")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y1")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.z)"); CompiledName("z1")>]
            member __.z with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type DeviceMotionEvent with 

            [<FunScript.JSEmitInline("({0}.rotationRate)"); CompiledName("rotationRate")>]
            member __.rotationRate with get() : DeviceRotationRate = failwith "never" and set (v : DeviceRotationRate) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.acceleration)"); CompiledName("acceleration")>]
            member __.acceleration with get() : DeviceAcceleration = failwith "never" and set (v : DeviceAcceleration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.interval)"); CompiledName("interval")>]
            member __.interval with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.accelerationIncludingGravity)"); CompiledName("accelerationIncludingGravity")>]
            member __.accelerationIncludingGravity with get() : DeviceAcceleration = failwith "never" and set (v : DeviceAcceleration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initDeviceMotionEvent({args}))"); CompiledName("initDeviceMotionEvent")>]
            member __.initDeviceMotionEvent(_type : string, bubbles : bool, cancelable : bool, acceleration : DeviceAccelerationDict, accelerationIncludingGravity : DeviceAccelerationDict, rotationRate : DeviceRotationRateDict, interval : float) : unit = failwith "never"




    type DeviceOrientationEvent with 

            [<FunScript.JSEmitInline("({0}.gamma)"); CompiledName("gamma")>]
            member __.gamma with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alpha)"); CompiledName("alpha")>]
            member __.alpha with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.absolute)"); CompiledName("absolute")>]
            member __.absolute with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.beta)"); CompiledName("beta")>]
            member __.beta with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initDeviceOrientationEvent({args}))"); CompiledName("initDeviceOrientationEvent")>]
            member __.initDeviceOrientationEvent(_type : string, bubbles : bool, cancelable : bool, alpha : float, beta : float, gamma : float, absolute : bool) : unit = failwith "never"




    type DeviceRotationRate with 

            [<FunScript.JSEmitInline("({0}.gamma)"); CompiledName("gamma1")>]
            member __.gamma with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alpha)"); CompiledName("alpha1")>]
            member __.alpha with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.beta)"); CompiledName("beta1")>]
            member __.beta with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type DeviceRotationRateDict with 

            [<FunScript.JSEmitInline("({0}.alpha)"); CompiledName("alpha2")>]
            member __.alpha with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.beta)"); CompiledName("beta2")>]
            member __.beta with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.gamma)"); CompiledName("gamma2")>]
            member __.gamma with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type Document with 

            [<FunScript.JSEmitInline("({0}.documentElement)"); CompiledName("documentElement")>]
            member __.documentElement with get() : HTMLElement = failwith "never" and set (v : HTMLElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.compatible)"); CompiledName("compatible")>]
            member __.compatible with get() : MSCompatibleInfoCollection = failwith "never" and set (v : MSCompatibleInfoCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeydown)"); CompiledName("onkeydown1")>]
            member __.onkeydown with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeyup)"); CompiledName("onkeyup1")>]
            member __.onkeyup with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.implementation)"); CompiledName("implementation")>]
            member __.implementation with get() : DOMImplementation = failwith "never" and set (v : DOMImplementation) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onreset)"); CompiledName("onreset1")>]
            member __.onreset with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scripts)"); CompiledName("scripts")>]
            member __.scripts with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onhelp)"); CompiledName("onhelp1")>]
            member __.onhelp with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragleave)"); CompiledName("ondragleave1")>]
            member __.ondragleave with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.charset)"); CompiledName("charset")>]
            member __.charset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocusin)"); CompiledName("onfocusin1")>]
            member __.onfocusin with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vlinkColor)"); CompiledName("vlinkColor")>]
            member __.vlinkColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onseeked)"); CompiledName("onseeked1")>]
            member __.onseeked with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.security)"); CompiledName("security")>]
            member __.security with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.title)"); CompiledName("title")>]
            member __.title with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.namespaces)"); CompiledName("namespaces")>]
            member __.namespaces with get() : MSNamespaceInfoCollection = failwith "never" and set (v : MSNamespaceInfoCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultCharset)"); CompiledName("defaultCharset")>]
            member __.defaultCharset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.embeds)"); CompiledName("embeds")>]
            member __.embeds with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.styleSheets)"); CompiledName("styleSheets")>]
            member __.styleSheets with get() : StyleSheetList = failwith "never" and set (v : StyleSheetList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frames)"); CompiledName("frames1")>]
            member __.frames with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondurationchange)"); CompiledName("ondurationchange1")>]
            member __.ondurationchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.all)"); CompiledName("all")>]
            member __.all with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.forms)"); CompiledName("forms")>]
            member __.forms with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onblur)"); CompiledName("onblur1")>]
            member __.onblur with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dir)"); CompiledName("dir2")>]
            member __.dir with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onemptied)"); CompiledName("onemptied1")>]
            member __.onemptied with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.designMode)"); CompiledName("designMode")>]
            member __.designMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onseeking)"); CompiledName("onseeking1")>]
            member __.onseeking with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondeactivate)"); CompiledName("ondeactivate")>]
            member __.ondeactivate with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncanplay)"); CompiledName("oncanplay1")>]
            member __.oncanplay with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondatasetchanged)"); CompiledName("ondatasetchanged")>]
            member __.ondatasetchanged with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onrowsdelete)"); CompiledName("onrowsdelete")>]
            member __.onrowsdelete with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.Script)"); CompiledName("Script")>]
            member __.Script with get() : MSScriptHost = failwith "never" and set (v : MSScriptHost) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadstart)"); CompiledName("onloadstart1")>]
            member __.onloadstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.URLUnencoded)"); CompiledName("URLUnencoded")>]
            member __.URLUnencoded with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultView)"); CompiledName("defaultView")>]
            member __.defaultView with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncontrolselect)"); CompiledName("oncontrolselect")>]
            member __.oncontrolselect with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragenter)"); CompiledName("ondragenter1")>]
            member __.ondragenter with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onsubmit)"); CompiledName("onsubmit1")>]
            member __.onsubmit with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.inputEncoding)"); CompiledName("inputEncoding")>]
            member __.inputEncoding with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.activeElement)"); CompiledName("activeElement")>]
            member __.activeElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onchange)"); CompiledName("onchange2")>]
            member __.onchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.links)"); CompiledName("links")>]
            member __.links with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniqueID)"); CompiledName("uniqueID")>]
            member __.uniqueID with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.URL)"); CompiledName("URL1")>]
            member __.URL with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeactivate)"); CompiledName("onbeforeactivate")>]
            member __.onbeforeactivate with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.head)"); CompiledName("head")>]
            member __.head with get() : HTMLHeadElement = failwith "never" and set (v : HTMLHeadElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cookie)"); CompiledName("cookie")>]
            member __.cookie with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.xmlEncoding)"); CompiledName("xmlEncoding")>]
            member __.xmlEncoding with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncanplaythrough)"); CompiledName("oncanplaythrough1")>]
            member __.oncanplaythrough with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.documentMode)"); CompiledName("documentMode")>]
            member __.documentMode with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.characterSet)"); CompiledName("characterSet")>]
            member __.characterSet with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.anchors)"); CompiledName("anchors")>]
            member __.anchors with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeupdate)"); CompiledName("onbeforeupdate")>]
            member __.onbeforeupdate with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondatasetcomplete)"); CompiledName("ondatasetcomplete")>]
            member __.ondatasetcomplete with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.plugins)"); CompiledName("plugins")>]
            member __.plugins with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onsuspend)"); CompiledName("onsuspend1")>]
            member __.onsuspend with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rootElement)"); CompiledName("rootElement")>]
            member __.rootElement with get() : SVGSVGElement = failwith "never" and set (v : SVGSVGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState")>]
            member __.readyState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.referrer)"); CompiledName("referrer")>]
            member __.referrer with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alinkColor)"); CompiledName("alinkColor")>]
            member __.alinkColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerrorupdate)"); CompiledName("onerrorupdate")>]
            member __.onerrorupdate with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentWindow)"); CompiledName("parentWindow")>]
            member __.parentWindow with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseout)"); CompiledName("onmouseout1")>]
            member __.onmouseout with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsthumbnailclick)"); CompiledName("onmsthumbnailclick")>]
            member __.onmsthumbnailclick with get() : System.Func<MSSiteModeEvent, obj> = failwith "never" and set (v : System.Func<MSSiteModeEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousewheel)"); CompiledName("onmousewheel1")>]
            member __.onmousewheel with get() : System.Func<MouseWheelEvent, obj> = failwith "never" and set (v : System.Func<MouseWheelEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onvolumechange)"); CompiledName("onvolumechange1")>]
            member __.onvolumechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncellchange)"); CompiledName("oncellchange")>]
            member __.oncellchange with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onrowexit)"); CompiledName("onrowexit")>]
            member __.onrowexit with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onrowsinserted)"); CompiledName("onrowsinserted")>]
            member __.onrowsinserted with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.xmlVersion)"); CompiledName("xmlVersion")>]
            member __.xmlVersion with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msCapsLockWarningOff)"); CompiledName("msCapsLockWarningOff")>]
            member __.msCapsLockWarningOff with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpropertychange)"); CompiledName("onpropertychange")>]
            member __.onpropertychange with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragend)"); CompiledName("ondragend1")>]
            member __.ondragend with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.doctype)"); CompiledName("doctype")>]
            member __.doctype with get() : DocumentType = failwith "never" and set (v : DocumentType) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragover)"); CompiledName("ondragover1")>]
            member __.ondragover with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bgColor)"); CompiledName("bgColor1")>]
            member __.bgColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragstart)"); CompiledName("ondragstart1")>]
            member __.ondragstart with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseup)"); CompiledName("onmouseup1")>]
            member __.onmouseup with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondrag)"); CompiledName("ondrag1")>]
            member __.ondrag with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseover)"); CompiledName("onmouseover1")>]
            member __.onmouseover with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.linkColor)"); CompiledName("linkColor")>]
            member __.linkColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpause)"); CompiledName("onpause1")>]
            member __.onpause with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousedown)"); CompiledName("onmousedown1")>]
            member __.onmousedown with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onclick)"); CompiledName("onclick1")>]
            member __.onclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onwaiting)"); CompiledName("onwaiting1")>]
            member __.onwaiting with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstop)"); CompiledName("onstop")>]
            member __.onstop with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmssitemodejumplistitemremoved)"); CompiledName("onmssitemodejumplistitemremoved")>]
            member __.onmssitemodejumplistitemremoved with get() : System.Func<MSSiteModeEvent, obj> = failwith "never" and set (v : System.Func<MSSiteModeEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.applets)"); CompiledName("applets")>]
            member __.applets with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.body)"); CompiledName("body")>]
            member __.body with get() : HTMLElement = failwith "never" and set (v : HTMLElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domain)"); CompiledName("domain")>]
            member __.domain with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.xmlStandalone)"); CompiledName("xmlStandalone")>]
            member __.xmlStandalone with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selection)"); CompiledName("selection")>]
            member __.selection with get() : MSSelection = failwith "never" and set (v : MSSelection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstalled)"); CompiledName("onstalled1")>]
            member __.onstalled with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousemove)"); CompiledName("onmousemove1")>]
            member __.onmousemove with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeeditfocus)"); CompiledName("onbeforeeditfocus")>]
            member __.onbeforeeditfocus with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onratechange)"); CompiledName("onratechange1")>]
            member __.onratechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress3")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondblclick)"); CompiledName("ondblclick1")>]
            member __.ondblclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncontextmenu)"); CompiledName("oncontextmenu1")>]
            member __.oncontextmenu with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadedmetadata)"); CompiledName("onloadedmetadata1")>]
            member __.onloadedmetadata with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media2")>]
            member __.media with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror4")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onplay)"); CompiledName("onplay1")>]
            member __.onplay with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onafterupdate)"); CompiledName("onafterupdate")>]
            member __.onafterupdate with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onplaying)"); CompiledName("onplaying1")>]
            member __.onplaying with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.images)"); CompiledName("images")>]
            member __.images with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.location)"); CompiledName("location1")>]
            member __.location with get() : Location = failwith "never" and set (v : Location) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort2")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocusout)"); CompiledName("onfocusout1")>]
            member __.onfocusout with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onselectionchange)"); CompiledName("onselectionchange")>]
            member __.onselectionchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstoragecommit)"); CompiledName("onstoragecommit")>]
            member __.onstoragecommit with get() : System.Func<StorageEvent, obj> = failwith "never" and set (v : System.Func<StorageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondataavailable)"); CompiledName("ondataavailable")>]
            member __.ondataavailable with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onreadystatechange)"); CompiledName("onreadystatechange1")>]
            member __.onreadystatechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastModified)"); CompiledName("lastModified")>]
            member __.lastModified with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeypress)"); CompiledName("onkeypress1")>]
            member __.onkeypress with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadeddata)"); CompiledName("onloadeddata1")>]
            member __.onloadeddata with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforedeactivate)"); CompiledName("onbeforedeactivate")>]
            member __.onbeforedeactivate with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onactivate)"); CompiledName("onactivate")>]
            member __.onactivate with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onselectstart)"); CompiledName("onselectstart")>]
            member __.onselectstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocus)"); CompiledName("onfocus1")>]
            member __.onfocus with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fgColor)"); CompiledName("fgColor")>]
            member __.fgColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ontimeupdate)"); CompiledName("ontimeupdate1")>]
            member __.ontimeupdate with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onselect)"); CompiledName("onselect1")>]
            member __.onselect with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondrop)"); CompiledName("ondrop1")>]
            member __.ondrop with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onended)"); CompiledName("onended1")>]
            member __.onended with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.compatMode)"); CompiledName("compatMode")>]
            member __.compatMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onscroll)"); CompiledName("onscroll1")>]
            member __.onscroll with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onrowenter)"); CompiledName("onrowenter")>]
            member __.onrowenter with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload1")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oninput)"); CompiledName("oninput1")>]
            member __.oninput with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerdown)"); CompiledName("onmspointerdown1")>]
            member __.onmspointerdown with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msHidden)"); CompiledName("msHidden")>]
            member __.msHidden with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msVisibilityState)"); CompiledName("msVisibilityState")>]
            member __.msVisibilityState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturedoubletap)"); CompiledName("onmsgesturedoubletap1")>]
            member __.onmsgesturedoubletap with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.visibilityState)"); CompiledName("visibilityState")>]
            member __.visibilityState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsmanipulationstatechanged)"); CompiledName("onmsmanipulationstatechanged")>]
            member __.onmsmanipulationstatechanged with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerhover)"); CompiledName("onmspointerhover1")>]
            member __.onmspointerhover with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmscontentzoom)"); CompiledName("onmscontentzoom")>]
            member __.onmscontentzoom with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointermove)"); CompiledName("onmspointermove1")>]
            member __.onmspointermove with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturehold)"); CompiledName("onmsgesturehold1")>]
            member __.onmsgesturehold with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturechange)"); CompiledName("onmsgesturechange1")>]
            member __.onmsgesturechange with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturestart)"); CompiledName("onmsgesturestart1")>]
            member __.onmsgesturestart with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointercancel)"); CompiledName("onmspointercancel1")>]
            member __.onmspointercancel with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgestureend)"); CompiledName("onmsgestureend1")>]
            member __.onmsgestureend with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturetap)"); CompiledName("onmsgesturetap1")>]
            member __.onmsgesturetap with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerout)"); CompiledName("onmspointerout1")>]
            member __.onmspointerout with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsinertiastart)"); CompiledName("onmsinertiastart1")>]
            member __.onmsinertiastart with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msCSSOMElementFloatMetrics)"); CompiledName("msCSSOMElementFloatMetrics")>]
            member __.msCSSOMElementFloatMetrics with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerover)"); CompiledName("onmspointerover1")>]
            member __.onmspointerover with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hidden)"); CompiledName("hidden")>]
            member __.hidden with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerup)"); CompiledName("onmspointerup1")>]
            member __.onmspointerup with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFullscreenEnabled)"); CompiledName("msFullscreenEnabled")>]
            member __.msFullscreenEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsfullscreenerror)"); CompiledName("onmsfullscreenerror")>]
            member __.onmsfullscreenerror with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerenter)"); CompiledName("onmspointerenter1")>]
            member __.onmspointerenter with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFullscreenElement)"); CompiledName("msFullscreenElement")>]
            member __.msFullscreenElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsfullscreenchange)"); CompiledName("onmsfullscreenchange")>]
            member __.onmsfullscreenchange with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerleave)"); CompiledName("onmspointerleave1")>]
            member __.onmspointerleave with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementById({args}))"); CompiledName("getElementById")>]
            member __.getElementById(elementId : string) : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandValue({args}))"); CompiledName("queryCommandValue1")>]
            member __.queryCommandValue(commandId : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.adoptNode({args}))"); CompiledName("adoptNode")>]
            member __.adoptNode(source : Node) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandIndeterm({args}))"); CompiledName("queryCommandIndeterm1")>]
            member __.queryCommandIndeterm(commandId : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagNameNS({args}))"); CompiledName("getElementsByTagNameNS")>]
            member __.getElementsByTagNameNS(namespaceURI : string, localName : string) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.createProcessingInstruction({args}))"); CompiledName("createProcessingInstruction")>]
            member __.createProcessingInstruction(target : string, data : string) : ProcessingInstruction = failwith "never"
            [<FunScript.JSEmitInline("({0}.execCommand({args}))"); CompiledName("execCommand1")>]
            member __.execCommand(commandId : string, ?showUI : bool, ?value : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.elementFromPoint({args}))"); CompiledName("elementFromPoint")>]
            member __.elementFromPoint(x : float, y : float) : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}.createCDATASection({args}))"); CompiledName("createCDATASection")>]
            member __.createCDATASection(data : string) : CDATASection = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandText({args}))"); CompiledName("queryCommandText1")>]
            member __.queryCommandText(commandId : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.write())"); CompiledName("write")>]
            member __.write() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.write({args}))"); CompiledName("write1")>]
            member __.writeOverload2([<System.ParamArray>] content : array<string>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.updateSettings())"); CompiledName("updateSettings")>]
            member __.updateSettings() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"a\"))"); CompiledName("createElement")>]
            member __.createElement_a() : HTMLAnchorElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"abbr\"))"); CompiledName("createElement1")>]
            member __.createElement_abbr() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"acronym\"))"); CompiledName("createElement2")>]
            member __.createElement_acronym() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"address\"))"); CompiledName("createElement3")>]
            member __.createElement_address() : HTMLBlockElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"applet\"))"); CompiledName("createElement4")>]
            member __.createElement_applet() : HTMLAppletElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"area\"))"); CompiledName("createElement5")>]
            member __.createElement_area() : HTMLAreaElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"article\"))"); CompiledName("createElement6")>]
            member __.createElement_article() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"aside\"))"); CompiledName("createElement7")>]
            member __.createElement_aside() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"audio\"))"); CompiledName("createElement8")>]
            member __.createElement_audio() : HTMLAudioElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"b\"))"); CompiledName("createElement9")>]
            member __.createElement_b() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"base\"))"); CompiledName("createElement10")>]
            member __.createElement_base() : HTMLBaseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"basefont\"))"); CompiledName("createElement11")>]
            member __.createElement_basefont() : HTMLBaseFontElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"bdo\"))"); CompiledName("createElement12")>]
            member __.createElement_bdo() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"bgsound\"))"); CompiledName("createElement13")>]
            member __.createElement_bgsound() : HTMLBGSoundElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"big\"))"); CompiledName("createElement14")>]
            member __.createElement_big() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"blockquote\"))"); CompiledName("createElement15")>]
            member __.createElement_blockquote() : HTMLBlockElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"body\"))"); CompiledName("createElement16")>]
            member __.createElement_body() : HTMLBodyElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"br\"))"); CompiledName("createElement17")>]
            member __.createElement_br() : HTMLBRElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"button\"))"); CompiledName("createElement18")>]
            member __.createElement_button() : HTMLButtonElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"canvas\"))"); CompiledName("createElement19")>]
            member __.createElement_canvas() : HTMLCanvasElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"caption\"))"); CompiledName("createElement20")>]
            member __.createElement_caption() : HTMLTableCaptionElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"center\"))"); CompiledName("createElement21")>]
            member __.createElement_center() : HTMLBlockElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"cite\"))"); CompiledName("createElement22")>]
            member __.createElement_cite() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"code\"))"); CompiledName("createElement23")>]
            member __.createElement_code() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"col\"))"); CompiledName("createElement24")>]
            member __.createElement_col() : HTMLTableColElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"colgroup\"))"); CompiledName("createElement25")>]
            member __.createElement_colgroup() : HTMLTableColElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"datalist\"))"); CompiledName("createElement26")>]
            member __.createElement_datalist() : HTMLDataListElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"dd\"))"); CompiledName("createElement27")>]
            member __.createElement_dd() : HTMLDDElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"del\"))"); CompiledName("createElement28")>]
            member __.createElement_del() : HTMLModElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"dfn\"))"); CompiledName("createElement29")>]
            member __.createElement_dfn() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"dir\"))"); CompiledName("createElement30")>]
            member __.createElement_dir() : HTMLDirectoryElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"div\"))"); CompiledName("createElement31")>]
            member __.createElement_div() : HTMLDivElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"dl\"))"); CompiledName("createElement32")>]
            member __.createElement_dl() : HTMLDListElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"dt\"))"); CompiledName("createElement33")>]
            member __.createElement_dt() : HTMLDTElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"em\"))"); CompiledName("createElement34")>]
            member __.createElement_em() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"embed\"))"); CompiledName("createElement35")>]
            member __.createElement_embed() : HTMLEmbedElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"fieldset\"))"); CompiledName("createElement36")>]
            member __.createElement_fieldset() : HTMLFieldSetElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"figcaption\"))"); CompiledName("createElement37")>]
            member __.createElement_figcaption() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"figure\"))"); CompiledName("createElement38")>]
            member __.createElement_figure() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"font\"))"); CompiledName("createElement39")>]
            member __.createElement_font() : HTMLFontElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"footer\"))"); CompiledName("createElement40")>]
            member __.createElement_footer() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"form\"))"); CompiledName("createElement41")>]
            member __.createElement_form() : HTMLFormElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"frame\"))"); CompiledName("createElement42")>]
            member __.createElement_frame() : HTMLFrameElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"frameset\"))"); CompiledName("createElement43")>]
            member __.createElement_frameset() : HTMLFrameSetElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"h1\"))"); CompiledName("createElement44")>]
            member __.createElement_h1() : HTMLHeadingElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"h2\"))"); CompiledName("createElement45")>]
            member __.createElement_h2() : HTMLHeadingElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"h3\"))"); CompiledName("createElement46")>]
            member __.createElement_h3() : HTMLHeadingElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"h4\"))"); CompiledName("createElement47")>]
            member __.createElement_h4() : HTMLHeadingElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"h5\"))"); CompiledName("createElement48")>]
            member __.createElement_h5() : HTMLHeadingElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"h6\"))"); CompiledName("createElement49")>]
            member __.createElement_h6() : HTMLHeadingElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"head\"))"); CompiledName("createElement50")>]
            member __.createElement_head() : HTMLHeadElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"header\"))"); CompiledName("createElement51")>]
            member __.createElement_header() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"hgroup\"))"); CompiledName("createElement52")>]
            member __.createElement_hgroup() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"hr\"))"); CompiledName("createElement53")>]
            member __.createElement_hr() : HTMLHRElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"html\"))"); CompiledName("createElement54")>]
            member __.createElement_html() : HTMLHtmlElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"i\"))"); CompiledName("createElement55")>]
            member __.createElement_i() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"iframe\"))"); CompiledName("createElement56")>]
            member __.createElement_iframe() : HTMLIFrameElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"img\"))"); CompiledName("createElement57")>]
            member __.createElement_img() : HTMLImageElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"input\"))"); CompiledName("createElement58")>]
            member __.createElement_input() : HTMLInputElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"ins\"))"); CompiledName("createElement59")>]
            member __.createElement_ins() : HTMLModElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"isindex\"))"); CompiledName("createElement60")>]
            member __.createElement_isindex() : HTMLIsIndexElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"kbd\"))"); CompiledName("createElement61")>]
            member __.createElement_kbd() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"keygen\"))"); CompiledName("createElement62")>]
            member __.createElement_keygen() : HTMLBlockElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"label\"))"); CompiledName("createElement63")>]
            member __.createElement_label() : HTMLLabelElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"legend\"))"); CompiledName("createElement64")>]
            member __.createElement_legend() : HTMLLegendElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"li\"))"); CompiledName("createElement65")>]
            member __.createElement_li() : HTMLLIElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"link\"))"); CompiledName("createElement66")>]
            member __.createElement_link() : HTMLLinkElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"listing\"))"); CompiledName("createElement67")>]
            member __.createElement_listing() : HTMLBlockElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"map\"))"); CompiledName("createElement68")>]
            member __.createElement_map() : HTMLMapElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"mark\"))"); CompiledName("createElement69")>]
            member __.createElement_mark() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"marquee\"))"); CompiledName("createElement70")>]
            member __.createElement_marquee() : HTMLMarqueeElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"menu\"))"); CompiledName("createElement71")>]
            member __.createElement_menu() : HTMLMenuElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"meta\"))"); CompiledName("createElement72")>]
            member __.createElement_meta() : HTMLMetaElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"nav\"))"); CompiledName("createElement73")>]
            member __.createElement_nav() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"nextid\"))"); CompiledName("createElement74")>]
            member __.createElement_nextid() : HTMLNextIdElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"nobr\"))"); CompiledName("createElement75")>]
            member __.createElement_nobr() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"noframes\"))"); CompiledName("createElement76")>]
            member __.createElement_noframes() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"noscript\"))"); CompiledName("createElement77")>]
            member __.createElement_noscript() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"object\"))"); CompiledName("createElement78")>]
            member __.createElement_object() : HTMLObjectElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"ol\"))"); CompiledName("createElement79")>]
            member __.createElement_ol() : HTMLOListElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"optgroup\"))"); CompiledName("createElement80")>]
            member __.createElement_optgroup() : HTMLOptGroupElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"option\"))"); CompiledName("createElement81")>]
            member __.createElement_option() : HTMLOptionElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"p\"))"); CompiledName("createElement82")>]
            member __.createElement_p() : HTMLParagraphElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"param\"))"); CompiledName("createElement83")>]
            member __.createElement_param() : HTMLParamElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"plaintext\"))"); CompiledName("createElement84")>]
            member __.createElement_plaintext() : HTMLBlockElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"pre\"))"); CompiledName("createElement85")>]
            member __.createElement_pre() : HTMLPreElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"progress\"))"); CompiledName("createElement86")>]
            member __.createElement_progress() : HTMLProgressElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"q\"))"); CompiledName("createElement87")>]
            member __.createElement_q() : HTMLQuoteElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"rt\"))"); CompiledName("createElement88")>]
            member __.createElement_rt() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"ruby\"))"); CompiledName("createElement89")>]
            member __.createElement_ruby() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"s\"))"); CompiledName("createElement90")>]
            member __.createElement_s() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"samp\"))"); CompiledName("createElement91")>]
            member __.createElement_samp() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"script\"))"); CompiledName("createElement92")>]
            member __.createElement_script() : HTMLScriptElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"section\"))"); CompiledName("createElement93")>]
            member __.createElement_section() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"select\"))"); CompiledName("createElement94")>]
            member __.createElement_select() : HTMLSelectElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"small\"))"); CompiledName("createElement95")>]
            member __.createElement_small() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"SOURCE\"))"); CompiledName("createElement96")>]
            member __.createElement_SOURCE() : HTMLSourceElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"span\"))"); CompiledName("createElement97")>]
            member __.createElement_span() : HTMLSpanElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"strike\"))"); CompiledName("createElement98")>]
            member __.createElement_strike() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"strong\"))"); CompiledName("createElement99")>]
            member __.createElement_strong() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"style\"))"); CompiledName("createElement100")>]
            member __.createElement_style() : HTMLStyleElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"sub\"))"); CompiledName("createElement101")>]
            member __.createElement_sub() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"sup\"))"); CompiledName("createElement102")>]
            member __.createElement_sup() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"table\"))"); CompiledName("createElement103")>]
            member __.createElement_table() : HTMLTableElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"tbody\"))"); CompiledName("createElement104")>]
            member __.createElement_tbody() : HTMLTableSectionElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"td\"))"); CompiledName("createElement105")>]
            member __.createElement_td() : HTMLTableDataCellElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"textarea\"))"); CompiledName("createElement106")>]
            member __.createElement_textarea() : HTMLTextAreaElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"tfoot\"))"); CompiledName("createElement107")>]
            member __.createElement_tfoot() : HTMLTableSectionElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"th\"))"); CompiledName("createElement108")>]
            member __.createElement_th() : HTMLTableHeaderCellElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"thead\"))"); CompiledName("createElement109")>]
            member __.createElement_thead() : HTMLTableSectionElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"title\"))"); CompiledName("createElement110")>]
            member __.createElement_title() : HTMLTitleElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"tr\"))"); CompiledName("createElement111")>]
            member __.createElement_tr() : HTMLTableRowElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"track\"))"); CompiledName("createElement112")>]
            member __.createElement_track() : HTMLTrackElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"tt\"))"); CompiledName("createElement113")>]
            member __.createElement_tt() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"u\"))"); CompiledName("createElement114")>]
            member __.createElement_u() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"ul\"))"); CompiledName("createElement115")>]
            member __.createElement_ul() : HTMLUListElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"var\"))"); CompiledName("createElement116")>]
            member __.createElement_var() : HTMLPhraseElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"video\"))"); CompiledName("createElement117")>]
            member __.createElement_video() : HTMLVideoElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"wbr\"))"); CompiledName("createElement118")>]
            member __.createElement_wbr() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"x-ms-webview\"))"); CompiledName("createElement119")>]
            member __.createElement_x_ms_webview() : MSHTMLWebViewElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement(\"xmp\"))"); CompiledName("createElement120")>]
            member __.createElement_xmp() : HTMLBlockElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElement({args}))"); CompiledName("createElement121")>]
            member __.createElement(tagName : string) : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.releaseCapture())"); CompiledName("releaseCapture")>]
            member __.releaseCapture() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.writeln())"); CompiledName("writeln")>]
            member __.writeln() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.writeln({args}))"); CompiledName("writeln1")>]
            member __.writelnOverload2([<System.ParamArray>] content : array<string>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createElementNS({args}))"); CompiledName("createElementNS")>]
            member __.createElementNS(namespaceURI : string, qualifiedName : string) : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}.open({args}))"); CompiledName("_open1")>]
            member __._open(?url : string, ?name : string, ?features : string, ?replace : bool) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandSupported({args}))"); CompiledName("queryCommandSupported1")>]
            member __.queryCommandSupported(commandId : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTreeWalker({args}))"); CompiledName("createTreeWalker")>]
            member __.createTreeWalker(root : Node, whatToShow : float, filter : NodeFilter, entityReferenceExpansion : bool) : TreeWalker = failwith "never"
            [<FunScript.JSEmitInline("({0}.createAttributeNS({args}))"); CompiledName("createAttributeNS")>]
            member __.createAttributeNS(namespaceURI : string, qualifiedName : string) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandEnabled({args}))"); CompiledName("queryCommandEnabled1")>]
            member __.queryCommandEnabled(commandId : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.focus())"); CompiledName("focus1")>]
            member __.focus() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.close())"); CompiledName("close1")>]
            member __.close() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByClassName({args}))"); CompiledName("getElementsByClassName")>]
            member __.getElementsByClassName(classNames : string) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.importNode({args}))"); CompiledName("importNode")>]
            member __.importNode(importedNode : Node, deep : bool) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.createRange())"); CompiledName("createRange")>]
            member __.createRange() : Range = failwith "never"
            [<FunScript.JSEmitInline("({0}.fireEvent({args}))"); CompiledName("fireEvent")>]
            member __.fireEvent(eventName : string, ?eventObj : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.createComment({args}))"); CompiledName("createComment")>]
            member __.createComment(data : string) : Comment = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"a\"))"); CompiledName("getElementsByTagName")>]
            member __.getElementsByTagName_a() : NodeListOf<HTMLAnchorElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"abbr\"))"); CompiledName("getElementsByTagName1")>]
            member __.getElementsByTagName_abbr() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"acronym\"))"); CompiledName("getElementsByTagName2")>]
            member __.getElementsByTagName_acronym() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"address\"))"); CompiledName("getElementsByTagName3")>]
            member __.getElementsByTagName_address() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"applet\"))"); CompiledName("getElementsByTagName4")>]
            member __.getElementsByTagName_applet() : NodeListOf<HTMLAppletElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"area\"))"); CompiledName("getElementsByTagName5")>]
            member __.getElementsByTagName_area() : NodeListOf<HTMLAreaElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"article\"))"); CompiledName("getElementsByTagName6")>]
            member __.getElementsByTagName_article() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"aside\"))"); CompiledName("getElementsByTagName7")>]
            member __.getElementsByTagName_aside() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"audio\"))"); CompiledName("getElementsByTagName8")>]
            member __.getElementsByTagName_audio() : NodeListOf<HTMLAudioElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"b\"))"); CompiledName("getElementsByTagName9")>]
            member __.getElementsByTagName_b() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"base\"))"); CompiledName("getElementsByTagName10")>]
            member __.getElementsByTagName_base() : NodeListOf<HTMLBaseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"basefont\"))"); CompiledName("getElementsByTagName11")>]
            member __.getElementsByTagName_basefont() : NodeListOf<HTMLBaseFontElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"bdo\"))"); CompiledName("getElementsByTagName12")>]
            member __.getElementsByTagName_bdo() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"bgsound\"))"); CompiledName("getElementsByTagName13")>]
            member __.getElementsByTagName_bgsound() : NodeListOf<HTMLBGSoundElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"big\"))"); CompiledName("getElementsByTagName14")>]
            member __.getElementsByTagName_big() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"blockquote\"))"); CompiledName("getElementsByTagName15")>]
            member __.getElementsByTagName_blockquote() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"body\"))"); CompiledName("getElementsByTagName16")>]
            member __.getElementsByTagName_body() : NodeListOf<HTMLBodyElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"br\"))"); CompiledName("getElementsByTagName17")>]
            member __.getElementsByTagName_br() : NodeListOf<HTMLBRElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"button\"))"); CompiledName("getElementsByTagName18")>]
            member __.getElementsByTagName_button() : NodeListOf<HTMLButtonElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"canvas\"))"); CompiledName("getElementsByTagName19")>]
            member __.getElementsByTagName_canvas() : NodeListOf<HTMLCanvasElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"caption\"))"); CompiledName("getElementsByTagName20")>]
            member __.getElementsByTagName_caption() : NodeListOf<HTMLTableCaptionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"center\"))"); CompiledName("getElementsByTagName21")>]
            member __.getElementsByTagName_center() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"cite\"))"); CompiledName("getElementsByTagName22")>]
            member __.getElementsByTagName_cite() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"code\"))"); CompiledName("getElementsByTagName23")>]
            member __.getElementsByTagName_code() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"col\"))"); CompiledName("getElementsByTagName24")>]
            member __.getElementsByTagName_col() : NodeListOf<HTMLTableColElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"colgroup\"))"); CompiledName("getElementsByTagName25")>]
            member __.getElementsByTagName_colgroup() : NodeListOf<HTMLTableColElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"datalist\"))"); CompiledName("getElementsByTagName26")>]
            member __.getElementsByTagName_datalist() : NodeListOf<HTMLDataListElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dd\"))"); CompiledName("getElementsByTagName27")>]
            member __.getElementsByTagName_dd() : NodeListOf<HTMLDDElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"del\"))"); CompiledName("getElementsByTagName28")>]
            member __.getElementsByTagName_del() : NodeListOf<HTMLModElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dfn\"))"); CompiledName("getElementsByTagName29")>]
            member __.getElementsByTagName_dfn() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dir\"))"); CompiledName("getElementsByTagName30")>]
            member __.getElementsByTagName_dir() : NodeListOf<HTMLDirectoryElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"div\"))"); CompiledName("getElementsByTagName31")>]
            member __.getElementsByTagName_div() : NodeListOf<HTMLDivElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dl\"))"); CompiledName("getElementsByTagName32")>]
            member __.getElementsByTagName_dl() : NodeListOf<HTMLDListElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dt\"))"); CompiledName("getElementsByTagName33")>]
            member __.getElementsByTagName_dt() : NodeListOf<HTMLDTElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"em\"))"); CompiledName("getElementsByTagName34")>]
            member __.getElementsByTagName_em() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"embed\"))"); CompiledName("getElementsByTagName35")>]
            member __.getElementsByTagName_embed() : NodeListOf<HTMLEmbedElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"fieldset\"))"); CompiledName("getElementsByTagName36")>]
            member __.getElementsByTagName_fieldset() : NodeListOf<HTMLFieldSetElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"figcaption\"))"); CompiledName("getElementsByTagName37")>]
            member __.getElementsByTagName_figcaption() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"figure\"))"); CompiledName("getElementsByTagName38")>]
            member __.getElementsByTagName_figure() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"font\"))"); CompiledName("getElementsByTagName39")>]
            member __.getElementsByTagName_font() : NodeListOf<HTMLFontElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"footer\"))"); CompiledName("getElementsByTagName40")>]
            member __.getElementsByTagName_footer() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"form\"))"); CompiledName("getElementsByTagName41")>]
            member __.getElementsByTagName_form() : NodeListOf<HTMLFormElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"frame\"))"); CompiledName("getElementsByTagName42")>]
            member __.getElementsByTagName_frame() : NodeListOf<HTMLFrameElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"frameset\"))"); CompiledName("getElementsByTagName43")>]
            member __.getElementsByTagName_frameset() : NodeListOf<HTMLFrameSetElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h1\"))"); CompiledName("getElementsByTagName44")>]
            member __.getElementsByTagName_h1() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h2\"))"); CompiledName("getElementsByTagName45")>]
            member __.getElementsByTagName_h2() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h3\"))"); CompiledName("getElementsByTagName46")>]
            member __.getElementsByTagName_h3() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h4\"))"); CompiledName("getElementsByTagName47")>]
            member __.getElementsByTagName_h4() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h5\"))"); CompiledName("getElementsByTagName48")>]
            member __.getElementsByTagName_h5() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h6\"))"); CompiledName("getElementsByTagName49")>]
            member __.getElementsByTagName_h6() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"head\"))"); CompiledName("getElementsByTagName50")>]
            member __.getElementsByTagName_head() : NodeListOf<HTMLHeadElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"header\"))"); CompiledName("getElementsByTagName51")>]
            member __.getElementsByTagName_header() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"hgroup\"))"); CompiledName("getElementsByTagName52")>]
            member __.getElementsByTagName_hgroup() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"hr\"))"); CompiledName("getElementsByTagName53")>]
            member __.getElementsByTagName_hr() : NodeListOf<HTMLHRElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"html\"))"); CompiledName("getElementsByTagName54")>]
            member __.getElementsByTagName_html() : NodeListOf<HTMLHtmlElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"i\"))"); CompiledName("getElementsByTagName55")>]
            member __.getElementsByTagName_i() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"iframe\"))"); CompiledName("getElementsByTagName56")>]
            member __.getElementsByTagName_iframe() : NodeListOf<HTMLIFrameElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"img\"))"); CompiledName("getElementsByTagName57")>]
            member __.getElementsByTagName_img() : NodeListOf<HTMLImageElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"input\"))"); CompiledName("getElementsByTagName58")>]
            member __.getElementsByTagName_input() : NodeListOf<HTMLInputElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"ins\"))"); CompiledName("getElementsByTagName59")>]
            member __.getElementsByTagName_ins() : NodeListOf<HTMLModElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"isindex\"))"); CompiledName("getElementsByTagName60")>]
            member __.getElementsByTagName_isindex() : NodeListOf<HTMLIsIndexElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"kbd\"))"); CompiledName("getElementsByTagName61")>]
            member __.getElementsByTagName_kbd() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"keygen\"))"); CompiledName("getElementsByTagName62")>]
            member __.getElementsByTagName_keygen() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"label\"))"); CompiledName("getElementsByTagName63")>]
            member __.getElementsByTagName_label() : NodeListOf<HTMLLabelElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"legend\"))"); CompiledName("getElementsByTagName64")>]
            member __.getElementsByTagName_legend() : NodeListOf<HTMLLegendElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"li\"))"); CompiledName("getElementsByTagName65")>]
            member __.getElementsByTagName_li() : NodeListOf<HTMLLIElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"link\"))"); CompiledName("getElementsByTagName66")>]
            member __.getElementsByTagName_link() : NodeListOf<HTMLLinkElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"listing\"))"); CompiledName("getElementsByTagName67")>]
            member __.getElementsByTagName_listing() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"map\"))"); CompiledName("getElementsByTagName68")>]
            member __.getElementsByTagName_map() : NodeListOf<HTMLMapElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"mark\"))"); CompiledName("getElementsByTagName69")>]
            member __.getElementsByTagName_mark() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"marquee\"))"); CompiledName("getElementsByTagName70")>]
            member __.getElementsByTagName_marquee() : NodeListOf<HTMLMarqueeElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"menu\"))"); CompiledName("getElementsByTagName71")>]
            member __.getElementsByTagName_menu() : NodeListOf<HTMLMenuElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"meta\"))"); CompiledName("getElementsByTagName72")>]
            member __.getElementsByTagName_meta() : NodeListOf<HTMLMetaElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"nav\"))"); CompiledName("getElementsByTagName73")>]
            member __.getElementsByTagName_nav() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"nextid\"))"); CompiledName("getElementsByTagName74")>]
            member __.getElementsByTagName_nextid() : NodeListOf<HTMLNextIdElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"nobr\"))"); CompiledName("getElementsByTagName75")>]
            member __.getElementsByTagName_nobr() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"noframes\"))"); CompiledName("getElementsByTagName76")>]
            member __.getElementsByTagName_noframes() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"noscript\"))"); CompiledName("getElementsByTagName77")>]
            member __.getElementsByTagName_noscript() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"object\"))"); CompiledName("getElementsByTagName78")>]
            member __.getElementsByTagName_object() : NodeListOf<HTMLObjectElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"ol\"))"); CompiledName("getElementsByTagName79")>]
            member __.getElementsByTagName_ol() : NodeListOf<HTMLOListElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"optgroup\"))"); CompiledName("getElementsByTagName80")>]
            member __.getElementsByTagName_optgroup() : NodeListOf<HTMLOptGroupElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"option\"))"); CompiledName("getElementsByTagName81")>]
            member __.getElementsByTagName_option() : NodeListOf<HTMLOptionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"p\"))"); CompiledName("getElementsByTagName82")>]
            member __.getElementsByTagName_p() : NodeListOf<HTMLParagraphElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"param\"))"); CompiledName("getElementsByTagName83")>]
            member __.getElementsByTagName_param() : NodeListOf<HTMLParamElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"plaintext\"))"); CompiledName("getElementsByTagName84")>]
            member __.getElementsByTagName_plaintext() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"pre\"))"); CompiledName("getElementsByTagName85")>]
            member __.getElementsByTagName_pre() : NodeListOf<HTMLPreElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"progress\"))"); CompiledName("getElementsByTagName86")>]
            member __.getElementsByTagName_progress() : NodeListOf<HTMLProgressElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"q\"))"); CompiledName("getElementsByTagName87")>]
            member __.getElementsByTagName_q() : NodeListOf<HTMLQuoteElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"rt\"))"); CompiledName("getElementsByTagName88")>]
            member __.getElementsByTagName_rt() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"ruby\"))"); CompiledName("getElementsByTagName89")>]
            member __.getElementsByTagName_ruby() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"s\"))"); CompiledName("getElementsByTagName90")>]
            member __.getElementsByTagName_s() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"samp\"))"); CompiledName("getElementsByTagName91")>]
            member __.getElementsByTagName_samp() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"script\"))"); CompiledName("getElementsByTagName92")>]
            member __.getElementsByTagName_script() : NodeListOf<HTMLScriptElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"section\"))"); CompiledName("getElementsByTagName93")>]
            member __.getElementsByTagName_section() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"select\"))"); CompiledName("getElementsByTagName94")>]
            member __.getElementsByTagName_select() : NodeListOf<HTMLSelectElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"small\"))"); CompiledName("getElementsByTagName95")>]
            member __.getElementsByTagName_small() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"SOURCE\"))"); CompiledName("getElementsByTagName96")>]
            member __.getElementsByTagName_SOURCE() : NodeListOf<HTMLSourceElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"span\"))"); CompiledName("getElementsByTagName97")>]
            member __.getElementsByTagName_span() : NodeListOf<HTMLSpanElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"strike\"))"); CompiledName("getElementsByTagName98")>]
            member __.getElementsByTagName_strike() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"strong\"))"); CompiledName("getElementsByTagName99")>]
            member __.getElementsByTagName_strong() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"style\"))"); CompiledName("getElementsByTagName100")>]
            member __.getElementsByTagName_style() : NodeListOf<HTMLStyleElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"sub\"))"); CompiledName("getElementsByTagName101")>]
            member __.getElementsByTagName_sub() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"sup\"))"); CompiledName("getElementsByTagName102")>]
            member __.getElementsByTagName_sup() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"table\"))"); CompiledName("getElementsByTagName103")>]
            member __.getElementsByTagName_table() : NodeListOf<HTMLTableElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"tbody\"))"); CompiledName("getElementsByTagName104")>]
            member __.getElementsByTagName_tbody() : NodeListOf<HTMLTableSectionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"td\"))"); CompiledName("getElementsByTagName105")>]
            member __.getElementsByTagName_td() : NodeListOf<HTMLTableDataCellElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"textarea\"))"); CompiledName("getElementsByTagName106")>]
            member __.getElementsByTagName_textarea() : NodeListOf<HTMLTextAreaElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"tfoot\"))"); CompiledName("getElementsByTagName107")>]
            member __.getElementsByTagName_tfoot() : NodeListOf<HTMLTableSectionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"th\"))"); CompiledName("getElementsByTagName108")>]
            member __.getElementsByTagName_th() : NodeListOf<HTMLTableHeaderCellElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"thead\"))"); CompiledName("getElementsByTagName109")>]
            member __.getElementsByTagName_thead() : NodeListOf<HTMLTableSectionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"title\"))"); CompiledName("getElementsByTagName110")>]
            member __.getElementsByTagName_title() : NodeListOf<HTMLTitleElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"tr\"))"); CompiledName("getElementsByTagName111")>]
            member __.getElementsByTagName_tr() : NodeListOf<HTMLTableRowElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"track\"))"); CompiledName("getElementsByTagName112")>]
            member __.getElementsByTagName_track() : NodeListOf<HTMLTrackElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"tt\"))"); CompiledName("getElementsByTagName113")>]
            member __.getElementsByTagName_tt() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"u\"))"); CompiledName("getElementsByTagName114")>]
            member __.getElementsByTagName_u() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"ul\"))"); CompiledName("getElementsByTagName115")>]
            member __.getElementsByTagName_ul() : NodeListOf<HTMLUListElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"var\"))"); CompiledName("getElementsByTagName116")>]
            member __.getElementsByTagName_var() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"video\"))"); CompiledName("getElementsByTagName117")>]
            member __.getElementsByTagName_video() : NodeListOf<HTMLVideoElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"wbr\"))"); CompiledName("getElementsByTagName118")>]
            member __.getElementsByTagName_wbr() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"x-ms-webview\"))"); CompiledName("getElementsByTagName119")>]
            member __.getElementsByTagName_x_ms_webview() : NodeListOf<MSHTMLWebViewElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"xmp\"))"); CompiledName("getElementsByTagName120")>]
            member __.getElementsByTagName_xmp() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName({args}))"); CompiledName("getElementsByTagName121")>]
            member __.getElementsByTagName(name : string) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.createDocumentFragment())"); CompiledName("createDocumentFragment")>]
            member __.createDocumentFragment() : DocumentFragment = failwith "never"
            [<FunScript.JSEmitInline("({0}.createStyleSheet({args}))"); CompiledName("createStyleSheet")>]
            member __.createStyleSheet(?href : string, ?index : float) : CSSStyleSheet = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByName({args}))"); CompiledName("getElementsByName")>]
            member __.getElementsByName(elementName : string) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandState({args}))"); CompiledName("queryCommandState1")>]
            member __.queryCommandState(commandId : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasFocus())"); CompiledName("hasFocus")>]
            member __.hasFocus() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.execCommandShowHelp({args}))"); CompiledName("execCommandShowHelp")>]
            member __.execCommandShowHelp(commandId : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.createAttribute({args}))"); CompiledName("createAttribute")>]
            member __.createAttribute(name : string) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTextNode({args}))"); CompiledName("createTextNode")>]
            member __.createTextNode(data : string) : Text = failwith "never"
            [<FunScript.JSEmitInline("({0}.createNodeIterator({args}))"); CompiledName("createNodeIterator")>]
            member __.createNodeIterator(root : Node, whatToShow : float, filter : NodeFilter, entityReferenceExpansion : bool) : NodeIterator = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEventObject({args}))"); CompiledName("createEventObject")>]
            member __.createEventObject(?eventObj : obj) : MSEventObj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getSelection())"); CompiledName("getSelection1")>]
            member __.getSelection() : Selection = failwith "never"
            [<FunScript.JSEmitInline("({0}.msElementsFromPoint({args}))"); CompiledName("msElementsFromPoint")>]
            member __.msElementsFromPoint(x : float, y : float) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.msElementsFromRect({args}))"); CompiledName("msElementsFromRect")>]
            member __.msElementsFromRect(left : float, top : float, width : float, height : float) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear3")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msExitFullscreen())"); CompiledName("msExitFullscreen")>]
            member __.msExitFullscreen() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener115")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener116")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener117")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener118")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener119")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener120")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener121")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener122")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener123")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener124")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener125")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener126")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener127")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener128")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener129")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener130")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener131")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener132")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener133")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener134")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener135")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener136")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener137")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener138")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener139")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener140")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener141")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener142")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener143")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener144")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener145")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener146")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener147")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener148")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener149")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msthumbnailclick\", {args})"); CompiledName("addEventListener150")>]
            member __.addEventListener_msthumbnailclick(listener : System.Func<MSSiteModeEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener151")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener152")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener153")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener154")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener155")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener156")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener157")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener158")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener159")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener160")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener161")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener162")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener163")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener164")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener165")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener166")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stop\", {args})"); CompiledName("addEventListener167")>]
            member __.addEventListener_stop(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mssitemodejumplistitemremoved\", {args})"); CompiledName("addEventListener168")>]
            member __.addEventListener_mssitemodejumplistitemremoved(listener : System.Func<MSSiteModeEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener169")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener170")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener171")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener172")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener173")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener174")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener175")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener176")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener177")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener178")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener179")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener180")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener181")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener182")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectionchange\", {args})"); CompiledName("addEventListener183")>]
            member __.addEventListener_selectionchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"storagecommit\", {args})"); CompiledName("addEventListener184")>]
            member __.addEventListener_storagecommit(listener : System.Func<StorageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener185")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener186")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener187")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener188")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener189")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener190")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener191")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener192")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener193")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener194")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener195")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener196")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener197")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener198")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener199")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener200")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener201")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener202")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener203")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener204")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener205")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener206")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener207")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener208")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener209")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener210")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener211")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener212")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener213")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener214")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener215")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener216")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msfullscreenerror\", {args})"); CompiledName("addEventListener217")>]
            member __.addEventListener_msfullscreenerror(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener218")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msfullscreenchange\", {args})"); CompiledName("addEventListener219")>]
            member __.addEventListener_msfullscreenchange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener220")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener221")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type DocumentEvent with 

            [<FunScript.JSEmitInline("({0}.createEvent(\"AnimationEvent\"))"); CompiledName("createEvent")>]
            member __.createEvent_AnimationEvent() : AnimationEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"CloseEvent\"))"); CompiledName("createEvent1")>]
            member __.createEvent_CloseEvent() : CloseEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"CompositionEvent\"))"); CompiledName("createEvent2")>]
            member __.createEvent_CompositionEvent() : CompositionEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"CustomEvent\"))"); CompiledName("createEvent3")>]
            member __.createEvent_CustomEvent() : CustomEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"DeviceMotionEvent\"))"); CompiledName("createEvent4")>]
            member __.createEvent_DeviceMotionEvent() : DeviceMotionEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"DeviceOrientationEvent\"))"); CompiledName("createEvent5")>]
            member __.createEvent_DeviceOrientationEvent() : DeviceOrientationEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"DragEvent\"))"); CompiledName("createEvent6")>]
            member __.createEvent_DragEvent() : DragEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"ErrorEvent\"))"); CompiledName("createEvent7")>]
            member __.createEvent_ErrorEvent() : ErrorEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"Event\"))"); CompiledName("createEvent8")>]
            member __.createEvent_Event() : Event = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"Events\"))"); CompiledName("createEvent9")>]
            member __.createEvent_Events() : Event = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"FocusEvent\"))"); CompiledName("createEvent10")>]
            member __.createEvent_FocusEvent() : FocusEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"HTMLEvents\"))"); CompiledName("createEvent11")>]
            member __.createEvent_HTMLEvents() : Event = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"IDBVersionChangeEvent\"))"); CompiledName("createEvent12")>]
            member __.createEvent_IDBVersionChangeEvent() : IDBVersionChangeEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"KeyboardEvent\"))"); CompiledName("createEvent13")>]
            member __.createEvent_KeyboardEvent() : KeyboardEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"LongRunningScriptDetectedEvent\"))"); CompiledName("createEvent14")>]
            member __.createEvent_LongRunningScriptDetectedEvent() : LongRunningScriptDetectedEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"MessageEvent\"))"); CompiledName("createEvent15")>]
            member __.createEvent_MessageEvent() : MessageEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"MouseEvent\"))"); CompiledName("createEvent16")>]
            member __.createEvent_MouseEvent() : MouseEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"MouseEvents\"))"); CompiledName("createEvent17")>]
            member __.createEvent_MouseEvents() : MouseEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"MouseWheelEvent\"))"); CompiledName("createEvent18")>]
            member __.createEvent_MouseWheelEvent() : MouseWheelEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"MSGestureEvent\"))"); CompiledName("createEvent19")>]
            member __.createEvent_MSGestureEvent() : MSGestureEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"MSPointerEvent\"))"); CompiledName("createEvent20")>]
            member __.createEvent_MSPointerEvent() : MSPointerEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"MutationEvent\"))"); CompiledName("createEvent21")>]
            member __.createEvent_MutationEvent() : MutationEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"MutationEvents\"))"); CompiledName("createEvent22")>]
            member __.createEvent_MutationEvents() : MutationEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"NavigationCompletedEvent\"))"); CompiledName("createEvent23")>]
            member __.createEvent_NavigationCompletedEvent() : NavigationCompletedEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"NavigationEvent\"))"); CompiledName("createEvent24")>]
            member __.createEvent_NavigationEvent() : NavigationEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"PageTransitionEvent\"))"); CompiledName("createEvent25")>]
            member __.createEvent_PageTransitionEvent() : PageTransitionEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"PointerEvent\"))"); CompiledName("createEvent26")>]
            member __.createEvent_PointerEvent() : MSPointerEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"PopStateEvent\"))"); CompiledName("createEvent27")>]
            member __.createEvent_PopStateEvent() : PopStateEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"ProgressEvent\"))"); CompiledName("createEvent28")>]
            member __.createEvent_ProgressEvent() : ProgressEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"StorageEvent\"))"); CompiledName("createEvent29")>]
            member __.createEvent_StorageEvent() : StorageEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"SVGZoomEvents\"))"); CompiledName("createEvent30")>]
            member __.createEvent_SVGZoomEvents() : SVGZoomEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"TextEvent\"))"); CompiledName("createEvent31")>]
            member __.createEvent_TextEvent() : TextEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"TrackEvent\"))"); CompiledName("createEvent32")>]
            member __.createEvent_TrackEvent() : TrackEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"TransitionEvent\"))"); CompiledName("createEvent33")>]
            member __.createEvent_TransitionEvent() : TransitionEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"UIEvent\"))"); CompiledName("createEvent34")>]
            member __.createEvent_UIEvent() : UIEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"UIEvents\"))"); CompiledName("createEvent35")>]
            member __.createEvent_UIEvents() : UIEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"UnviewableContentIdentifiedEvent\"))"); CompiledName("createEvent36")>]
            member __.createEvent_UnviewableContentIdentifiedEvent() : UnviewableContentIdentifiedEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"WebGLContextEvent\"))"); CompiledName("createEvent37")>]
            member __.createEvent_WebGLContextEvent() : WebGLContextEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent(\"WheelEvent\"))"); CompiledName("createEvent38")>]
            member __.createEvent_WheelEvent() : WheelEvent = failwith "never"
            [<FunScript.JSEmitInline("({0}.createEvent({args}))"); CompiledName("createEvent39")>]
            member __.createEvent(eventInterface : string) : Event = failwith "never"




    type DocumentType with 

            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name6")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.notations)"); CompiledName("notations")>]
            member __.notations with get() : NamedNodeMap = failwith "never" and set (v : NamedNodeMap) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.systemId)"); CompiledName("systemId")>]
            member __.systemId with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.internalSubset)"); CompiledName("internalSubset")>]
            member __.internalSubset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.entities)"); CompiledName("entities")>]
            member __.entities with get() : NamedNodeMap = failwith "never" and set (v : NamedNodeMap) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.publicId)"); CompiledName("publicId")>]
            member __.publicId with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type DragEvent with 

            [<FunScript.JSEmitInline("({0}.dataTransfer)"); CompiledName("dataTransfer")>]
            member __.dataTransfer with get() : DataTransfer = failwith "never" and set (v : DataTransfer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initDragEvent({args}))"); CompiledName("initDragEvent")>]
            member __.initDragEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, screenXArg : float, screenYArg : float, clientXArg : float, clientYArg : float, ctrlKeyArg : bool, altKeyArg : bool, shiftKeyArg : bool, metaKeyArg : bool, buttonArg : float, relatedTargetArg : EventTarget, dataTransferArg : DataTransfer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msConvertURL({args}))"); CompiledName("msConvertURL")>]
            member __.msConvertURL(file : File, targetType : string, ?targetURL : string) : unit = failwith "never"




    type EXT_texture_filter_anisotropic with 

            [<FunScript.JSEmitInline("({0}.TEXTURE_MAX_ANISOTROPY_EXT)"); CompiledName("TEXTURE_MAX_ANISOTROPY_EXT1")>]
            member __.TEXTURE_MAX_ANISOTROPY_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_TEXTURE_MAX_ANISOTROPY_EXT)"); CompiledName("MAX_TEXTURE_MAX_ANISOTROPY_EXT1")>]
            member __.MAX_TEXTURE_MAX_ANISOTROPY_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type Element with 

            [<FunScript.JSEmitInline("({0}.scrollTop)"); CompiledName("scrollTop")>]
            member __.scrollTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientLeft)"); CompiledName("clientLeft")>]
            member __.clientLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollLeft)"); CompiledName("scrollLeft")>]
            member __.scrollLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tagName)"); CompiledName("tagName")>]
            member __.tagName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientWidth)"); CompiledName("clientWidth")>]
            member __.clientWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollWidth)"); CompiledName("scrollWidth")>]
            member __.scrollWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientHeight)"); CompiledName("clientHeight")>]
            member __.clientHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientTop)"); CompiledName("clientTop")>]
            member __.clientTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollHeight)"); CompiledName("scrollHeight")>]
            member __.scrollHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msRegionOverflow)"); CompiledName("msRegionOverflow")>]
            member __.msRegionOverflow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerdown)"); CompiledName("onmspointerdown2")>]
            member __.onmspointerdown with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgotpointercapture)"); CompiledName("onmsgotpointercapture")>]
            member __.onmsgotpointercapture with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturedoubletap)"); CompiledName("onmsgesturedoubletap2")>]
            member __.onmsgesturedoubletap with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerhover)"); CompiledName("onmspointerhover2")>]
            member __.onmspointerhover with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturehold)"); CompiledName("onmsgesturehold2")>]
            member __.onmsgesturehold with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointermove)"); CompiledName("onmspointermove2")>]
            member __.onmspointermove with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturechange)"); CompiledName("onmsgesturechange2")>]
            member __.onmsgesturechange with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturestart)"); CompiledName("onmsgesturestart2")>]
            member __.onmsgesturestart with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointercancel)"); CompiledName("onmspointercancel2")>]
            member __.onmspointercancel with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgestureend)"); CompiledName("onmsgestureend2")>]
            member __.onmsgestureend with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturetap)"); CompiledName("onmsgesturetap2")>]
            member __.onmsgesturetap with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerout)"); CompiledName("onmspointerout2")>]
            member __.onmspointerout with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsinertiastart)"); CompiledName("onmsinertiastart2")>]
            member __.onmsinertiastart with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmslostpointercapture)"); CompiledName("onmslostpointercapture")>]
            member __.onmslostpointercapture with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerover)"); CompiledName("onmspointerover2")>]
            member __.onmspointerover with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msContentZoomFactor)"); CompiledName("msContentZoomFactor")>]
            member __.msContentZoomFactor with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerup)"); CompiledName("onmspointerup2")>]
            member __.onmspointerup with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onlostpointercapture)"); CompiledName("onlostpointercapture")>]
            member __.onlostpointercapture with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerenter)"); CompiledName("onmspointerenter2")>]
            member __.onmspointerenter with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ongotpointercapture)"); CompiledName("ongotpointercapture")>]
            member __.ongotpointercapture with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerleave)"); CompiledName("onmspointerleave2")>]
            member __.onmspointerleave with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAttribute({args}))"); CompiledName("getAttribute")>]
            member __.getAttribute(?name : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagNameNS({args}))"); CompiledName("getElementsByTagNameNS1")>]
            member __.getElementsByTagNameNS(namespaceURI : string, localName : string) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasAttributeNS({args}))"); CompiledName("hasAttributeNS")>]
            member __.hasAttributeNS(namespaceURI : string, localName : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.getBoundingClientRect())"); CompiledName("getBoundingClientRect")>]
            member __.getBoundingClientRect() : ClientRect = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAttributeNS({args}))"); CompiledName("getAttributeNS")>]
            member __.getAttributeNS(namespaceURI : string, localName : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAttributeNodeNS({args}))"); CompiledName("getAttributeNodeNS")>]
            member __.getAttributeNodeNS(namespaceURI : string, localName : string) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.setAttributeNodeNS({args}))"); CompiledName("setAttributeNodeNS")>]
            member __.setAttributeNodeNS(newAttr : Attr) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.msMatchesSelector({args}))"); CompiledName("msMatchesSelector")>]
            member __.msMatchesSelector(selectors : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasAttribute({args}))"); CompiledName("hasAttribute")>]
            member __.hasAttribute(name : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeAttribute({args}))"); CompiledName("removeAttribute")>]
            member __.removeAttribute(?name : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setAttributeNS({args}))"); CompiledName("setAttributeNS")>]
            member __.setAttributeNS(namespaceURI : string, qualifiedName : string, value : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAttributeNode({args}))"); CompiledName("getAttributeNode")>]
            member __.getAttributeNode(name : string) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.fireEvent({args}))"); CompiledName("fireEvent1")>]
            member __.fireEvent(eventName : string, ?eventObj : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"a\"))"); CompiledName("getElementsByTagName122")>]
            member __.getElementsByTagName_a() : NodeListOf<HTMLAnchorElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"abbr\"))"); CompiledName("getElementsByTagName123")>]
            member __.getElementsByTagName_abbr() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"acronym\"))"); CompiledName("getElementsByTagName124")>]
            member __.getElementsByTagName_acronym() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"address\"))"); CompiledName("getElementsByTagName125")>]
            member __.getElementsByTagName_address() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"applet\"))"); CompiledName("getElementsByTagName126")>]
            member __.getElementsByTagName_applet() : NodeListOf<HTMLAppletElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"area\"))"); CompiledName("getElementsByTagName127")>]
            member __.getElementsByTagName_area() : NodeListOf<HTMLAreaElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"article\"))"); CompiledName("getElementsByTagName128")>]
            member __.getElementsByTagName_article() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"aside\"))"); CompiledName("getElementsByTagName129")>]
            member __.getElementsByTagName_aside() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"audio\"))"); CompiledName("getElementsByTagName130")>]
            member __.getElementsByTagName_audio() : NodeListOf<HTMLAudioElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"b\"))"); CompiledName("getElementsByTagName131")>]
            member __.getElementsByTagName_b() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"base\"))"); CompiledName("getElementsByTagName132")>]
            member __.getElementsByTagName_base() : NodeListOf<HTMLBaseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"basefont\"))"); CompiledName("getElementsByTagName133")>]
            member __.getElementsByTagName_basefont() : NodeListOf<HTMLBaseFontElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"bdo\"))"); CompiledName("getElementsByTagName134")>]
            member __.getElementsByTagName_bdo() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"bgsound\"))"); CompiledName("getElementsByTagName135")>]
            member __.getElementsByTagName_bgsound() : NodeListOf<HTMLBGSoundElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"big\"))"); CompiledName("getElementsByTagName136")>]
            member __.getElementsByTagName_big() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"blockquote\"))"); CompiledName("getElementsByTagName137")>]
            member __.getElementsByTagName_blockquote() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"body\"))"); CompiledName("getElementsByTagName138")>]
            member __.getElementsByTagName_body() : NodeListOf<HTMLBodyElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"br\"))"); CompiledName("getElementsByTagName139")>]
            member __.getElementsByTagName_br() : NodeListOf<HTMLBRElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"button\"))"); CompiledName("getElementsByTagName140")>]
            member __.getElementsByTagName_button() : NodeListOf<HTMLButtonElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"canvas\"))"); CompiledName("getElementsByTagName141")>]
            member __.getElementsByTagName_canvas() : NodeListOf<HTMLCanvasElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"caption\"))"); CompiledName("getElementsByTagName142")>]
            member __.getElementsByTagName_caption() : NodeListOf<HTMLTableCaptionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"center\"))"); CompiledName("getElementsByTagName143")>]
            member __.getElementsByTagName_center() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"cite\"))"); CompiledName("getElementsByTagName144")>]
            member __.getElementsByTagName_cite() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"code\"))"); CompiledName("getElementsByTagName145")>]
            member __.getElementsByTagName_code() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"col\"))"); CompiledName("getElementsByTagName146")>]
            member __.getElementsByTagName_col() : NodeListOf<HTMLTableColElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"colgroup\"))"); CompiledName("getElementsByTagName147")>]
            member __.getElementsByTagName_colgroup() : NodeListOf<HTMLTableColElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"datalist\"))"); CompiledName("getElementsByTagName148")>]
            member __.getElementsByTagName_datalist() : NodeListOf<HTMLDataListElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dd\"))"); CompiledName("getElementsByTagName149")>]
            member __.getElementsByTagName_dd() : NodeListOf<HTMLDDElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"del\"))"); CompiledName("getElementsByTagName150")>]
            member __.getElementsByTagName_del() : NodeListOf<HTMLModElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dfn\"))"); CompiledName("getElementsByTagName151")>]
            member __.getElementsByTagName_dfn() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dir\"))"); CompiledName("getElementsByTagName152")>]
            member __.getElementsByTagName_dir() : NodeListOf<HTMLDirectoryElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"div\"))"); CompiledName("getElementsByTagName153")>]
            member __.getElementsByTagName_div() : NodeListOf<HTMLDivElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dl\"))"); CompiledName("getElementsByTagName154")>]
            member __.getElementsByTagName_dl() : NodeListOf<HTMLDListElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"dt\"))"); CompiledName("getElementsByTagName155")>]
            member __.getElementsByTagName_dt() : NodeListOf<HTMLDTElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"em\"))"); CompiledName("getElementsByTagName156")>]
            member __.getElementsByTagName_em() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"embed\"))"); CompiledName("getElementsByTagName157")>]
            member __.getElementsByTagName_embed() : NodeListOf<HTMLEmbedElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"fieldset\"))"); CompiledName("getElementsByTagName158")>]
            member __.getElementsByTagName_fieldset() : NodeListOf<HTMLFieldSetElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"figcaption\"))"); CompiledName("getElementsByTagName159")>]
            member __.getElementsByTagName_figcaption() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"figure\"))"); CompiledName("getElementsByTagName160")>]
            member __.getElementsByTagName_figure() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"font\"))"); CompiledName("getElementsByTagName161")>]
            member __.getElementsByTagName_font() : NodeListOf<HTMLFontElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"footer\"))"); CompiledName("getElementsByTagName162")>]
            member __.getElementsByTagName_footer() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"form\"))"); CompiledName("getElementsByTagName163")>]
            member __.getElementsByTagName_form() : NodeListOf<HTMLFormElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"frame\"))"); CompiledName("getElementsByTagName164")>]
            member __.getElementsByTagName_frame() : NodeListOf<HTMLFrameElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"frameset\"))"); CompiledName("getElementsByTagName165")>]
            member __.getElementsByTagName_frameset() : NodeListOf<HTMLFrameSetElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h1\"))"); CompiledName("getElementsByTagName166")>]
            member __.getElementsByTagName_h1() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h2\"))"); CompiledName("getElementsByTagName167")>]
            member __.getElementsByTagName_h2() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h3\"))"); CompiledName("getElementsByTagName168")>]
            member __.getElementsByTagName_h3() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h4\"))"); CompiledName("getElementsByTagName169")>]
            member __.getElementsByTagName_h4() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h5\"))"); CompiledName("getElementsByTagName170")>]
            member __.getElementsByTagName_h5() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"h6\"))"); CompiledName("getElementsByTagName171")>]
            member __.getElementsByTagName_h6() : NodeListOf<HTMLHeadingElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"head\"))"); CompiledName("getElementsByTagName172")>]
            member __.getElementsByTagName_head() : NodeListOf<HTMLHeadElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"header\"))"); CompiledName("getElementsByTagName173")>]
            member __.getElementsByTagName_header() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"hgroup\"))"); CompiledName("getElementsByTagName174")>]
            member __.getElementsByTagName_hgroup() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"hr\"))"); CompiledName("getElementsByTagName175")>]
            member __.getElementsByTagName_hr() : NodeListOf<HTMLHRElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"html\"))"); CompiledName("getElementsByTagName176")>]
            member __.getElementsByTagName_html() : NodeListOf<HTMLHtmlElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"i\"))"); CompiledName("getElementsByTagName177")>]
            member __.getElementsByTagName_i() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"iframe\"))"); CompiledName("getElementsByTagName178")>]
            member __.getElementsByTagName_iframe() : NodeListOf<HTMLIFrameElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"img\"))"); CompiledName("getElementsByTagName179")>]
            member __.getElementsByTagName_img() : NodeListOf<HTMLImageElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"input\"))"); CompiledName("getElementsByTagName180")>]
            member __.getElementsByTagName_input() : NodeListOf<HTMLInputElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"ins\"))"); CompiledName("getElementsByTagName181")>]
            member __.getElementsByTagName_ins() : NodeListOf<HTMLModElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"isindex\"))"); CompiledName("getElementsByTagName182")>]
            member __.getElementsByTagName_isindex() : NodeListOf<HTMLIsIndexElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"kbd\"))"); CompiledName("getElementsByTagName183")>]
            member __.getElementsByTagName_kbd() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"keygen\"))"); CompiledName("getElementsByTagName184")>]
            member __.getElementsByTagName_keygen() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"label\"))"); CompiledName("getElementsByTagName185")>]
            member __.getElementsByTagName_label() : NodeListOf<HTMLLabelElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"legend\"))"); CompiledName("getElementsByTagName186")>]
            member __.getElementsByTagName_legend() : NodeListOf<HTMLLegendElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"li\"))"); CompiledName("getElementsByTagName187")>]
            member __.getElementsByTagName_li() : NodeListOf<HTMLLIElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"link\"))"); CompiledName("getElementsByTagName188")>]
            member __.getElementsByTagName_link() : NodeListOf<HTMLLinkElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"listing\"))"); CompiledName("getElementsByTagName189")>]
            member __.getElementsByTagName_listing() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"map\"))"); CompiledName("getElementsByTagName190")>]
            member __.getElementsByTagName_map() : NodeListOf<HTMLMapElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"mark\"))"); CompiledName("getElementsByTagName191")>]
            member __.getElementsByTagName_mark() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"marquee\"))"); CompiledName("getElementsByTagName192")>]
            member __.getElementsByTagName_marquee() : NodeListOf<HTMLMarqueeElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"menu\"))"); CompiledName("getElementsByTagName193")>]
            member __.getElementsByTagName_menu() : NodeListOf<HTMLMenuElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"meta\"))"); CompiledName("getElementsByTagName194")>]
            member __.getElementsByTagName_meta() : NodeListOf<HTMLMetaElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"nav\"))"); CompiledName("getElementsByTagName195")>]
            member __.getElementsByTagName_nav() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"nextid\"))"); CompiledName("getElementsByTagName196")>]
            member __.getElementsByTagName_nextid() : NodeListOf<HTMLNextIdElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"nobr\"))"); CompiledName("getElementsByTagName197")>]
            member __.getElementsByTagName_nobr() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"noframes\"))"); CompiledName("getElementsByTagName198")>]
            member __.getElementsByTagName_noframes() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"noscript\"))"); CompiledName("getElementsByTagName199")>]
            member __.getElementsByTagName_noscript() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"object\"))"); CompiledName("getElementsByTagName200")>]
            member __.getElementsByTagName_object() : NodeListOf<HTMLObjectElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"ol\"))"); CompiledName("getElementsByTagName201")>]
            member __.getElementsByTagName_ol() : NodeListOf<HTMLOListElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"optgroup\"))"); CompiledName("getElementsByTagName202")>]
            member __.getElementsByTagName_optgroup() : NodeListOf<HTMLOptGroupElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"option\"))"); CompiledName("getElementsByTagName203")>]
            member __.getElementsByTagName_option() : NodeListOf<HTMLOptionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"p\"))"); CompiledName("getElementsByTagName204")>]
            member __.getElementsByTagName_p() : NodeListOf<HTMLParagraphElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"param\"))"); CompiledName("getElementsByTagName205")>]
            member __.getElementsByTagName_param() : NodeListOf<HTMLParamElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"plaintext\"))"); CompiledName("getElementsByTagName206")>]
            member __.getElementsByTagName_plaintext() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"pre\"))"); CompiledName("getElementsByTagName207")>]
            member __.getElementsByTagName_pre() : NodeListOf<HTMLPreElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"progress\"))"); CompiledName("getElementsByTagName208")>]
            member __.getElementsByTagName_progress() : NodeListOf<HTMLProgressElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"q\"))"); CompiledName("getElementsByTagName209")>]
            member __.getElementsByTagName_q() : NodeListOf<HTMLQuoteElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"rt\"))"); CompiledName("getElementsByTagName210")>]
            member __.getElementsByTagName_rt() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"ruby\"))"); CompiledName("getElementsByTagName211")>]
            member __.getElementsByTagName_ruby() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"s\"))"); CompiledName("getElementsByTagName212")>]
            member __.getElementsByTagName_s() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"samp\"))"); CompiledName("getElementsByTagName213")>]
            member __.getElementsByTagName_samp() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"script\"))"); CompiledName("getElementsByTagName214")>]
            member __.getElementsByTagName_script() : NodeListOf<HTMLScriptElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"section\"))"); CompiledName("getElementsByTagName215")>]
            member __.getElementsByTagName_section() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"select\"))"); CompiledName("getElementsByTagName216")>]
            member __.getElementsByTagName_select() : NodeListOf<HTMLSelectElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"small\"))"); CompiledName("getElementsByTagName217")>]
            member __.getElementsByTagName_small() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"SOURCE\"))"); CompiledName("getElementsByTagName218")>]
            member __.getElementsByTagName_SOURCE() : NodeListOf<HTMLSourceElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"span\"))"); CompiledName("getElementsByTagName219")>]
            member __.getElementsByTagName_span() : NodeListOf<HTMLSpanElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"strike\"))"); CompiledName("getElementsByTagName220")>]
            member __.getElementsByTagName_strike() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"strong\"))"); CompiledName("getElementsByTagName221")>]
            member __.getElementsByTagName_strong() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"style\"))"); CompiledName("getElementsByTagName222")>]
            member __.getElementsByTagName_style() : NodeListOf<HTMLStyleElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"sub\"))"); CompiledName("getElementsByTagName223")>]
            member __.getElementsByTagName_sub() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"sup\"))"); CompiledName("getElementsByTagName224")>]
            member __.getElementsByTagName_sup() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"table\"))"); CompiledName("getElementsByTagName225")>]
            member __.getElementsByTagName_table() : NodeListOf<HTMLTableElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"tbody\"))"); CompiledName("getElementsByTagName226")>]
            member __.getElementsByTagName_tbody() : NodeListOf<HTMLTableSectionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"td\"))"); CompiledName("getElementsByTagName227")>]
            member __.getElementsByTagName_td() : NodeListOf<HTMLTableDataCellElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"textarea\"))"); CompiledName("getElementsByTagName228")>]
            member __.getElementsByTagName_textarea() : NodeListOf<HTMLTextAreaElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"tfoot\"))"); CompiledName("getElementsByTagName229")>]
            member __.getElementsByTagName_tfoot() : NodeListOf<HTMLTableSectionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"th\"))"); CompiledName("getElementsByTagName230")>]
            member __.getElementsByTagName_th() : NodeListOf<HTMLTableHeaderCellElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"thead\"))"); CompiledName("getElementsByTagName231")>]
            member __.getElementsByTagName_thead() : NodeListOf<HTMLTableSectionElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"title\"))"); CompiledName("getElementsByTagName232")>]
            member __.getElementsByTagName_title() : NodeListOf<HTMLTitleElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"tr\"))"); CompiledName("getElementsByTagName233")>]
            member __.getElementsByTagName_tr() : NodeListOf<HTMLTableRowElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"track\"))"); CompiledName("getElementsByTagName234")>]
            member __.getElementsByTagName_track() : NodeListOf<HTMLTrackElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"tt\"))"); CompiledName("getElementsByTagName235")>]
            member __.getElementsByTagName_tt() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"u\"))"); CompiledName("getElementsByTagName236")>]
            member __.getElementsByTagName_u() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"ul\"))"); CompiledName("getElementsByTagName237")>]
            member __.getElementsByTagName_ul() : NodeListOf<HTMLUListElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"var\"))"); CompiledName("getElementsByTagName238")>]
            member __.getElementsByTagName_var() : NodeListOf<HTMLPhraseElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"video\"))"); CompiledName("getElementsByTagName239")>]
            member __.getElementsByTagName_video() : NodeListOf<HTMLVideoElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"wbr\"))"); CompiledName("getElementsByTagName240")>]
            member __.getElementsByTagName_wbr() : NodeListOf<HTMLElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"x-ms-webview\"))"); CompiledName("getElementsByTagName241")>]
            member __.getElementsByTagName_x_ms_webview() : NodeListOf<MSHTMLWebViewElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName(\"xmp\"))"); CompiledName("getElementsByTagName242")>]
            member __.getElementsByTagName_xmp() : NodeListOf<HTMLBlockElement> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByTagName({args}))"); CompiledName("getElementsByTagName243")>]
            member __.getElementsByTagName(name : string) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.getClientRects())"); CompiledName("getClientRects")>]
            member __.getClientRects() : ClientRectList = failwith "never"
            [<FunScript.JSEmitInline("({0}.setAttributeNode({args}))"); CompiledName("setAttributeNode")>]
            member __.setAttributeNode(newAttr : Attr) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeAttributeNode({args}))"); CompiledName("removeAttributeNode")>]
            member __.removeAttributeNode(oldAttr : Attr) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.setAttribute({args}))"); CompiledName("setAttribute")>]
            member __.setAttribute(?name : string, ?value : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeAttributeNS({args}))"); CompiledName("removeAttributeNS")>]
            member __.removeAttributeNS(namespaceURI : string, localName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGetRegionContent())"); CompiledName("msGetRegionContent")>]
            member __.msGetRegionContent() : MSRangeCollection = failwith "never"
            [<FunScript.JSEmitInline("({0}.msReleasePointerCapture({args}))"); CompiledName("msReleasePointerCapture")>]
            member __.msReleasePointerCapture(pointerId : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msSetPointerCapture({args}))"); CompiledName("msSetPointerCapture")>]
            member __.msSetPointerCapture(pointerId : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msZoomTo({args}))"); CompiledName("msZoomTo")>]
            member __.msZoomTo(args : MsZoomToOptions) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setPointerCapture({args}))"); CompiledName("setPointerCapture")>]
            member __.setPointerCapture(pointerId : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGetUntransformedBounds())"); CompiledName("msGetUntransformedBounds")>]
            member __.msGetUntransformedBounds() : ClientRect = failwith "never"
            [<FunScript.JSEmitInline("({0}.releasePointerCapture({args}))"); CompiledName("releasePointerCapture")>]
            member __.releasePointerCapture(pointerId : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msRequestFullscreen())"); CompiledName("msRequestFullscreen")>]
            member __.msRequestFullscreen() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener222")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener223")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener224")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener225")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener226")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener227")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener228")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener229")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener230")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener231")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener232")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener233")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener234")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener235")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener236")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener237")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener238")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener239")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener240")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener241")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener242")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener243")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener244")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener245")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener246")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener247")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener248")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener249")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener250")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type ElementCSSInlineStyle with 

            [<FunScript.JSEmitInline("({0}.runtimeStyle)"); CompiledName("runtimeStyle")>]
            member __.runtimeStyle with get() : MSStyleCSSProperties = failwith "never" and set (v : MSStyleCSSProperties) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentStyle)"); CompiledName("currentStyle")>]
            member __.currentStyle with get() : MSCurrentStyleCSSProperties = failwith "never" and set (v : MSCurrentStyleCSSProperties) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.doScroll({args}))"); CompiledName("doScroll")>]
            member __.doScroll(?_component : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.componentFromPoint({args}))"); CompiledName("componentFromPoint")>]
            member __.componentFromPoint(x : float, y : float) : string = failwith "never"




    type ElementTraversal with 

            [<FunScript.JSEmitInline("({0}.childElementCount)"); CompiledName("childElementCount")>]
            member __.childElementCount with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousElementSibling)"); CompiledName("previousElementSibling")>]
            member __.previousElementSibling with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastElementChild)"); CompiledName("lastElementChild")>]
            member __.lastElementChild with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nextElementSibling)"); CompiledName("nextElementSibling")>]
            member __.nextElementSibling with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.firstElementChild)"); CompiledName("firstElementChild")>]
            member __.firstElementChild with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"




    type Error with 

            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name7")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.message)"); CompiledName("message1")>]
            member __.message with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type ErrorEvent with 

            [<FunScript.JSEmitInline("({0}.colno)"); CompiledName("colno")>]
            member __.colno with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filename)"); CompiledName("filename")>]
            member __.filename with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.error)"); CompiledName("error2")>]
            member __.error with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineno)"); CompiledName("lineno")>]
            member __.lineno with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.message)"); CompiledName("message2")>]
            member __.message with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initErrorEvent({args}))"); CompiledName("initErrorEvent")>]
            member __.initErrorEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, messageArg : string, filenameArg : string, linenoArg : float) : unit = failwith "never"




    type ErrorEventHandler with 

            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke26")>]
            member __.Invoke(_event : Event, source : string, fileno : float, columnNumber : float) : unit = failwith "never"




    type Event with 

            [<FunScript.JSEmitInline("({0}.timeStamp)"); CompiledName("timeStamp")>]
            member __.timeStamp with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultPrevented)"); CompiledName("defaultPrevented")>]
            member __.defaultPrevented with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isTrusted)"); CompiledName("isTrusted")>]
            member __.isTrusted with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentTarget)"); CompiledName("currentTarget")>]
            member __.currentTarget with get() : EventTarget = failwith "never" and set (v : EventTarget) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cancelBubble)"); CompiledName("cancelBubble")>]
            member __.cancelBubble with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target")>]
            member __.target with get() : EventTarget = failwith "never" and set (v : EventTarget) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.eventPhase)"); CompiledName("eventPhase")>]
            member __.eventPhase with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cancelable)"); CompiledName("cancelable")>]
            member __.cancelable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type4")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.srcElement)"); CompiledName("srcElement")>]
            member __.srcElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bubbles)"); CompiledName("bubbles")>]
            member __.bubbles with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initEvent({args}))"); CompiledName("initEvent")>]
            member __.initEvent(eventTypeArg : string, canBubbleArg : bool, cancelableArg : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stopPropagation())"); CompiledName("stopPropagation")>]
            member __.stopPropagation() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stopImmediatePropagation())"); CompiledName("stopImmediatePropagation")>]
            member __.stopImmediatePropagation() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.preventDefault())"); CompiledName("preventDefault")>]
            member __.preventDefault() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CAPTURING_PHASE)"); CompiledName("CAPTURING_PHASE1")>]
            member __.CAPTURING_PHASE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.AT_TARGET)"); CompiledName("AT_TARGET1")>]
            member __.AT_TARGET with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BUBBLING_PHASE)"); CompiledName("BUBBLING_PHASE1")>]
            member __.BUBBLING_PHASE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type EventException with 

            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code2")>]
            member __.code with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.message)"); CompiledName("message3")>]
            member __.message with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name8")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString6")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.DISPATCH_REQUEST_ERR)"); CompiledName("DISPATCH_REQUEST_ERR1")>]
            member __.DISPATCH_REQUEST_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSPECIFIED_EVENT_TYPE_ERR)"); CompiledName("UNSPECIFIED_EVENT_TYPE_ERR1")>]
            member __.UNSPECIFIED_EVENT_TYPE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type EventListener with 

            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke27")>]
            member __.Invoke(evt : Event) : unit = failwith "never"




    type EventTarget with 

            [<FunScript.JSEmitInline("({0}.removeEventListener({args}))"); CompiledName("removeEventListener1")>]
            member __.removeEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener251")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dispatchEvent({args}))"); CompiledName("dispatchEvent1")>]
            member __.dispatchEvent(evt : Event) : bool = failwith "never"




    type ExceptionInformation with 

            [<FunScript.JSEmitInline("({0}.domain)"); CompiledName("domain1")>]
            member __.domain with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type File with 

            [<FunScript.JSEmitInline("({0}.lastModifiedDate)"); CompiledName("lastModifiedDate")>]
            member __.lastModifiedDate with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name9")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type FileList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length12")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item9")>]
            member __.item(index : float) : File = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item10")>]
            member __.Item with get(i : int) : File = failwith "never" and set (i : int) (v : File) : unit = failwith "never"




    type FileReader with 

            [<FunScript.JSEmitInline("({0}.error)"); CompiledName("error3")>]
            member __.error with get() : DOMError = failwith "never" and set (v : DOMError) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readAsArrayBuffer({args}))"); CompiledName("readAsArrayBuffer")>]
            member __.readAsArrayBuffer(blob : Blob) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readAsDataURL({args}))"); CompiledName("readAsDataURL")>]
            member __.readAsDataURL(blob : Blob) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readAsText({args}))"); CompiledName("readAsText")>]
            member __.readAsText(blob : Blob, ?encoding : string) : unit = failwith "never"




    type Float32Array with 

            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT8")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length13")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item11")>]
            member __.Item with get(i : int) : float = failwith "never" and set (i : int) (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get")>]
            member __.get(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set")>]
            member __.set(index : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set1")>]
            member __.set(array : Float32Array, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set2")>]
            member __.set(array : array<float>, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subarray({args}))"); CompiledName("subarray")>]
            member __.subarray(_begin : float, ?_end : float) : Float32Array = failwith "never"




    type Float64Array with 

            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT9")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length14")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item12")>]
            member __.Item with get(i : int) : float = failwith "never" and set (i : int) (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get1")>]
            member __.get(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set3")>]
            member __.set(index : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set4")>]
            member __.set(array : Float64Array, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set5")>]
            member __.set(array : array<float>, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subarray({args}))"); CompiledName("subarray1")>]
            member __.subarray(_begin : float, ?_end : float) : Float64Array = failwith "never"




    type FocusEvent with 

            [<FunScript.JSEmitInline("({0}.relatedTarget)"); CompiledName("relatedTarget")>]
            member __.relatedTarget with get() : EventTarget = failwith "never" and set (v : EventTarget) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initFocusEvent({args}))"); CompiledName("initFocusEvent")>]
            member __.initFocusEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, relatedTargetArg : EventTarget) : unit = failwith "never"




    type FormData with 

            [<FunScript.JSEmitInline("({0}.append({args}))"); CompiledName("append")>]
            member __.append(name : obj, value : obj, ?blobName : string) : unit = failwith "never"




    type FrameRequestCallback with 

            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke28")>]
            member __.Invoke(time : float) : unit = failwith "never"




    type Function with 

            [<FunScript.JSEmitInline("({0}.apply({args}))"); CompiledName("apply")>]
            member __.apply(thisArg : obj, ?argArray : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.call({args}))"); CompiledName("call")>]
            member __.call(thisArg : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.call({args}))"); CompiledName("call1")>]
            member __.callOverload2(thisArg : obj, [<System.ParamArray>] argArray : array<obj>) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.bind({args}))"); CompiledName("bind")>]
            member __.bind(thisArg : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.bind({args}))"); CompiledName("bind1")>]
            member __.bindOverload2(thisArg : obj, [<System.ParamArray>] argArray : array<obj>) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.prototype)"); CompiledName("prototype427")>]
            member __.prototype with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length15")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.arguments)"); CompiledName("arguments")>]
            member __.arguments with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.caller)"); CompiledName("caller")>]
            member __.caller with get() : Function = failwith "never" and set (v : Function) : unit = failwith "never"




    type Geolocation with 

            [<FunScript.JSEmitInline("({0}.clearWatch({args}))"); CompiledName("clearWatch")>]
            member __.clearWatch(watchId : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCurrentPosition({args}))"); CompiledName("getCurrentPosition")>]
            member __.getCurrentPosition(successCallback : PositionCallbackDelegate, ?errorCallback : PositionErrorCallbackDelegate, ?options : PositionOptions) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.watchPosition({args}))"); CompiledName("watchPosition")>]
            member __.watchPosition(successCallback : PositionCallbackDelegate, ?errorCallback : PositionErrorCallbackDelegate, ?options : PositionOptions) : float = failwith "never"




    type GetSVGDocument with 

            [<FunScript.JSEmitInline("({0}.getSVGDocument())"); CompiledName("getSVGDocument")>]
            member __.getSVGDocument() : Document = failwith "never"




    type GlobalEventHandlers with 

            [<FunScript.JSEmitInline("({0}.onpointerenter)"); CompiledName("onpointerenter1")>]
            member __.onpointerenter with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpointerout)"); CompiledName("onpointerout1")>]
            member __.onpointerout with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpointerdown)"); CompiledName("onpointerdown1")>]
            member __.onpointerdown with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpointerup)"); CompiledName("onpointerup1")>]
            member __.onpointerup with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpointercancel)"); CompiledName("onpointercancel1")>]
            member __.onpointercancel with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpointerover)"); CompiledName("onpointerover1")>]
            member __.onpointerover with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpointermove)"); CompiledName("onpointermove1")>]
            member __.onpointermove with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpointerleave)"); CompiledName("onpointerleave1")>]
            member __.onpointerleave with get() : System.Func<PointerEvent, obj> = failwith "never" and set (v : System.Func<PointerEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener252")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener253")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener254")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener255")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener256")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener257")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener258")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener259")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener260")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type HTMLAllCollection with 

            [<FunScript.JSEmitInline("({0}.namedItem({args}))"); CompiledName("namedItem")>]
            member __.namedItem(name : string) : Element = failwith "never"




    type HTMLAnchorElement with 

            [<FunScript.JSEmitInline("({0}.rel)"); CompiledName("rel")>]
            member __.rel with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.protocol)"); CompiledName("protocol")>]
            member __.protocol with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.search)"); CompiledName("search")>]
            member __.search with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.coords)"); CompiledName("coords")>]
            member __.coords with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hostname)"); CompiledName("hostname")>]
            member __.hostname with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pathname)"); CompiledName("pathname")>]
            member __.pathname with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.Methods)"); CompiledName("Methods")>]
            member __.Methods with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target1")>]
            member __.target with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.protocolLong)"); CompiledName("protocolLong")>]
            member __.protocolLong with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href2")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name10")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.charset)"); CompiledName("charset1")>]
            member __.charset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hreflang)"); CompiledName("hreflang")>]
            member __.hreflang with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.port)"); CompiledName("port")>]
            member __.port with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.host)"); CompiledName("host")>]
            member __.host with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hash)"); CompiledName("hash")>]
            member __.hash with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nameProp)"); CompiledName("nameProp")>]
            member __.nameProp with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.urn)"); CompiledName("urn")>]
            member __.urn with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rev)"); CompiledName("rev")>]
            member __.rev with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shape)"); CompiledName("shape")>]
            member __.shape with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type5")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mimeType)"); CompiledName("mimeType")>]
            member __.mimeType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text1")>]
            member __.text with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString7")>]
            member __.toString() : string = failwith "never"




    type HTMLAppletElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width2")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.codeType)"); CompiledName("codeType")>]
            member __.codeType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.object)"); CompiledName("_object")>]
            member __._object with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code3")>]
            member __.code with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.archive)"); CompiledName("archive")>]
            member __.archive with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alt)"); CompiledName("alt")>]
            member __.alt with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.standby)"); CompiledName("standby")>]
            member __.standby with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.classid)"); CompiledName("classid")>]
            member __.classid with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name11")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.useMap)"); CompiledName("useMap")>]
            member __.useMap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data2")>]
            member __.data with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height2")>]
            member __.height with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.altHtml)"); CompiledName("altHtml")>]
            member __.altHtml with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentDocument)"); CompiledName("contentDocument")>]
            member __.contentDocument with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.codeBase)"); CompiledName("codeBase")>]
            member __.codeBase with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.declare)"); CompiledName("declare")>]
            member __.declare with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type6")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BaseHref)"); CompiledName("BaseHref")>]
            member __.BaseHref with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLAreaElement with 

            [<FunScript.JSEmitInline("({0}.protocol)"); CompiledName("protocol1")>]
            member __.protocol with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.search)"); CompiledName("search1")>]
            member __.search with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alt)"); CompiledName("alt1")>]
            member __.alt with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.coords)"); CompiledName("coords1")>]
            member __.coords with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hostname)"); CompiledName("hostname1")>]
            member __.hostname with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.port)"); CompiledName("port1")>]
            member __.port with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pathname)"); CompiledName("pathname1")>]
            member __.pathname with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.host)"); CompiledName("host1")>]
            member __.host with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hash)"); CompiledName("hash1")>]
            member __.hash with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target2")>]
            member __.target with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href3")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.noHref)"); CompiledName("noHref")>]
            member __.noHref with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shape)"); CompiledName("shape1")>]
            member __.shape with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString8")>]
            member __.toString() : string = failwith "never"




    type HTMLAreasCollection with 

            [<FunScript.JSEmitInline("({0}.remove({args}))"); CompiledName("remove2")>]
            member __.remove(?index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.add({args}))"); CompiledName("add2")>]
            member __.add(element : HTMLElement, ?before : obj) : unit = failwith "never"




    type HTMLBGSoundElement with 

            [<FunScript.JSEmitInline("({0}.balance)"); CompiledName("balance")>]
            member __.balance with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.volume)"); CompiledName("volume")>]
            member __.volume with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loop)"); CompiledName("loop")>]
            member __.loop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type HTMLBRElement with 

            [<FunScript.JSEmitInline("({0}.clear)"); CompiledName("clear4")>]
            member __.clear with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLBaseElement with 

            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target3")>]
            member __.target with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href4")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLBaseFontElement with 

            [<FunScript.JSEmitInline("({0}.face)"); CompiledName("face")>]
            member __.face with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.size)"); CompiledName("size2")>]
            member __.size with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type HTMLBlockElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width3")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cite)"); CompiledName("cite")>]
            member __.cite with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLBodyElement with 

            [<FunScript.JSEmitInline("({0}.scroll)"); CompiledName("scroll1")>]
            member __.scroll with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ononline)"); CompiledName("ononline1")>]
            member __.ononline with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onblur)"); CompiledName("onblur2")>]
            member __.onblur with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.noWrap)"); CompiledName("noWrap")>]
            member __.noWrap with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocus)"); CompiledName("onfocus2")>]
            member __.onfocus with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmessage)"); CompiledName("onmessage1")>]
            member __.onmessage with get() : System.Func<MessageEvent, obj> = failwith "never" and set (v : System.Func<MessageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text2")>]
            member __.text with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror5")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bgProperties)"); CompiledName("bgProperties")>]
            member __.bgProperties with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onresize)"); CompiledName("onresize1")>]
            member __.onresize with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.link)"); CompiledName("link")>]
            member __.link with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.aLink)"); CompiledName("aLink")>]
            member __.aLink with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bottomMargin)"); CompiledName("bottomMargin")>]
            member __.bottomMargin with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.topMargin)"); CompiledName("topMargin")>]
            member __.topMargin with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onafterprint)"); CompiledName("onafterprint1")>]
            member __.onafterprint with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vLink)"); CompiledName("vLink")>]
            member __.vLink with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeprint)"); CompiledName("onbeforeprint1")>]
            member __.onbeforeprint with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onoffline)"); CompiledName("onoffline1")>]
            member __.onoffline with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onunload)"); CompiledName("onunload1")>]
            member __.onunload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onhashchange)"); CompiledName("onhashchange1")>]
            member __.onhashchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload2")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rightMargin)"); CompiledName("rightMargin")>]
            member __.rightMargin with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeunload)"); CompiledName("onbeforeunload1")>]
            member __.onbeforeunload with get() : System.Func<BeforeUnloadEvent, obj> = failwith "never" and set (v : System.Func<BeforeUnloadEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.leftMargin)"); CompiledName("leftMargin")>]
            member __.leftMargin with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstorage)"); CompiledName("onstorage1")>]
            member __.onstorage with get() : System.Func<StorageEvent, obj> = failwith "never" and set (v : System.Func<StorageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpopstate)"); CompiledName("onpopstate1")>]
            member __.onpopstate with get() : System.Func<PopStateEvent, obj> = failwith "never" and set (v : System.Func<PopStateEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpageshow)"); CompiledName("onpageshow1")>]
            member __.onpageshow with get() : System.Func<PageTransitionEvent, obj> = failwith "never" and set (v : System.Func<PageTransitionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpagehide)"); CompiledName("onpagehide1")>]
            member __.onpagehide with get() : System.Func<PageTransitionEvent, obj> = failwith "never" and set (v : System.Func<PageTransitionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTextRange())"); CompiledName("createTextRange")>]
            member __.createTextRange() : TextRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener261")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener262")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener263")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener264")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener265")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener266")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener267")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener268")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener269")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener270")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener271")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener272")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener273")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener274")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener275")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener276")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener277")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener278")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener279")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener280")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener281")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener282")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener283")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener284")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener285")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener286")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener287")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener288")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener289")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecut\", {args})"); CompiledName("addEventListener290")>]
            member __.addEventListener_beforecut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener291")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"move\", {args})"); CompiledName("addEventListener292")>]
            member __.addEventListener_move(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener293")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener294")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener295")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener296")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener297")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener298")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener299")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener300")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener301")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener302")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener303")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener304")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener305")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener306")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener307")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"losecapture\", {args})"); CompiledName("addEventListener308")>]
            member __.addEventListener_losecapture(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener309")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener310")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener311")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener312")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"layoutcomplete\", {args})"); CompiledName("addEventListener313")>]
            member __.addEventListener_layoutcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener314")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener315")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener316")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"filterchange\", {args})"); CompiledName("addEventListener317")>]
            member __.addEventListener_filterchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener318")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener319")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener320")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener321")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener322")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener323")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener324")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener325")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener326")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener327")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener328")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener329")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforepaste\", {args})"); CompiledName("addEventListener330")>]
            member __.addEventListener_beforepaste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener331")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener332")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener333")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecopy\", {args})"); CompiledName("addEventListener334")>]
            member __.addEventListener_beforecopy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener335")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener336")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener337")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener338")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener339")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener340")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizestart\", {args})"); CompiledName("addEventListener341")>]
            member __.addEventListener_resizestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"paste\", {args})"); CompiledName("addEventListener342")>]
            member __.addEventListener_paste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"moveend\", {args})"); CompiledName("addEventListener343")>]
            member __.addEventListener_moveend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener344")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener345")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener346")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener347")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener348")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener349")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener350")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener351")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener352")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener353")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener354")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizeend\", {args})"); CompiledName("addEventListener355")>]
            member __.addEventListener_resizeend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener356")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener357")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener358")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener359")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener360")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener361")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener362")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener363")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener364")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"movestart\", {args})"); CompiledName("addEventListener365")>]
            member __.addEventListener_movestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener366")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener367")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener368")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener369")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cut\", {args})"); CompiledName("addEventListener370")>]
            member __.addEventListener_cut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener371")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener372")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"copy\", {args})"); CompiledName("addEventListener373")>]
            member __.addEventListener_copy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener374")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener375")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener376")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener377")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener378")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener379")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener380")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener381")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"online\", {args})"); CompiledName("addEventListener382")>]
            member __.addEventListener_online(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"message\", {args})"); CompiledName("addEventListener383")>]
            member __.addEventListener_message(listener : System.Func<MessageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterprint\", {args})"); CompiledName("addEventListener384")>]
            member __.addEventListener_afterprint(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeprint\", {args})"); CompiledName("addEventListener385")>]
            member __.addEventListener_beforeprint(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"offline\", {args})"); CompiledName("addEventListener386")>]
            member __.addEventListener_offline(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"unload\", {args})"); CompiledName("addEventListener387")>]
            member __.addEventListener_unload(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"hashchange\", {args})"); CompiledName("addEventListener388")>]
            member __.addEventListener_hashchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeunload\", {args})"); CompiledName("addEventListener389")>]
            member __.addEventListener_beforeunload(listener : System.Func<BeforeUnloadEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"storage\", {args})"); CompiledName("addEventListener390")>]
            member __.addEventListener_storage(listener : System.Func<StorageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"popstate\", {args})"); CompiledName("addEventListener391")>]
            member __.addEventListener_popstate(listener : System.Func<PopStateEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pageshow\", {args})"); CompiledName("addEventListener392")>]
            member __.addEventListener_pageshow(listener : System.Func<PageTransitionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pagehide\", {args})"); CompiledName("addEventListener393")>]
            member __.addEventListener_pagehide(listener : System.Func<PageTransitionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener394")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type HTMLButtonElement with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value2")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.status)"); CompiledName("status2")>]
            member __.status with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form1")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name12")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type7")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validationMessage)"); CompiledName("validationMessage")>]
            member __.validationMessage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formTarget)"); CompiledName("formTarget")>]
            member __.formTarget with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.willValidate)"); CompiledName("willValidate")>]
            member __.willValidate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formAction)"); CompiledName("formAction")>]
            member __.formAction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.autofocus)"); CompiledName("autofocus")>]
            member __.autofocus with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validity)"); CompiledName("validity")>]
            member __.validity with get() : ValidityState = failwith "never" and set (v : ValidityState) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formNoValidate)"); CompiledName("formNoValidate")>]
            member __.formNoValidate with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formEnctype)"); CompiledName("formEnctype")>]
            member __.formEnctype with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formMethod)"); CompiledName("formMethod")>]
            member __.formMethod with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTextRange())"); CompiledName("createTextRange1")>]
            member __.createTextRange() : TextRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkValidity())"); CompiledName("checkValidity")>]
            member __.checkValidity() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.setCustomValidity({args}))"); CompiledName("setCustomValidity")>]
            member __.setCustomValidity(error : string) : unit = failwith "never"




    type HTMLCanvasElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width4")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height3")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getContext(\"2d\"))"); CompiledName("getContext")>]
            member __.getContext_2d() : CanvasRenderingContext2D = failwith "never"
            [<FunScript.JSEmitInline("({0}.getContext(\"experimental-webgl\"))"); CompiledName("getContext1")>]
            member __.getContext_experimental_webgl() : WebGLRenderingContext = failwith "never"
            [<FunScript.JSEmitInline("({0}.getContext({args}))"); CompiledName("getContext2")>]
            member __.getContext(contextId : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getContext({args}))"); CompiledName("getContext3")>]
            member __.getContextOverload2(contextId : string, [<System.ParamArray>] args : array<obj>) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.toDataURL({args}))"); CompiledName("toDataURL")>]
            member __.toDataURL(?_type : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toDataURL({args}))"); CompiledName("toDataURL1")>]
            member __.toDataURL(_type : string, [<System.ParamArray>] args : array<obj>) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.msToBlob())"); CompiledName("msToBlob")>]
            member __.msToBlob() : Blob = failwith "never"




    type HTMLCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length16")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item10")>]
            member __.item(?nameOrIndex : obj, ?optionalIndex : obj) : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}.namedItem({args}))"); CompiledName("namedItem1")>]
            member __.namedItem(name : string) : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item13")>]
            member __.Item with get(i : int) : Element = failwith "never" and set (i : int) (v : Element) : unit = failwith "never"




    type HTMLDDElement with 

            [<FunScript.JSEmitInline("({0}.noWrap)"); CompiledName("noWrap1")>]
            member __.noWrap with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type HTMLDTElement with 

            [<FunScript.JSEmitInline("({0}.noWrap)"); CompiledName("noWrap2")>]
            member __.noWrap with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type HTMLDataListElement with 

            [<FunScript.JSEmitInline("({0}.options)"); CompiledName("options")>]
            member __.options with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"




    type HTMLDivElement with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align1")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.noWrap)"); CompiledName("noWrap3")>]
            member __.noWrap with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type HTMLElement with 

            [<FunScript.JSEmitInline("({0}.hidden)"); CompiledName("hidden1")>]
            member __.hidden with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState1")>]
            member __.readyState with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseleave)"); CompiledName("onmouseleave1")>]
            member __.onmouseleave with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforecut)"); CompiledName("onbeforecut")>]
            member __.onbeforecut with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeydown)"); CompiledName("onkeydown2")>]
            member __.onkeydown with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmove)"); CompiledName("onmove")>]
            member __.onmove with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeyup)"); CompiledName("onkeyup2")>]
            member __.onkeyup with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onreset)"); CompiledName("onreset2")>]
            member __.onreset with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onhelp)"); CompiledName("onhelp2")>]
            member __.onhelp with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragleave)"); CompiledName("ondragleave2")>]
            member __.ondragleave with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.className)"); CompiledName("className")>]
            member __.className with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocusin)"); CompiledName("onfocusin2")>]
            member __.onfocusin with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onseeked)"); CompiledName("onseeked2")>]
            member __.onseeked with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.recordNumber)"); CompiledName("recordNumber")>]
            member __.recordNumber with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.title)"); CompiledName("title1")>]
            member __.title with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentTextEdit)"); CompiledName("parentTextEdit")>]
            member __.parentTextEdit with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.outerHTML)"); CompiledName("outerHTML")>]
            member __.outerHTML with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondurationchange)"); CompiledName("ondurationchange2")>]
            member __.ondurationchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetHeight)"); CompiledName("offsetHeight")>]
            member __.offsetHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.all)"); CompiledName("all1")>]
            member __.all with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onblur)"); CompiledName("onblur3")>]
            member __.onblur with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dir)"); CompiledName("dir3")>]
            member __.dir with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onemptied)"); CompiledName("onemptied2")>]
            member __.onemptied with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onseeking)"); CompiledName("onseeking2")>]
            member __.onseeking with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncanplay)"); CompiledName("oncanplay2")>]
            member __.oncanplay with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondeactivate)"); CompiledName("ondeactivate1")>]
            member __.ondeactivate with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondatasetchanged)"); CompiledName("ondatasetchanged1")>]
            member __.ondatasetchanged with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onrowsdelete)"); CompiledName("onrowsdelete1")>]
            member __.onrowsdelete with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sourceIndex)"); CompiledName("sourceIndex")>]
            member __.sourceIndex with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadstart)"); CompiledName("onloadstart2")>]
            member __.onloadstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onlosecapture)"); CompiledName("onlosecapture")>]
            member __.onlosecapture with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragenter)"); CompiledName("ondragenter2")>]
            member __.ondragenter with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncontrolselect)"); CompiledName("oncontrolselect1")>]
            member __.oncontrolselect with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onsubmit)"); CompiledName("onsubmit2")>]
            member __.onsubmit with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.behaviorUrns)"); CompiledName("behaviorUrns")>]
            member __.behaviorUrns with get() : MSBehaviorUrnsCollection = failwith "never" and set (v : MSBehaviorUrnsCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scopeName)"); CompiledName("scopeName")>]
            member __.scopeName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onchange)"); CompiledName("onchange3")>]
            member __.onchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.id)"); CompiledName("id2")>]
            member __.id with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onlayoutcomplete)"); CompiledName("onlayoutcomplete")>]
            member __.onlayoutcomplete with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniqueID)"); CompiledName("uniqueID1")>]
            member __.uniqueID with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeactivate)"); CompiledName("onbeforeactivate1")>]
            member __.onbeforeactivate with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncanplaythrough)"); CompiledName("oncanplaythrough2")>]
            member __.oncanplaythrough with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeupdate)"); CompiledName("onbeforeupdate1")>]
            member __.onbeforeupdate with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfilterchange)"); CompiledName("onfilterchange")>]
            member __.onfilterchange with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetParent)"); CompiledName("offsetParent")>]
            member __.offsetParent with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondatasetcomplete)"); CompiledName("ondatasetcomplete1")>]
            member __.ondatasetcomplete with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onsuspend)"); CompiledName("onsuspend2")>]
            member __.onsuspend with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseenter)"); CompiledName("onmouseenter1")>]
            member __.onmouseenter with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.innerText)"); CompiledName("innerText")>]
            member __.innerText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerrorupdate)"); CompiledName("onerrorupdate1")>]
            member __.onerrorupdate with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseout)"); CompiledName("onmouseout2")>]
            member __.onmouseout with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentElement)"); CompiledName("parentElement")>]
            member __.parentElement with get() : HTMLElement = failwith "never" and set (v : HTMLElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousewheel)"); CompiledName("onmousewheel2")>]
            member __.onmousewheel with get() : System.Func<MouseWheelEvent, obj> = failwith "never" and set (v : System.Func<MouseWheelEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onvolumechange)"); CompiledName("onvolumechange2")>]
            member __.onvolumechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncellchange)"); CompiledName("oncellchange1")>]
            member __.oncellchange with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onrowexit)"); CompiledName("onrowexit1")>]
            member __.onrowexit with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onrowsinserted)"); CompiledName("onrowsinserted1")>]
            member __.onrowsinserted with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpropertychange)"); CompiledName("onpropertychange1")>]
            member __.onpropertychange with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filters)"); CompiledName("filters")>]
            member __.filters with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.children)"); CompiledName("children")>]
            member __.children with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragend)"); CompiledName("ondragend2")>]
            member __.ondragend with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforepaste)"); CompiledName("onbeforepaste")>]
            member __.onbeforepaste with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragover)"); CompiledName("ondragover2")>]
            member __.ondragover with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetTop)"); CompiledName("offsetTop")>]
            member __.offsetTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseup)"); CompiledName("onmouseup2")>]
            member __.onmouseup with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragstart)"); CompiledName("ondragstart2")>]
            member __.ondragstart with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforecopy)"); CompiledName("onbeforecopy")>]
            member __.onbeforecopy with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondrag)"); CompiledName("ondrag2")>]
            member __.ondrag with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.innerHTML)"); CompiledName("innerHTML")>]
            member __.innerHTML with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseover)"); CompiledName("onmouseover2")>]
            member __.onmouseover with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lang)"); CompiledName("lang")>]
            member __.lang with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniqueNumber)"); CompiledName("uniqueNumber")>]
            member __.uniqueNumber with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpause)"); CompiledName("onpause2")>]
            member __.onpause with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tagUrn)"); CompiledName("tagUrn")>]
            member __.tagUrn with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousedown)"); CompiledName("onmousedown2")>]
            member __.onmousedown with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onclick)"); CompiledName("onclick2")>]
            member __.onclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onwaiting)"); CompiledName("onwaiting2")>]
            member __.onwaiting with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onresizestart)"); CompiledName("onresizestart")>]
            member __.onresizestart with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetLeft)"); CompiledName("offsetLeft")>]
            member __.offsetLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isTextEdit)"); CompiledName("isTextEdit")>]
            member __.isTextEdit with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isDisabled)"); CompiledName("isDisabled")>]
            member __.isDisabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpaste)"); CompiledName("onpaste")>]
            member __.onpaste with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.canHaveHTML)"); CompiledName("canHaveHTML")>]
            member __.canHaveHTML with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmoveend)"); CompiledName("onmoveend")>]
            member __.onmoveend with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.language)"); CompiledName("language1")>]
            member __.language with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstalled)"); CompiledName("onstalled2")>]
            member __.onstalled with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousemove)"); CompiledName("onmousemove2")>]
            member __.onmousemove with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.style)"); CompiledName("style4")>]
            member __.style with get() : MSStyleCSSProperties = failwith "never" and set (v : MSStyleCSSProperties) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isContentEditable)"); CompiledName("isContentEditable")>]
            member __.isContentEditable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeeditfocus)"); CompiledName("onbeforeeditfocus1")>]
            member __.onbeforeeditfocus with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onratechange)"); CompiledName("onratechange2")>]
            member __.onratechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentEditable)"); CompiledName("contentEditable")>]
            member __.contentEditable with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tabIndex)"); CompiledName("tabIndex")>]
            member __.tabIndex with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.document)"); CompiledName("document1")>]
            member __.document with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress4")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondblclick)"); CompiledName("ondblclick2")>]
            member __.ondblclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncontextmenu)"); CompiledName("oncontextmenu2")>]
            member __.oncontextmenu with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadedmetadata)"); CompiledName("onloadedmetadata2")>]
            member __.onloadedmetadata with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onafterupdate)"); CompiledName("onafterupdate1")>]
            member __.onafterupdate with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror6")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onplay)"); CompiledName("onplay2")>]
            member __.onplay with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onresizeend)"); CompiledName("onresizeend")>]
            member __.onresizeend with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onplaying)"); CompiledName("onplaying2")>]
            member __.onplaying with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isMultiLine)"); CompiledName("isMultiLine")>]
            member __.isMultiLine with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocusout)"); CompiledName("onfocusout2")>]
            member __.onfocusout with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort3")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondataavailable)"); CompiledName("ondataavailable1")>]
            member __.ondataavailable with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hideFocus)"); CompiledName("hideFocus")>]
            member __.hideFocus with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onreadystatechange)"); CompiledName("onreadystatechange2")>]
            member __.onreadystatechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeypress)"); CompiledName("onkeypress2")>]
            member __.onkeypress with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadeddata)"); CompiledName("onloadeddata2")>]
            member __.onloadeddata with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforedeactivate)"); CompiledName("onbeforedeactivate1")>]
            member __.onbeforedeactivate with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.outerText)"); CompiledName("outerText")>]
            member __.outerText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.disabled)"); CompiledName("disabled")>]
            member __.disabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onactivate)"); CompiledName("onactivate1")>]
            member __.onactivate with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.accessKey)"); CompiledName("accessKey")>]
            member __.accessKey with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmovestart)"); CompiledName("onmovestart")>]
            member __.onmovestart with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onselectstart)"); CompiledName("onselectstart1")>]
            member __.onselectstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocus)"); CompiledName("onfocus3")>]
            member __.onfocus with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ontimeupdate)"); CompiledName("ontimeupdate2")>]
            member __.ontimeupdate with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onresize)"); CompiledName("onresize2")>]
            member __.onresize with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncut)"); CompiledName("oncut")>]
            member __.oncut with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onselect)"); CompiledName("onselect2")>]
            member __.onselect with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondrop)"); CompiledName("ondrop2")>]
            member __.ondrop with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetWidth)"); CompiledName("offsetWidth")>]
            member __.offsetWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncopy)"); CompiledName("oncopy")>]
            member __.oncopy with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onended)"); CompiledName("onended2")>]
            member __.onended with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onscroll)"); CompiledName("onscroll2")>]
            member __.onscroll with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onrowenter)"); CompiledName("onrowenter1")>]
            member __.onrowenter with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload3")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.canHaveChildren)"); CompiledName("canHaveChildren")>]
            member __.canHaveChildren with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oninput)"); CompiledName("oninput2")>]
            member __.oninput with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmscontentzoom)"); CompiledName("onmscontentzoom1")>]
            member __.onmscontentzoom with get() : System.Func<MSEventObj, obj> = failwith "never" and set (v : System.Func<MSEventObj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncuechange)"); CompiledName("oncuechange")>]
            member __.oncuechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.spellcheck)"); CompiledName("spellcheck")>]
            member __.spellcheck with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.classList)"); CompiledName("classList")>]
            member __.classList with get() : DOMTokenList = failwith "never" and set (v : DOMTokenList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsmanipulationstatechanged)"); CompiledName("onmsmanipulationstatechanged1")>]
            member __.onmsmanipulationstatechanged with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.draggable)"); CompiledName("draggable")>]
            member __.draggable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dataset)"); CompiledName("dataset")>]
            member __.dataset with get() : DOMStringMap = failwith "never" and set (v : DOMStringMap) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dragDrop())"); CompiledName("dragDrop")>]
            member __.dragDrop() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollIntoView({args}))"); CompiledName("scrollIntoView1")>]
            member __.scrollIntoView(?top : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addFilter({args}))"); CompiledName("addFilter")>]
            member __.addFilter(filter : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setCapture({args}))"); CompiledName("setCapture")>]
            member __.setCapture(?containerCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.focus())"); CompiledName("focus2")>]
            member __.focus() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAdjacentText({args}))"); CompiledName("getAdjacentText")>]
            member __.getAdjacentText(_where : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertAdjacentText({args}))"); CompiledName("insertAdjacentText")>]
            member __.insertAdjacentText(_where : string, text : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementsByClassName({args}))"); CompiledName("getElementsByClassName1")>]
            member __.getElementsByClassName(classNames : string) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.setActive())"); CompiledName("setActive")>]
            member __.setActive() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeFilter({args}))"); CompiledName("removeFilter")>]
            member __.removeFilter(filter : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.blur())"); CompiledName("blur1")>]
            member __.blur() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearAttributes())"); CompiledName("clearAttributes")>]
            member __.clearAttributes() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.releaseCapture())"); CompiledName("releaseCapture1")>]
            member __.releaseCapture() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createControlRange())"); CompiledName("createControlRange")>]
            member __.createControlRange() : ControlRangeCollection = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeBehavior({args}))"); CompiledName("removeBehavior")>]
            member __.removeBehavior(cookie : float) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.contains({args}))"); CompiledName("contains2")>]
            member __.contains(child : HTMLElement) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.click())"); CompiledName("click")>]
            member __.click() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertAdjacentElement({args}))"); CompiledName("insertAdjacentElement")>]
            member __.insertAdjacentElement(position : string, insertedElement : Element) : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}.mergeAttributes({args}))"); CompiledName("mergeAttributes")>]
            member __.mergeAttributes(source : HTMLElement, ?preserveIdentity : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceAdjacentText({args}))"); CompiledName("replaceAdjacentText")>]
            member __.replaceAdjacentText(_where : string, newText : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.applyElement({args}))"); CompiledName("applyElement")>]
            member __.applyElement(apply : Element, ?_where : string) : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}.addBehavior({args}))"); CompiledName("addBehavior")>]
            member __.addBehavior(bstrUrl : string, ?factory : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertAdjacentHTML({args}))"); CompiledName("insertAdjacentHTML")>]
            member __.insertAdjacentHTML(_where : string, html : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGetInputContext())"); CompiledName("msGetInputContext")>]
            member __.msGetInputContext() : MSInputMethodContext = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener395")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener396")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener397")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener398")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener399")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener400")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener401")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener402")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener403")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener404")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener405")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener406")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener407")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener408")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener409")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener410")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener411")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener412")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener413")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener414")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener415")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener416")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener417")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener418")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener419")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener420")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener421")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener422")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener423")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecut\", {args})"); CompiledName("addEventListener424")>]
            member __.addEventListener_beforecut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener425")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"move\", {args})"); CompiledName("addEventListener426")>]
            member __.addEventListener_move(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener427")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener428")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener429")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener430")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener431")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener432")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener433")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener434")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener435")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener436")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener437")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener438")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener439")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener440")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener441")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"losecapture\", {args})"); CompiledName("addEventListener442")>]
            member __.addEventListener_losecapture(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener443")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener444")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener445")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener446")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"layoutcomplete\", {args})"); CompiledName("addEventListener447")>]
            member __.addEventListener_layoutcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener448")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener449")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener450")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"filterchange\", {args})"); CompiledName("addEventListener451")>]
            member __.addEventListener_filterchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener452")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener453")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener454")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener455")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener456")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener457")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener458")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener459")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener460")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener461")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener462")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener463")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforepaste\", {args})"); CompiledName("addEventListener464")>]
            member __.addEventListener_beforepaste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener465")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener466")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener467")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecopy\", {args})"); CompiledName("addEventListener468")>]
            member __.addEventListener_beforecopy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener469")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener470")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener471")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener472")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener473")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener474")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizestart\", {args})"); CompiledName("addEventListener475")>]
            member __.addEventListener_resizestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"paste\", {args})"); CompiledName("addEventListener476")>]
            member __.addEventListener_paste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"moveend\", {args})"); CompiledName("addEventListener477")>]
            member __.addEventListener_moveend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener478")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener479")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener480")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener481")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener482")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener483")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener484")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener485")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener486")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener487")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener488")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizeend\", {args})"); CompiledName("addEventListener489")>]
            member __.addEventListener_resizeend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener490")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener491")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener492")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener493")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener494")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener495")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener496")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener497")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener498")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"movestart\", {args})"); CompiledName("addEventListener499")>]
            member __.addEventListener_movestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener500")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener501")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener502")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener503")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cut\", {args})"); CompiledName("addEventListener504")>]
            member __.addEventListener_cut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener505")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener506")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"copy\", {args})"); CompiledName("addEventListener507")>]
            member __.addEventListener_copy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener508")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener509")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener510")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener511")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener512")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener513")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener514")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener515")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener516")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type HTMLEmbedElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width5")>]
            member __.width with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.palette)"); CompiledName("palette")>]
            member __.palette with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src1")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name13")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hidden)"); CompiledName("hidden2")>]
            member __.hidden with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pluginspage)"); CompiledName("pluginspage")>]
            member __.pluginspage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height4")>]
            member __.height with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.units)"); CompiledName("units")>]
            member __.units with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToPreferredSourceUri)"); CompiledName("msPlayToPreferredSourceUri")>]
            member __.msPlayToPreferredSourceUri with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToPrimary)"); CompiledName("msPlayToPrimary")>]
            member __.msPlayToPrimary with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToDisabled)"); CompiledName("msPlayToDisabled")>]
            member __.msPlayToDisabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState2")>]
            member __.readyState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToSource)"); CompiledName("msPlayToSource")>]
            member __.msPlayToSource with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"




    type HTMLFieldSetElement with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align2")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form2")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validationMessage)"); CompiledName("validationMessage1")>]
            member __.validationMessage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validity)"); CompiledName("validity1")>]
            member __.validity with get() : ValidityState = failwith "never" and set (v : ValidityState) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.willValidate)"); CompiledName("willValidate1")>]
            member __.willValidate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkValidity())"); CompiledName("checkValidity1")>]
            member __.checkValidity() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.setCustomValidity({args}))"); CompiledName("setCustomValidity1")>]
            member __.setCustomValidity(error : string) : unit = failwith "never"




    type HTMLFontElement with 

            [<FunScript.JSEmitInline("({0}.face)"); CompiledName("face1")>]
            member __.face with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLFormElement with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length17")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target4")>]
            member __.target with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.acceptCharset)"); CompiledName("acceptCharset")>]
            member __.acceptCharset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.enctype)"); CompiledName("enctype")>]
            member __.enctype with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.elements)"); CompiledName("elements")>]
            member __.elements with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.action)"); CompiledName("action")>]
            member __.action with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name14")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.method)"); CompiledName("_method")>]
            member __._method with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.encoding)"); CompiledName("encoding")>]
            member __.encoding with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.autocomplete)"); CompiledName("autocomplete")>]
            member __.autocomplete with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.noValidate)"); CompiledName("noValidate")>]
            member __.noValidate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.reset())"); CompiledName("reset")>]
            member __.reset() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item11")>]
            member __.item(?name : obj, ?index : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.submit())"); CompiledName("submit")>]
            member __.submit() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.namedItem({args}))"); CompiledName("namedItem2")>]
            member __.namedItem(name : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item14")>]
            member __.Item with get(i : string) : obj = failwith "never" and set (i : string) (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkValidity())"); CompiledName("checkValidity2")>]
            member __.checkValidity() : bool = failwith "never"




    type HTMLFrameElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width6")>]
            member __.width with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrolling)"); CompiledName("scrolling")>]
            member __.scrolling with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marginHeight)"); CompiledName("marginHeight")>]
            member __.marginHeight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marginWidth)"); CompiledName("marginWidth")>]
            member __.marginWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColor)"); CompiledName("borderColor1")>]
            member __.borderColor with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frameSpacing)"); CompiledName("frameSpacing")>]
            member __.frameSpacing with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frameBorder)"); CompiledName("frameBorder")>]
            member __.frameBorder with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.noResize)"); CompiledName("noResize")>]
            member __.noResize with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentWindow)"); CompiledName("contentWindow")>]
            member __.contentWindow with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src2")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name15")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height5")>]
            member __.height with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentDocument)"); CompiledName("contentDocument1")>]
            member __.contentDocument with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.border)"); CompiledName("border2")>]
            member __.border with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.longDesc)"); CompiledName("longDesc")>]
            member __.longDesc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload4")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.security)"); CompiledName("security1")>]
            member __.security with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener517")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener518")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener519")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener520")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener521")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener522")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener523")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener524")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener525")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener526")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener527")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener528")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener529")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener530")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener531")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener532")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener533")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener534")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener535")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener536")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener537")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener538")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener539")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener540")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener541")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener542")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener543")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener544")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener545")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecut\", {args})"); CompiledName("addEventListener546")>]
            member __.addEventListener_beforecut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener547")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"move\", {args})"); CompiledName("addEventListener548")>]
            member __.addEventListener_move(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener549")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener550")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener551")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener552")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener553")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener554")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener555")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener556")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener557")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener558")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener559")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener560")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener561")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener562")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener563")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"losecapture\", {args})"); CompiledName("addEventListener564")>]
            member __.addEventListener_losecapture(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener565")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener566")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener567")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener568")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"layoutcomplete\", {args})"); CompiledName("addEventListener569")>]
            member __.addEventListener_layoutcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener570")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener571")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener572")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"filterchange\", {args})"); CompiledName("addEventListener573")>]
            member __.addEventListener_filterchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener574")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener575")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener576")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener577")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener578")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener579")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener580")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener581")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener582")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener583")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener584")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener585")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforepaste\", {args})"); CompiledName("addEventListener586")>]
            member __.addEventListener_beforepaste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener587")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener588")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener589")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecopy\", {args})"); CompiledName("addEventListener590")>]
            member __.addEventListener_beforecopy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener591")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener592")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener593")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener594")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener595")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener596")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizestart\", {args})"); CompiledName("addEventListener597")>]
            member __.addEventListener_resizestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"paste\", {args})"); CompiledName("addEventListener598")>]
            member __.addEventListener_paste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"moveend\", {args})"); CompiledName("addEventListener599")>]
            member __.addEventListener_moveend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener600")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener601")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener602")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener603")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener604")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener605")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener606")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener607")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener608")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener609")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener610")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizeend\", {args})"); CompiledName("addEventListener611")>]
            member __.addEventListener_resizeend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener612")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener613")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener614")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener615")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener616")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener617")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener618")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener619")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener620")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"movestart\", {args})"); CompiledName("addEventListener621")>]
            member __.addEventListener_movestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener622")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener623")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener624")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener625")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cut\", {args})"); CompiledName("addEventListener626")>]
            member __.addEventListener_cut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener627")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener628")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"copy\", {args})"); CompiledName("addEventListener629")>]
            member __.addEventListener_copy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener630")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener631")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener632")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener633")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener634")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener635")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener636")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener637")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener638")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type HTMLFrameSetElement with 

            [<FunScript.JSEmitInline("({0}.ononline)"); CompiledName("ononline2")>]
            member __.ononline with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColor)"); CompiledName("borderColor2")>]
            member __.borderColor with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rows)"); CompiledName("rows")>]
            member __.rows with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cols)"); CompiledName("cols")>]
            member __.cols with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onblur)"); CompiledName("onblur4")>]
            member __.onblur with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frameSpacing)"); CompiledName("frameSpacing1")>]
            member __.frameSpacing with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocus)"); CompiledName("onfocus4")>]
            member __.onfocus with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmessage)"); CompiledName("onmessage2")>]
            member __.onmessage with get() : System.Func<MessageEvent, obj> = failwith "never" and set (v : System.Func<MessageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror7")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frameBorder)"); CompiledName("frameBorder1")>]
            member __.frameBorder with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onresize)"); CompiledName("onresize3")>]
            member __.onresize with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name16")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onafterprint)"); CompiledName("onafterprint2")>]
            member __.onafterprint with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeprint)"); CompiledName("onbeforeprint2")>]
            member __.onbeforeprint with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onoffline)"); CompiledName("onoffline2")>]
            member __.onoffline with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.border)"); CompiledName("border3")>]
            member __.border with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onunload)"); CompiledName("onunload2")>]
            member __.onunload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onhashchange)"); CompiledName("onhashchange2")>]
            member __.onhashchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload5")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeunload)"); CompiledName("onbeforeunload2")>]
            member __.onbeforeunload with get() : System.Func<BeforeUnloadEvent, obj> = failwith "never" and set (v : System.Func<BeforeUnloadEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstorage)"); CompiledName("onstorage2")>]
            member __.onstorage with get() : System.Func<StorageEvent, obj> = failwith "never" and set (v : System.Func<StorageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpageshow)"); CompiledName("onpageshow2")>]
            member __.onpageshow with get() : System.Func<PageTransitionEvent, obj> = failwith "never" and set (v : System.Func<PageTransitionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpagehide)"); CompiledName("onpagehide2")>]
            member __.onpagehide with get() : System.Func<PageTransitionEvent, obj> = failwith "never" and set (v : System.Func<PageTransitionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener639")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener640")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener641")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener642")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener643")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener644")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener645")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener646")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener647")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener648")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener649")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener650")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener651")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener652")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener653")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener654")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener655")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener656")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener657")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener658")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener659")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener660")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener661")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener662")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener663")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener664")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener665")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener666")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener667")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecut\", {args})"); CompiledName("addEventListener668")>]
            member __.addEventListener_beforecut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener669")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"move\", {args})"); CompiledName("addEventListener670")>]
            member __.addEventListener_move(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener671")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener672")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener673")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener674")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener675")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener676")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener677")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener678")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener679")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener680")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener681")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener682")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener683")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener684")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener685")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"losecapture\", {args})"); CompiledName("addEventListener686")>]
            member __.addEventListener_losecapture(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener687")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener688")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener689")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener690")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"layoutcomplete\", {args})"); CompiledName("addEventListener691")>]
            member __.addEventListener_layoutcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener692")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener693")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener694")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"filterchange\", {args})"); CompiledName("addEventListener695")>]
            member __.addEventListener_filterchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener696")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener697")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener698")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener699")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener700")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener701")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener702")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener703")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener704")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener705")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener706")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener707")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforepaste\", {args})"); CompiledName("addEventListener708")>]
            member __.addEventListener_beforepaste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener709")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener710")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener711")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecopy\", {args})"); CompiledName("addEventListener712")>]
            member __.addEventListener_beforecopy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener713")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener714")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener715")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener716")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener717")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener718")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizestart\", {args})"); CompiledName("addEventListener719")>]
            member __.addEventListener_resizestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"paste\", {args})"); CompiledName("addEventListener720")>]
            member __.addEventListener_paste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"moveend\", {args})"); CompiledName("addEventListener721")>]
            member __.addEventListener_moveend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener722")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener723")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener724")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener725")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener726")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener727")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener728")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener729")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener730")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener731")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener732")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizeend\", {args})"); CompiledName("addEventListener733")>]
            member __.addEventListener_resizeend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener734")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener735")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener736")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener737")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener738")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener739")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener740")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener741")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener742")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"movestart\", {args})"); CompiledName("addEventListener743")>]
            member __.addEventListener_movestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener744")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener745")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener746")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener747")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cut\", {args})"); CompiledName("addEventListener748")>]
            member __.addEventListener_cut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener749")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener750")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"copy\", {args})"); CompiledName("addEventListener751")>]
            member __.addEventListener_copy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener752")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener753")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener754")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener755")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener756")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener757")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener758")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener759")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"online\", {args})"); CompiledName("addEventListener760")>]
            member __.addEventListener_online(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"message\", {args})"); CompiledName("addEventListener761")>]
            member __.addEventListener_message(listener : System.Func<MessageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterprint\", {args})"); CompiledName("addEventListener762")>]
            member __.addEventListener_afterprint(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeprint\", {args})"); CompiledName("addEventListener763")>]
            member __.addEventListener_beforeprint(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"offline\", {args})"); CompiledName("addEventListener764")>]
            member __.addEventListener_offline(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"unload\", {args})"); CompiledName("addEventListener765")>]
            member __.addEventListener_unload(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"hashchange\", {args})"); CompiledName("addEventListener766")>]
            member __.addEventListener_hashchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeunload\", {args})"); CompiledName("addEventListener767")>]
            member __.addEventListener_beforeunload(listener : System.Func<BeforeUnloadEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"storage\", {args})"); CompiledName("addEventListener768")>]
            member __.addEventListener_storage(listener : System.Func<StorageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pageshow\", {args})"); CompiledName("addEventListener769")>]
            member __.addEventListener_pageshow(listener : System.Func<PageTransitionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pagehide\", {args})"); CompiledName("addEventListener770")>]
            member __.addEventListener_pagehide(listener : System.Func<PageTransitionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener771")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type HTMLHRElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width7")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align3")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.noShade)"); CompiledName("noShade")>]
            member __.noShade with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type HTMLHeadElement with 

            [<FunScript.JSEmitInline("({0}.profile)"); CompiledName("profile1")>]
            member __.profile with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLHeadingElement with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align4")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLHtmlElement with 

            [<FunScript.JSEmitInline("({0}.version)"); CompiledName("version")>]
            member __.version with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLIFrameElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width8")>]
            member __.width with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrolling)"); CompiledName("scrolling1")>]
            member __.scrolling with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marginHeight)"); CompiledName("marginHeight1")>]
            member __.marginHeight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.marginWidth)"); CompiledName("marginWidth1")>]
            member __.marginWidth with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frameSpacing)"); CompiledName("frameSpacing2")>]
            member __.frameSpacing with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frameBorder)"); CompiledName("frameBorder2")>]
            member __.frameBorder with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.noResize)"); CompiledName("noResize1")>]
            member __.noResize with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vspace)"); CompiledName("vspace1")>]
            member __.vspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentWindow)"); CompiledName("contentWindow1")>]
            member __.contentWindow with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align5")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src3")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name17")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height6")>]
            member __.height with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.border)"); CompiledName("border4")>]
            member __.border with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentDocument)"); CompiledName("contentDocument2")>]
            member __.contentDocument with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hspace)"); CompiledName("hspace1")>]
            member __.hspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.longDesc)"); CompiledName("longDesc1")>]
            member __.longDesc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.security)"); CompiledName("security2")>]
            member __.security with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload6")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sandbox)"); CompiledName("sandbox")>]
            member __.sandbox with get() : DOMSettableTokenList = failwith "never" and set (v : DOMSettableTokenList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener772")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener773")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener774")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener775")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener776")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener777")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener778")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener779")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener780")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener781")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener782")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener783")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener784")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener785")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener786")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener787")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener788")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener789")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener790")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener791")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener792")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener793")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener794")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener795")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener796")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener797")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener798")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener799")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener800")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecut\", {args})"); CompiledName("addEventListener801")>]
            member __.addEventListener_beforecut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener802")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"move\", {args})"); CompiledName("addEventListener803")>]
            member __.addEventListener_move(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener804")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener805")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener806")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener807")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener808")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener809")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener810")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener811")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener812")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener813")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener814")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener815")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener816")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener817")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener818")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"losecapture\", {args})"); CompiledName("addEventListener819")>]
            member __.addEventListener_losecapture(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener820")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener821")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener822")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener823")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"layoutcomplete\", {args})"); CompiledName("addEventListener824")>]
            member __.addEventListener_layoutcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener825")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener826")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener827")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"filterchange\", {args})"); CompiledName("addEventListener828")>]
            member __.addEventListener_filterchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener829")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener830")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener831")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener832")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener833")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener834")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener835")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener836")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener837")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener838")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener839")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener840")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforepaste\", {args})"); CompiledName("addEventListener841")>]
            member __.addEventListener_beforepaste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener842")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener843")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener844")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecopy\", {args})"); CompiledName("addEventListener845")>]
            member __.addEventListener_beforecopy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener846")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener847")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener848")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener849")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener850")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener851")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizestart\", {args})"); CompiledName("addEventListener852")>]
            member __.addEventListener_resizestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"paste\", {args})"); CompiledName("addEventListener853")>]
            member __.addEventListener_paste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"moveend\", {args})"); CompiledName("addEventListener854")>]
            member __.addEventListener_moveend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener855")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener856")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener857")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener858")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener859")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener860")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener861")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener862")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener863")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener864")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener865")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizeend\", {args})"); CompiledName("addEventListener866")>]
            member __.addEventListener_resizeend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener867")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener868")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener869")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener870")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener871")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener872")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener873")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener874")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener875")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"movestart\", {args})"); CompiledName("addEventListener876")>]
            member __.addEventListener_movestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener877")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener878")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener879")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener880")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cut\", {args})"); CompiledName("addEventListener881")>]
            member __.addEventListener_cut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener882")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener883")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"copy\", {args})"); CompiledName("addEventListener884")>]
            member __.addEventListener_copy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener885")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener886")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener887")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener888")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener889")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener890")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener891")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener892")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener893")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type HTMLImageElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width9")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vspace)"); CompiledName("vspace2")>]
            member __.vspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.naturalHeight)"); CompiledName("naturalHeight")>]
            member __.naturalHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alt)"); CompiledName("alt2")>]
            member __.alt with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align6")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src4")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.useMap)"); CompiledName("useMap1")>]
            member __.useMap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.naturalWidth)"); CompiledName("naturalWidth")>]
            member __.naturalWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name18")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height7")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.border)"); CompiledName("border5")>]
            member __.border with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hspace)"); CompiledName("hspace2")>]
            member __.hspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.longDesc)"); CompiledName("longDesc2")>]
            member __.longDesc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href5")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isMap)"); CompiledName("isMap")>]
            member __.isMap with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.complete)"); CompiledName("complete")>]
            member __.complete with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToPrimary)"); CompiledName("msPlayToPrimary1")>]
            member __.msPlayToPrimary with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToDisabled)"); CompiledName("msPlayToDisabled1")>]
            member __.msPlayToDisabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToSource)"); CompiledName("msPlayToSource1")>]
            member __.msPlayToSource with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.crossOrigin)"); CompiledName("crossOrigin")>]
            member __.crossOrigin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToPreferredSourceUri)"); CompiledName("msPlayToPreferredSourceUri1")>]
            member __.msPlayToPreferredSourceUri with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLInputElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width10")>]
            member __.width with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.status)"); CompiledName("status3")>]
            member __.status with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form3")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectionStart)"); CompiledName("selectionStart")>]
            member __.selectionStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.indeterminate)"); CompiledName("indeterminate")>]
            member __.indeterminate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readOnly)"); CompiledName("readOnly2")>]
            member __.readOnly with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.size)"); CompiledName("size3")>]
            member __.size with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loop)"); CompiledName("loop1")>]
            member __.loop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectionEnd)"); CompiledName("selectionEnd")>]
            member __.selectionEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vrml)"); CompiledName("vrml")>]
            member __.vrml with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lowsrc)"); CompiledName("lowsrc")>]
            member __.lowsrc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vspace)"); CompiledName("vspace3")>]
            member __.vspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.accept)"); CompiledName("accept")>]
            member __.accept with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alt)"); CompiledName("alt3")>]
            member __.alt with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultChecked)"); CompiledName("defaultChecked")>]
            member __.defaultChecked with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align7")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value3")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src5")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name19")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.useMap)"); CompiledName("useMap2")>]
            member __.useMap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height8")>]
            member __.height with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.border)"); CompiledName("border6")>]
            member __.border with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dynsrc)"); CompiledName("dynsrc")>]
            member __.dynsrc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.checked)"); CompiledName("_checked")>]
            member __._checked with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hspace)"); CompiledName("hspace3")>]
            member __.hspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maxLength)"); CompiledName("maxLength")>]
            member __.maxLength with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type8")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultValue)"); CompiledName("defaultValue")>]
            member __.defaultValue with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.complete)"); CompiledName("complete1")>]
            member __.complete with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.start)"); CompiledName("start")>]
            member __.start with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validationMessage)"); CompiledName("validationMessage2")>]
            member __.validationMessage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.files)"); CompiledName("files1")>]
            member __.files with get() : FileList = failwith "never" and set (v : FileList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.max)"); CompiledName("max")>]
            member __.max with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formTarget)"); CompiledName("formTarget1")>]
            member __.formTarget with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.willValidate)"); CompiledName("willValidate2")>]
            member __.willValidate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.step)"); CompiledName("step")>]
            member __.step with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.autofocus)"); CompiledName("autofocus1")>]
            member __.autofocus with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.required)"); CompiledName("required")>]
            member __.required with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formEnctype)"); CompiledName("formEnctype1")>]
            member __.formEnctype with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.valueAsNumber)"); CompiledName("valueAsNumber")>]
            member __.valueAsNumber with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.placeholder)"); CompiledName("placeholder")>]
            member __.placeholder with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formMethod)"); CompiledName("formMethod1")>]
            member __.formMethod with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.list)"); CompiledName("list")>]
            member __.list with get() : HTMLElement = failwith "never" and set (v : HTMLElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.autocomplete)"); CompiledName("autocomplete1")>]
            member __.autocomplete with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.min)"); CompiledName("min")>]
            member __.min with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formAction)"); CompiledName("formAction1")>]
            member __.formAction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pattern)"); CompiledName("pattern")>]
            member __.pattern with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validity)"); CompiledName("validity2")>]
            member __.validity with get() : ValidityState = failwith "never" and set (v : ValidityState) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.formNoValidate)"); CompiledName("formNoValidate1")>]
            member __.formNoValidate with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.multiple)"); CompiledName("multiple")>]
            member __.multiple with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTextRange())"); CompiledName("createTextRange2")>]
            member __.createTextRange() : TextRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.setSelectionRange({args}))"); CompiledName("setSelectionRange")>]
            member __.setSelectionRange(start : float, _end : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.select())"); CompiledName("select2")>]
            member __.select() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkValidity())"); CompiledName("checkValidity3")>]
            member __.checkValidity() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.stepDown({args}))"); CompiledName("stepDown")>]
            member __.stepDown(?n : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stepUp({args}))"); CompiledName("stepUp")>]
            member __.stepUp(?n : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setCustomValidity({args}))"); CompiledName("setCustomValidity2")>]
            member __.setCustomValidity(error : string) : unit = failwith "never"




    type HTMLIsIndexElement with 

            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form4")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.action)"); CompiledName("action1")>]
            member __.action with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.prompt)"); CompiledName("prompt1")>]
            member __.prompt with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLLIElement with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value4")>]
            member __.value with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type HTMLLabelElement with 

            [<FunScript.JSEmitInline("({0}.htmlFor)"); CompiledName("htmlFor")>]
            member __.htmlFor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form5")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"




    type HTMLLegendElement with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align8")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form6")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"




    type HTMLLinkElement with 

            [<FunScript.JSEmitInline("({0}.rel)"); CompiledName("rel1")>]
            member __.rel with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target5")>]
            member __.target with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href6")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media3")>]
            member __.media with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rev)"); CompiledName("rev1")>]
            member __.rev with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type9")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.charset)"); CompiledName("charset2")>]
            member __.charset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hreflang)"); CompiledName("hreflang1")>]
            member __.hreflang with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLMapElement with 

            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name20")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.areas)"); CompiledName("areas")>]
            member __.areas with get() : HTMLAreasCollection = failwith "never" and set (v : HTMLAreasCollection) : unit = failwith "never"




    type HTMLMarqueeElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width11")>]
            member __.width with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbounce)"); CompiledName("onbounce")>]
            member __.onbounce with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vspace)"); CompiledName("vspace4")>]
            member __.vspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.trueSpeed)"); CompiledName("trueSpeed")>]
            member __.trueSpeed with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollAmount)"); CompiledName("scrollAmount")>]
            member __.scrollAmount with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollDelay)"); CompiledName("scrollDelay")>]
            member __.scrollDelay with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.behavior)"); CompiledName("behavior")>]
            member __.behavior with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height9")>]
            member __.height with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loop)"); CompiledName("loop2")>]
            member __.loop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.direction)"); CompiledName("direction1")>]
            member __.direction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hspace)"); CompiledName("hspace4")>]
            member __.hspace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstart)"); CompiledName("onstart")>]
            member __.onstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfinish)"); CompiledName("onfinish")>]
            member __.onfinish with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stop())"); CompiledName("stop")>]
            member __.stop() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.start())"); CompiledName("start1")>]
            member __.start() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener894")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener895")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener896")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener897")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener898")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener899")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener900")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener901")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener902")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener903")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener904")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener905")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener906")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener907")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener908")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener909")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener910")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener911")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener912")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener913")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener914")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener915")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener916")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener917")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener918")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener919")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener920")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener921")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener922")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecut\", {args})"); CompiledName("addEventListener923")>]
            member __.addEventListener_beforecut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener924")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"move\", {args})"); CompiledName("addEventListener925")>]
            member __.addEventListener_move(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener926")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener927")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener928")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener929")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener930")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener931")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener932")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener933")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener934")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener935")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener936")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener937")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener938")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener939")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener940")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"losecapture\", {args})"); CompiledName("addEventListener941")>]
            member __.addEventListener_losecapture(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener942")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener943")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener944")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener945")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"layoutcomplete\", {args})"); CompiledName("addEventListener946")>]
            member __.addEventListener_layoutcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener947")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener948")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener949")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"filterchange\", {args})"); CompiledName("addEventListener950")>]
            member __.addEventListener_filterchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener951")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener952")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener953")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener954")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener955")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener956")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener957")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener958")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener959")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener960")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener961")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener962")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforepaste\", {args})"); CompiledName("addEventListener963")>]
            member __.addEventListener_beforepaste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener964")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener965")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener966")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecopy\", {args})"); CompiledName("addEventListener967")>]
            member __.addEventListener_beforecopy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener968")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener969")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener970")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener971")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener972")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener973")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizestart\", {args})"); CompiledName("addEventListener974")>]
            member __.addEventListener_resizestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"paste\", {args})"); CompiledName("addEventListener975")>]
            member __.addEventListener_paste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"moveend\", {args})"); CompiledName("addEventListener976")>]
            member __.addEventListener_moveend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener977")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener978")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener979")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener980")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener981")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener982")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener983")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener984")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener985")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener986")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener987")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizeend\", {args})"); CompiledName("addEventListener988")>]
            member __.addEventListener_resizeend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener989")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener990")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener991")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener992")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener993")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener994")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener995")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener996")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener997")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"movestart\", {args})"); CompiledName("addEventListener998")>]
            member __.addEventListener_movestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener999")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener1000")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener1001")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener1002")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cut\", {args})"); CompiledName("addEventListener1003")>]
            member __.addEventListener_cut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener1004")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener1005")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"copy\", {args})"); CompiledName("addEventListener1006")>]
            member __.addEventListener_copy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener1007")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener1008")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener1009")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1010")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener1011")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener1012")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener1013")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener1014")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"bounce\", {args})"); CompiledName("addEventListener1015")>]
            member __.addEventListener_bounce(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"start\", {args})"); CompiledName("addEventListener1016")>]
            member __.addEventListener_start(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"finish\", {args})"); CompiledName("addEventListener1017")>]
            member __.addEventListener_finish(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1018")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type HTMLMediaElement with 

            [<FunScript.JSEmitInline("({0}.initialTime)"); CompiledName("initialTime")>]
            member __.initialTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.played)"); CompiledName("played")>]
            member __.played with get() : TimeRanges = failwith "never" and set (v : TimeRanges) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentSrc)"); CompiledName("currentSrc")>]
            member __.currentSrc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState3")>]
            member __.readyState with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.autobuffer)"); CompiledName("autobuffer")>]
            member __.autobuffer with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loop)"); CompiledName("loop3")>]
            member __.loop with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ended)"); CompiledName("ended")>]
            member __.ended with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.buffered)"); CompiledName("buffered")>]
            member __.buffered with get() : TimeRanges = failwith "never" and set (v : TimeRanges) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.error)"); CompiledName("error4")>]
            member __.error with get() : MediaError = failwith "never" and set (v : MediaError) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.seekable)"); CompiledName("seekable")>]
            member __.seekable with get() : TimeRanges = failwith "never" and set (v : TimeRanges) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.autoplay)"); CompiledName("autoplay")>]
            member __.autoplay with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.controls)"); CompiledName("controls")>]
            member __.controls with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.volume)"); CompiledName("volume1")>]
            member __.volume with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src6")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.playbackRate)"); CompiledName("playbackRate")>]
            member __.playbackRate with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.duration)"); CompiledName("duration")>]
            member __.duration with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.muted)"); CompiledName("muted")>]
            member __.muted with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultPlaybackRate)"); CompiledName("defaultPlaybackRate")>]
            member __.defaultPlaybackRate with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.paused)"); CompiledName("paused")>]
            member __.paused with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.seeking)"); CompiledName("seeking")>]
            member __.seeking with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentTime)"); CompiledName("currentTime")>]
            member __.currentTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.preload)"); CompiledName("preload")>]
            member __.preload with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.networkState)"); CompiledName("networkState")>]
            member __.networkState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAudioCategory)"); CompiledName("msAudioCategory")>]
            member __.msAudioCategory with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msRealTime)"); CompiledName("msRealTime")>]
            member __.msRealTime with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToPrimary)"); CompiledName("msPlayToPrimary2")>]
            member __.msPlayToPrimary with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textTracks)"); CompiledName("textTracks")>]
            member __.textTracks with get() : TextTrackList = failwith "never" and set (v : TextTrackList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToDisabled)"); CompiledName("msPlayToDisabled2")>]
            member __.msPlayToDisabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.audioTracks)"); CompiledName("audioTracks")>]
            member __.audioTracks with get() : AudioTrackList = failwith "never" and set (v : AudioTrackList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToSource)"); CompiledName("msPlayToSource2")>]
            member __.msPlayToSource with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAudioDeviceType)"); CompiledName("msAudioDeviceType")>]
            member __.msAudioDeviceType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToPreferredSourceUri)"); CompiledName("msPlayToPreferredSourceUri2")>]
            member __.msPlayToPreferredSourceUri with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsneedkey)"); CompiledName("onmsneedkey")>]
            member __.onmsneedkey with get() : System.Func<MSMediaKeyNeededEvent, obj> = failwith "never" and set (v : System.Func<MSMediaKeyNeededEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msKeys)"); CompiledName("msKeys")>]
            member __.msKeys with get() : MSMediaKeys = failwith "never" and set (v : MSMediaKeys) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msGraphicsTrustStatus)"); CompiledName("msGraphicsTrustStatus")>]
            member __.msGraphicsTrustStatus with get() : MSGraphicsTrust = failwith "never" and set (v : MSGraphicsTrust) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pause())"); CompiledName("pause")>]
            member __.pause() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.play())"); CompiledName("play")>]
            member __.play() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.load())"); CompiledName("load")>]
            member __.load() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.canPlayType({args}))"); CompiledName("canPlayType")>]
            member __.canPlayType(_type : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.msClearEffects())"); CompiledName("msClearEffects")>]
            member __.msClearEffects() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msSetMediaProtectionManager({args}))"); CompiledName("msSetMediaProtectionManager")>]
            member __.msSetMediaProtectionManager(?mediaProtectionManager : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msInsertAudioEffect({args}))"); CompiledName("msInsertAudioEffect")>]
            member __.msInsertAudioEffect(activatableClassId : string, effectRequired : bool, ?config : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msSetMediaKeys({args}))"); CompiledName("msSetMediaKeys")>]
            member __.msSetMediaKeys(mediaKeys : MSMediaKeys) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addTextTrack({args}))"); CompiledName("addTextTrack")>]
            member __.addTextTrack(kind : string, ?label : string, ?language : string) : TextTrack = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_METADATA)"); CompiledName("HAVE_METADATA1")>]
            member __.HAVE_METADATA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_CURRENT_DATA)"); CompiledName("HAVE_CURRENT_DATA1")>]
            member __.HAVE_CURRENT_DATA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_NOTHING)"); CompiledName("HAVE_NOTHING1")>]
            member __.HAVE_NOTHING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_NO_SOURCE)"); CompiledName("NETWORK_NO_SOURCE1")>]
            member __.NETWORK_NO_SOURCE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_ENOUGH_DATA)"); CompiledName("HAVE_ENOUGH_DATA1")>]
            member __.HAVE_ENOUGH_DATA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_EMPTY)"); CompiledName("NETWORK_EMPTY1")>]
            member __.NETWORK_EMPTY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_LOADING)"); CompiledName("NETWORK_LOADING1")>]
            member __.NETWORK_LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NETWORK_IDLE)"); CompiledName("NETWORK_IDLE1")>]
            member __.NETWORK_IDLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HAVE_FUTURE_DATA)"); CompiledName("HAVE_FUTURE_DATA1")>]
            member __.HAVE_FUTURE_DATA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener1019")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener1020")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener1021")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener1022")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener1023")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener1024")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener1025")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener1026")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener1027")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener1028")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener1029")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener1030")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener1031")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener1032")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener1033")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener1034")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener1035")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener1036")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener1037")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener1038")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener1039")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener1040")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener1041")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener1042")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener1043")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener1044")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener1045")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener1046")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener1047")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecut\", {args})"); CompiledName("addEventListener1048")>]
            member __.addEventListener_beforecut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener1049")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"move\", {args})"); CompiledName("addEventListener1050")>]
            member __.addEventListener_move(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener1051")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener1052")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener1053")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener1054")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener1055")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener1056")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener1057")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener1058")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener1059")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener1060")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener1061")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener1062")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener1063")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener1064")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener1065")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"losecapture\", {args})"); CompiledName("addEventListener1066")>]
            member __.addEventListener_losecapture(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener1067")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener1068")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener1069")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener1070")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"layoutcomplete\", {args})"); CompiledName("addEventListener1071")>]
            member __.addEventListener_layoutcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener1072")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener1073")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener1074")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"filterchange\", {args})"); CompiledName("addEventListener1075")>]
            member __.addEventListener_filterchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener1076")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener1077")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener1078")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener1079")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener1080")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener1081")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener1082")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener1083")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener1084")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener1085")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener1086")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener1087")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforepaste\", {args})"); CompiledName("addEventListener1088")>]
            member __.addEventListener_beforepaste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener1089")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener1090")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener1091")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecopy\", {args})"); CompiledName("addEventListener1092")>]
            member __.addEventListener_beforecopy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener1093")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener1094")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener1095")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener1096")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener1097")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener1098")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizestart\", {args})"); CompiledName("addEventListener1099")>]
            member __.addEventListener_resizestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"paste\", {args})"); CompiledName("addEventListener1100")>]
            member __.addEventListener_paste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"moveend\", {args})"); CompiledName("addEventListener1101")>]
            member __.addEventListener_moveend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener1102")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener1103")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener1104")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener1105")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener1106")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener1107")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener1108")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener1109")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener1110")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1111")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener1112")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizeend\", {args})"); CompiledName("addEventListener1113")>]
            member __.addEventListener_resizeend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener1114")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener1115")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1116")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener1117")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener1118")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener1119")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener1120")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener1121")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener1122")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"movestart\", {args})"); CompiledName("addEventListener1123")>]
            member __.addEventListener_movestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener1124")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener1125")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener1126")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener1127")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cut\", {args})"); CompiledName("addEventListener1128")>]
            member __.addEventListener_cut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener1129")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener1130")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"copy\", {args})"); CompiledName("addEventListener1131")>]
            member __.addEventListener_copy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener1132")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener1133")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener1134")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1135")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener1136")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener1137")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener1138")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener1139")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msneedkey\", {args})"); CompiledName("addEventListener1140")>]
            member __.addEventListener_msneedkey(listener : System.Func<MSMediaKeyNeededEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1141")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type HTMLMenuElement with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type10")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLMetaElement with 

            [<FunScript.JSEmitInline("({0}.httpEquiv)"); CompiledName("httpEquiv")>]
            member __.httpEquiv with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name21")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.content)"); CompiledName("content1")>]
            member __.content with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.url)"); CompiledName("url")>]
            member __.url with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scheme)"); CompiledName("scheme")>]
            member __.scheme with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.charset)"); CompiledName("charset3")>]
            member __.charset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLModElement with 

            [<FunScript.JSEmitInline("({0}.dateTime)"); CompiledName("dateTime")>]
            member __.dateTime with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cite)"); CompiledName("cite1")>]
            member __.cite with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLNextIdElement with 

            [<FunScript.JSEmitInline("({0}.n)"); CompiledName("n")>]
            member __.n with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLOListElement with 

            [<FunScript.JSEmitInline("({0}.start)"); CompiledName("start2")>]
            member __.start with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type HTMLObjectElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width12")>]
            member __.width with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.codeType)"); CompiledName("codeType1")>]
            member __.codeType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.object)"); CompiledName("_object1")>]
            member __._object with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form7")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code4")>]
            member __.code with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.archive)"); CompiledName("archive1")>]
            member __.archive with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.standby)"); CompiledName("standby1")>]
            member __.standby with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alt)"); CompiledName("alt4")>]
            member __.alt with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.classid)"); CompiledName("classid1")>]
            member __.classid with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name22")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.useMap)"); CompiledName("useMap3")>]
            member __.useMap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data3")>]
            member __.data with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height10")>]
            member __.height with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentDocument)"); CompiledName("contentDocument3")>]
            member __.contentDocument with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.altHtml)"); CompiledName("altHtml1")>]
            member __.altHtml with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.codeBase)"); CompiledName("codeBase1")>]
            member __.codeBase with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.declare)"); CompiledName("declare1")>]
            member __.declare with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type11")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BaseHref)"); CompiledName("BaseHref1")>]
            member __.BaseHref with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validationMessage)"); CompiledName("validationMessage3")>]
            member __.validationMessage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validity)"); CompiledName("validity3")>]
            member __.validity with get() : ValidityState = failwith "never" and set (v : ValidityState) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.willValidate)"); CompiledName("willValidate3")>]
            member __.willValidate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToPreferredSourceUri)"); CompiledName("msPlayToPreferredSourceUri3")>]
            member __.msPlayToPreferredSourceUri with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToPrimary)"); CompiledName("msPlayToPrimary3")>]
            member __.msPlayToPrimary with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToDisabled)"); CompiledName("msPlayToDisabled3")>]
            member __.msPlayToDisabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState4")>]
            member __.readyState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPlayToSource)"); CompiledName("msPlayToSource3")>]
            member __.msPlayToSource with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkValidity())"); CompiledName("checkValidity4")>]
            member __.checkValidity() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.setCustomValidity({args}))"); CompiledName("setCustomValidity3")>]
            member __.setCustomValidity(error : string) : unit = failwith "never"




    type HTMLOptGroupElement with 

            [<FunScript.JSEmitInline("({0}.index)"); CompiledName("index")>]
            member __.index with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultSelected)"); CompiledName("defaultSelected")>]
            member __.defaultSelected with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text3")>]
            member __.text with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value5")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form8")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.label)"); CompiledName("label1")>]
            member __.label with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selected)"); CompiledName("selected")>]
            member __.selected with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type HTMLOptionElement with 

            [<FunScript.JSEmitInline("({0}.index)"); CompiledName("index1")>]
            member __.index with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultSelected)"); CompiledName("defaultSelected1")>]
            member __.defaultSelected with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value6")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text4")>]
            member __.text with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form9")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.label)"); CompiledName("label2")>]
            member __.label with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selected)"); CompiledName("selected1")>]
            member __.selected with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type HTMLParagraphElement with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align9")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLParamElement with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value7")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name23")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type12")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.valueType)"); CompiledName("valueType")>]
            member __.valueType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLPhraseElement with 

            [<FunScript.JSEmitInline("({0}.dateTime)"); CompiledName("dateTime1")>]
            member __.dateTime with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cite)"); CompiledName("cite2")>]
            member __.cite with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLPreElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width13")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cite)"); CompiledName("cite3")>]
            member __.cite with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLProgressElement with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value8")>]
            member __.value with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.max)"); CompiledName("max1")>]
            member __.max with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.position)"); CompiledName("position1")>]
            member __.position with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form10")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"




    type HTMLQuoteElement with 

            [<FunScript.JSEmitInline("({0}.dateTime)"); CompiledName("dateTime2")>]
            member __.dateTime with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cite)"); CompiledName("cite4")>]
            member __.cite with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLScriptElement with 

            [<FunScript.JSEmitInline("({0}.defer)"); CompiledName("defer")>]
            member __.defer with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text5")>]
            member __.text with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src7")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.htmlFor)"); CompiledName("htmlFor1")>]
            member __.htmlFor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.charset)"); CompiledName("charset4")>]
            member __.charset with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type13")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.event)"); CompiledName("_event1")>]
            member __._event with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.async)"); CompiledName("_async")>]
            member __._async with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type HTMLSelectElement with 

            [<FunScript.JSEmitInline("({0}.options)"); CompiledName("options1")>]
            member __.options with get() : HTMLSelectElement = failwith "never" and set (v : HTMLSelectElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value9")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form11")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name24")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.size)"); CompiledName("size4")>]
            member __.size with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length18")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectedIndex)"); CompiledName("selectedIndex")>]
            member __.selectedIndex with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.multiple)"); CompiledName("multiple1")>]
            member __.multiple with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type14")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validationMessage)"); CompiledName("validationMessage4")>]
            member __.validationMessage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.autofocus)"); CompiledName("autofocus2")>]
            member __.autofocus with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validity)"); CompiledName("validity4")>]
            member __.validity with get() : ValidityState = failwith "never" and set (v : ValidityState) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.required)"); CompiledName("required1")>]
            member __.required with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.willValidate)"); CompiledName("willValidate4")>]
            member __.willValidate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.remove({args}))"); CompiledName("remove3")>]
            member __.remove(?index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.add({args}))"); CompiledName("add3")>]
            member __.add(element : HTMLElement, ?before : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item12")>]
            member __.item(?name : obj, ?index : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.namedItem({args}))"); CompiledName("namedItem3")>]
            member __.namedItem(name : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item15")>]
            member __.Item with get(i : string) : obj = failwith "never" and set (i : string) (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkValidity())"); CompiledName("checkValidity5")>]
            member __.checkValidity() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.setCustomValidity({args}))"); CompiledName("setCustomValidity4")>]
            member __.setCustomValidity(error : string) : unit = failwith "never"




    type HTMLSourceElement with 

            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src8")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media4")>]
            member __.media with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type15")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msKeySystem)"); CompiledName("msKeySystem")>]
            member __.msKeySystem with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLStyleElement with 

            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media5")>]
            member __.media with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type16")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLTableAlignment with 

            [<FunScript.JSEmitInline("({0}.ch)"); CompiledName("ch")>]
            member __.ch with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vAlign)"); CompiledName("vAlign")>]
            member __.vAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.chOff)"); CompiledName("chOff")>]
            member __.chOff with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLTableCaptionElement with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align10")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vAlign)"); CompiledName("vAlign1")>]
            member __.vAlign with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLTableCellElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width14")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.headers)"); CompiledName("headers")>]
            member __.headers with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cellIndex)"); CompiledName("cellIndex")>]
            member __.cellIndex with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align11")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColorLight)"); CompiledName("borderColorLight")>]
            member __.borderColorLight with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.colSpan)"); CompiledName("colSpan")>]
            member __.colSpan with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColor)"); CompiledName("borderColor3")>]
            member __.borderColor with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.axis)"); CompiledName("axis")>]
            member __.axis with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height11")>]
            member __.height with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.noWrap)"); CompiledName("noWrap4")>]
            member __.noWrap with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abbr)"); CompiledName("abbr")>]
            member __.abbr with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rowSpan)"); CompiledName("rowSpan")>]
            member __.rowSpan with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scope)"); CompiledName("scope")>]
            member __.scope with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColorDark)"); CompiledName("borderColorDark")>]
            member __.borderColorDark with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"




    type HTMLTableColElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width15")>]
            member __.width with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align12")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.span)"); CompiledName("span")>]
            member __.span with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type HTMLTableElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width16")>]
            member __.width with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColorLight)"); CompiledName("borderColorLight1")>]
            member __.borderColorLight with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cellSpacing)"); CompiledName("cellSpacing")>]
            member __.cellSpacing with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tFoot)"); CompiledName("tFoot")>]
            member __.tFoot with get() : HTMLTableSectionElement = failwith "never" and set (v : HTMLTableSectionElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frame)"); CompiledName("frame")>]
            member __.frame with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColor)"); CompiledName("borderColor4")>]
            member __.borderColor with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rows)"); CompiledName("rows1")>]
            member __.rows with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rules)"); CompiledName("rules1")>]
            member __.rules with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cols)"); CompiledName("cols1")>]
            member __.cols with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.summary)"); CompiledName("summary")>]
            member __.summary with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.caption)"); CompiledName("caption")>]
            member __.caption with get() : HTMLTableCaptionElement = failwith "never" and set (v : HTMLTableCaptionElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tBodies)"); CompiledName("tBodies")>]
            member __.tBodies with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tHead)"); CompiledName("tHead")>]
            member __.tHead with get() : HTMLTableSectionElement = failwith "never" and set (v : HTMLTableSectionElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align13")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cells)"); CompiledName("cells")>]
            member __.cells with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height12")>]
            member __.height with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cellPadding)"); CompiledName("cellPadding")>]
            member __.cellPadding with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.border)"); CompiledName("border7")>]
            member __.border with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColorDark)"); CompiledName("borderColorDark1")>]
            member __.borderColorDark with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteRow({args}))"); CompiledName("deleteRow")>]
            member __.deleteRow(?index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTBody())"); CompiledName("createTBody")>]
            member __.createTBody() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteCaption())"); CompiledName("deleteCaption")>]
            member __.deleteCaption() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertRow({args}))"); CompiledName("insertRow")>]
            member __.insertRow(?index : float) : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteTFoot())"); CompiledName("deleteTFoot")>]
            member __.deleteTFoot() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTHead())"); CompiledName("createTHead")>]
            member __.createTHead() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteTHead())"); CompiledName("deleteTHead")>]
            member __.deleteTHead() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createCaption())"); CompiledName("createCaption")>]
            member __.createCaption() : HTMLElement = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveRow({args}))"); CompiledName("moveRow")>]
            member __.moveRow(?indexFrom : float, ?indexTo : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTFoot())"); CompiledName("createTFoot")>]
            member __.createTFoot() : HTMLElement = failwith "never"




    type HTMLTableHeaderCellElement with 

            [<FunScript.JSEmitInline("({0}.scope)"); CompiledName("scope1")>]
            member __.scope with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLTableRowElement with 

            [<FunScript.JSEmitInline("({0}.rowIndex)"); CompiledName("rowIndex")>]
            member __.rowIndex with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cells)"); CompiledName("cells1")>]
            member __.cells with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align14")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColorLight)"); CompiledName("borderColorLight2")>]
            member __.borderColorLight with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sectionRowIndex)"); CompiledName("sectionRowIndex")>]
            member __.sectionRowIndex with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColor)"); CompiledName("borderColor5")>]
            member __.borderColor with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height13")>]
            member __.height with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.borderColorDark)"); CompiledName("borderColorDark2")>]
            member __.borderColorDark with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteCell({args}))"); CompiledName("deleteCell")>]
            member __.deleteCell(?index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertCell({args}))"); CompiledName("insertCell")>]
            member __.insertCell(?index : float) : HTMLElement = failwith "never"




    type HTMLTableSectionElement with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align15")>]
            member __.align with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rows)"); CompiledName("rows2")>]
            member __.rows with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteRow({args}))"); CompiledName("deleteRow1")>]
            member __.deleteRow(?index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveRow({args}))"); CompiledName("moveRow1")>]
            member __.moveRow(?indexFrom : float, ?indexTo : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertRow({args}))"); CompiledName("insertRow1")>]
            member __.insertRow(?index : float) : HTMLElement = failwith "never"




    type HTMLTextAreaElement with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value10")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.status)"); CompiledName("status4")>]
            member __.status with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.form)"); CompiledName("form12")>]
            member __.form with get() : HTMLFormElement = failwith "never" and set (v : HTMLFormElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name25")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectionStart)"); CompiledName("selectionStart1")>]
            member __.selectionStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rows)"); CompiledName("rows3")>]
            member __.rows with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cols)"); CompiledName("cols2")>]
            member __.cols with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readOnly)"); CompiledName("readOnly3")>]
            member __.readOnly with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.wrap)"); CompiledName("wrap")>]
            member __.wrap with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectionEnd)"); CompiledName("selectionEnd1")>]
            member __.selectionEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type17")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultValue)"); CompiledName("defaultValue1")>]
            member __.defaultValue with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validationMessage)"); CompiledName("validationMessage5")>]
            member __.validationMessage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.autofocus)"); CompiledName("autofocus3")>]
            member __.autofocus with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.validity)"); CompiledName("validity5")>]
            member __.validity with get() : ValidityState = failwith "never" and set (v : ValidityState) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.required)"); CompiledName("required2")>]
            member __.required with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maxLength)"); CompiledName("maxLength1")>]
            member __.maxLength with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.willValidate)"); CompiledName("willValidate5")>]
            member __.willValidate with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.placeholder)"); CompiledName("placeholder1")>]
            member __.placeholder with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTextRange())"); CompiledName("createTextRange3")>]
            member __.createTextRange() : TextRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.setSelectionRange({args}))"); CompiledName("setSelectionRange1")>]
            member __.setSelectionRange(start : float, _end : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.select())"); CompiledName("select3")>]
            member __.select() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkValidity())"); CompiledName("checkValidity6")>]
            member __.checkValidity() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.setCustomValidity({args}))"); CompiledName("setCustomValidity5")>]
            member __.setCustomValidity(error : string) : unit = failwith "never"




    type HTMLTitleElement with 

            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text6")>]
            member __.text with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type HTMLTrackElement with 

            [<FunScript.JSEmitInline("({0}.kind)"); CompiledName("kind1")>]
            member __.kind with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src9")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.srclang)"); CompiledName("srclang")>]
            member __.srclang with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.track)"); CompiledName("track")>]
            member __.track with get() : TextTrack = failwith "never" and set (v : TextTrack) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.label)"); CompiledName("label3")>]
            member __.label with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.default)"); CompiledName("_default")>]
            member __._default with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState5")>]
            member __.readyState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ERROR)"); CompiledName("ERROR3")>]
            member __.ERROR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADING)"); CompiledName("LOADING3")>]
            member __.LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADED)"); CompiledName("LOADED2")>]
            member __.LOADED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NONE)"); CompiledName("NONE3")>]
            member __.NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type HTMLVideoElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width17")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.videoWidth)"); CompiledName("videoWidth")>]
            member __.videoWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.videoHeight)"); CompiledName("videoHeight")>]
            member __.videoHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height14")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.poster)"); CompiledName("poster")>]
            member __.poster with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msIsStereo3D)"); CompiledName("msIsStereo3D")>]
            member __.msIsStereo3D with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msStereo3DPackingMode)"); CompiledName("msStereo3DPackingMode")>]
            member __.msStereo3DPackingMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onMSVideoOptimalLayoutChanged)"); CompiledName("onMSVideoOptimalLayoutChanged")>]
            member __.onMSVideoOptimalLayoutChanged with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onMSVideoFrameStepCompleted)"); CompiledName("onMSVideoFrameStepCompleted")>]
            member __.onMSVideoFrameStepCompleted with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msStereo3DRenderMode)"); CompiledName("msStereo3DRenderMode")>]
            member __.msStereo3DRenderMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msIsLayoutOptimalForPlayback)"); CompiledName("msIsLayoutOptimalForPlayback")>]
            member __.msIsLayoutOptimalForPlayback with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msHorizontalMirror)"); CompiledName("msHorizontalMirror")>]
            member __.msHorizontalMirror with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onMSVideoFormatChanged)"); CompiledName("onMSVideoFormatChanged")>]
            member __.onMSVideoFormatChanged with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msZoom)"); CompiledName("msZoom")>]
            member __.msZoom with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msInsertVideoEffect({args}))"); CompiledName("msInsertVideoEffect")>]
            member __.msInsertVideoEffect(activatableClassId : string, effectRequired : bool, ?config : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msSetVideoRectangle({args}))"); CompiledName("msSetVideoRectangle")>]
            member __.msSetVideoRectangle(left : float, top : float, right : float, bottom : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFrameStep({args}))"); CompiledName("msFrameStep")>]
            member __.msFrameStep(forward : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getVideoPlaybackQuality())"); CompiledName("getVideoPlaybackQuality")>]
            member __.getVideoPlaybackQuality() : VideoPlaybackQuality = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener1142")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener1143")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener1144")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener1145")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener1146")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener1147")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener1148")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener1149")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener1150")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener1151")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener1152")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener1153")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener1154")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener1155")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener1156")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener1157")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener1158")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener1159")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener1160")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener1161")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener1162")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener1163")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener1164")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener1165")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener1166")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener1167")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener1168")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener1169")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener1170")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecut\", {args})"); CompiledName("addEventListener1171")>]
            member __.addEventListener_beforecut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener1172")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"move\", {args})"); CompiledName("addEventListener1173")>]
            member __.addEventListener_move(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener1174")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener1175")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener1176")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener1177")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener1178")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener1179")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener1180")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener1181")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener1182")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener1183")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener1184")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deactivate\", {args})"); CompiledName("addEventListener1185")>]
            member __.addEventListener_deactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetchanged\", {args})"); CompiledName("addEventListener1186")>]
            member __.addEventListener_datasetchanged(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsdelete\", {args})"); CompiledName("addEventListener1187")>]
            member __.addEventListener_rowsdelete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener1188")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"losecapture\", {args})"); CompiledName("addEventListener1189")>]
            member __.addEventListener_losecapture(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener1190")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"controlselect\", {args})"); CompiledName("addEventListener1191")>]
            member __.addEventListener_controlselect(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener1192")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener1193")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"layoutcomplete\", {args})"); CompiledName("addEventListener1194")>]
            member __.addEventListener_layoutcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeactivate\", {args})"); CompiledName("addEventListener1195")>]
            member __.addEventListener_beforeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener1196")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeupdate\", {args})"); CompiledName("addEventListener1197")>]
            member __.addEventListener_beforeupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"filterchange\", {args})"); CompiledName("addEventListener1198")>]
            member __.addEventListener_filterchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"datasetcomplete\", {args})"); CompiledName("addEventListener1199")>]
            member __.addEventListener_datasetcomplete(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener1200")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener1201")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"errorupdate\", {args})"); CompiledName("addEventListener1202")>]
            member __.addEventListener_errorupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener1203")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener1204")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener1205")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cellchange\", {args})"); CompiledName("addEventListener1206")>]
            member __.addEventListener_cellchange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowexit\", {args})"); CompiledName("addEventListener1207")>]
            member __.addEventListener_rowexit(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowsinserted\", {args})"); CompiledName("addEventListener1208")>]
            member __.addEventListener_rowsinserted(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"propertychange\", {args})"); CompiledName("addEventListener1209")>]
            member __.addEventListener_propertychange(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener1210")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforepaste\", {args})"); CompiledName("addEventListener1211")>]
            member __.addEventListener_beforepaste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener1212")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener1213")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener1214")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforecopy\", {args})"); CompiledName("addEventListener1215")>]
            member __.addEventListener_beforecopy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener1216")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener1217")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener1218")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener1219")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener1220")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener1221")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizestart\", {args})"); CompiledName("addEventListener1222")>]
            member __.addEventListener_resizestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"paste\", {args})"); CompiledName("addEventListener1223")>]
            member __.addEventListener_paste(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"moveend\", {args})"); CompiledName("addEventListener1224")>]
            member __.addEventListener_moveend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener1225")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener1226")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeeditfocus\", {args})"); CompiledName("addEventListener1227")>]
            member __.addEventListener_beforeeditfocus(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener1228")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener1229")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener1230")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener1231")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener1232")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterupdate\", {args})"); CompiledName("addEventListener1233")>]
            member __.addEventListener_afterupdate(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1234")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener1235")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resizeend\", {args})"); CompiledName("addEventListener1236")>]
            member __.addEventListener_resizeend(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener1237")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener1238")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1239")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dataavailable\", {args})"); CompiledName("addEventListener1240")>]
            member __.addEventListener_dataavailable(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener1241")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener1242")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener1243")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforedeactivate\", {args})"); CompiledName("addEventListener1244")>]
            member __.addEventListener_beforedeactivate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"activate\", {args})"); CompiledName("addEventListener1245")>]
            member __.addEventListener_activate(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"movestart\", {args})"); CompiledName("addEventListener1246")>]
            member __.addEventListener_movestart(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"selectstart\", {args})"); CompiledName("addEventListener1247")>]
            member __.addEventListener_selectstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener1248")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener1249")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener1250")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cut\", {args})"); CompiledName("addEventListener1251")>]
            member __.addEventListener_cut(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener1252")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener1253")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"copy\", {args})"); CompiledName("addEventListener1254")>]
            member __.addEventListener_copy(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener1255")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener1256")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"rowenter\", {args})"); CompiledName("addEventListener1257")>]
            member __.addEventListener_rowenter(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1258")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener1259")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mscontentzoom\", {args})"); CompiledName("addEventListener1260")>]
            member __.addEventListener_mscontentzoom(listener : System.Func<MSEventObj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener1261")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msmanipulationstatechanged\", {args})"); CompiledName("addEventListener1262")>]
            member __.addEventListener_msmanipulationstatechanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msneedkey\", {args})"); CompiledName("addEventListener1263")>]
            member __.addEventListener_msneedkey(listener : System.Func<MSMediaKeyNeededEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"MSVideoOptimalLayoutChanged\", {args})"); CompiledName("addEventListener1264")>]
            member __.addEventListener_MSVideoOptimalLayoutChanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"MSVideoFrameStepCompleted\", {args})"); CompiledName("addEventListener1265")>]
            member __.addEventListener_MSVideoFrameStepCompleted(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"MSVideoFormatChanged\", {args})"); CompiledName("addEventListener1266")>]
            member __.addEventListener_MSVideoFormatChanged(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1267")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type History with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length19")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.state)"); CompiledName("state")>]
            member __.state with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.back({args}))"); CompiledName("back")>]
            member __.back(?distance : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.forward({args}))"); CompiledName("forward")>]
            member __.forward(?distance : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.go({args}))"); CompiledName("go")>]
            member __.go(?delta : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceState({args}))"); CompiledName("replaceState")>]
            member __.replaceState(statedata : obj, title : string, ?url : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pushState({args}))"); CompiledName("pushState")>]
            member __.pushState(statedata : obj, title : string, ?url : string) : unit = failwith "never"




    type IArguments with 

            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item16")>]
            member __.Item with get(i : int) : obj = failwith "never" and set (i : int) (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length20")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.callee)"); CompiledName("callee")>]
            member __.callee with get() : Function = failwith "never" and set (v : Function) : unit = failwith "never"




    type IDBCursor with 

            [<FunScript.JSEmitInline("({0}.source)"); CompiledName("source")>]
            member __.source with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.direction)"); CompiledName("direction2")>]
            member __.direction with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.key)"); CompiledName("key1")>]
            member __.key with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.primaryKey)"); CompiledName("primaryKey")>]
            member __.primaryKey with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.advance({args}))"); CompiledName("advance")>]
            member __.advance(count : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.delete())"); CompiledName("delete")>]
            member __.delete() : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.continue({args}))"); CompiledName("_continue")>]
            member __._continue(?key : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.update({args}))"); CompiledName("update1")>]
            member __.update(value : obj) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.PREV)"); CompiledName("PREV1")>]
            member __.PREV with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PREV_NO_DUPLICATE)"); CompiledName("PREV_NO_DUPLICATE1")>]
            member __.PREV_NO_DUPLICATE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEXT)"); CompiledName("NEXT1")>]
            member __.NEXT with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEXT_NO_DUPLICATE)"); CompiledName("NEXT_NO_DUPLICATE1")>]
            member __.NEXT_NO_DUPLICATE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type IDBCursorWithValue with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value11")>]
            member __.value with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"




    type IDBDatabase with 

            [<FunScript.JSEmitInline("({0}.version)"); CompiledName("version1")>]
            member __.version with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name26")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.objectStoreNames)"); CompiledName("objectStoreNames")>]
            member __.objectStoreNames with get() : DOMStringList = failwith "never" and set (v : DOMStringList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror8")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort4")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createObjectStore({args}))"); CompiledName("createObjectStore")>]
            member __.createObjectStore(name : string, ?optionalParameters : obj) : IDBObjectStore = failwith "never"
            [<FunScript.JSEmitInline("({0}.close())"); CompiledName("close2")>]
            member __.close() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transaction({args}))"); CompiledName("transaction")>]
            member __.transaction(storeNames : obj, ?mode : string) : IDBTransaction = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteObjectStore({args}))"); CompiledName("deleteObjectStore")>]
            member __.deleteObjectStore(name : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1268")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1269")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1270")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type IDBEnvironment with 

            [<FunScript.JSEmitInline("({0}.msIndexedDB)"); CompiledName("msIndexedDB1")>]
            member __.msIndexedDB with get() : IDBFactory = failwith "never" and set (v : IDBFactory) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.indexedDB)"); CompiledName("indexedDB1")>]
            member __.indexedDB with get() : IDBFactory = failwith "never" and set (v : IDBFactory) : unit = failwith "never"




    type IDBFactory with 

            [<FunScript.JSEmitInline("({0}.open({args}))"); CompiledName("_open2")>]
            member __._open(name : string, ?version : float) : IDBOpenDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.cmp({args}))"); CompiledName("cmp")>]
            member __.cmp(first : obj, second : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteDatabase({args}))"); CompiledName("deleteDatabase")>]
            member __.deleteDatabase(name : string) : IDBOpenDBRequest = failwith "never"




    type IDBIndex with 

            [<FunScript.JSEmitInline("({0}.unique)"); CompiledName("unique")>]
            member __.unique with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name27")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.keyPath)"); CompiledName("keyPath")>]
            member __.keyPath with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.objectStore)"); CompiledName("objectStore")>]
            member __.objectStore with get() : IDBObjectStore = failwith "never" and set (v : IDBObjectStore) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.count({args}))"); CompiledName("count1")>]
            member __.count(?key : obj) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.getKey({args}))"); CompiledName("getKey")>]
            member __.getKey(key : obj) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.openKeyCursor({args}))"); CompiledName("openKeyCursor")>]
            member __.openKeyCursor(?range : IDBKeyRange, ?direction : string) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get2")>]
            member __.get(key : obj) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.openCursor({args}))"); CompiledName("openCursor")>]
            member __.openCursor(?range : IDBKeyRange, ?direction : string) : IDBRequest = failwith "never"




    type IDBKeyRange with 

            [<FunScript.JSEmitInline("({0}.upper)"); CompiledName("upper")>]
            member __.upper with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.upperOpen)"); CompiledName("upperOpen")>]
            member __.upperOpen with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lower)"); CompiledName("lower")>]
            member __.lower with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lowerOpen)"); CompiledName("lowerOpen")>]
            member __.lowerOpen with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type IDBObjectStore with 

            [<FunScript.JSEmitInline("({0}.indexNames)"); CompiledName("indexNames")>]
            member __.indexNames with get() : DOMStringList = failwith "never" and set (v : DOMStringList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name28")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transaction)"); CompiledName("transaction1")>]
            member __.transaction with get() : IDBTransaction = failwith "never" and set (v : IDBTransaction) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.keyPath)"); CompiledName("keyPath1")>]
            member __.keyPath with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.count({args}))"); CompiledName("count2")>]
            member __.count(?key : obj) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.add({args}))"); CompiledName("add4")>]
            member __.add(value : obj, ?key : obj) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear5")>]
            member __.clear() : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.createIndex({args}))"); CompiledName("createIndex")>]
            member __.createIndex(name : string, keyPath : string, ?optionalParameters : obj) : IDBIndex = failwith "never"
            [<FunScript.JSEmitInline("({0}.put({args}))"); CompiledName("put")>]
            member __.put(value : obj, ?key : obj) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.openCursor({args}))"); CompiledName("openCursor1")>]
            member __.openCursor(?range : obj, ?direction : string) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteIndex({args}))"); CompiledName("deleteIndex")>]
            member __.deleteIndex(indexName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.index({args}))"); CompiledName("index2")>]
            member __.index(name : string) : IDBIndex = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get3")>]
            member __.get(key : obj) : IDBRequest = failwith "never"
            [<FunScript.JSEmitInline("({0}.delete({args}))"); CompiledName("delete1")>]
            member __.delete(key : obj) : IDBRequest = failwith "never"




    type IDBOpenDBRequest with 

            [<FunScript.JSEmitInline("({0}.onupgradeneeded)"); CompiledName("onupgradeneeded")>]
            member __.onupgradeneeded with get() : System.Func<IDBVersionChangeEvent, obj> = failwith "never" and set (v : System.Func<IDBVersionChangeEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onblocked)"); CompiledName("onblocked")>]
            member __.onblocked with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"success\", {args})"); CompiledName("addEventListener1271")>]
            member __.addEventListener_success(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1272")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"upgradeneeded\", {args})"); CompiledName("addEventListener1273")>]
            member __.addEventListener_upgradeneeded(listener : System.Func<IDBVersionChangeEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blocked\", {args})"); CompiledName("addEventListener1274")>]
            member __.addEventListener_blocked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1275")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type IDBRequest with 

            [<FunScript.JSEmitInline("({0}.source)"); CompiledName("source1")>]
            member __.source with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onsuccess)"); CompiledName("onsuccess")>]
            member __.onsuccess with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.error)"); CompiledName("error5")>]
            member __.error with get() : DOMError = failwith "never" and set (v : DOMError) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.transaction)"); CompiledName("transaction2")>]
            member __.transaction with get() : IDBTransaction = failwith "never" and set (v : IDBTransaction) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror9")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState6")>]
            member __.readyState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.result)"); CompiledName("result1")>]
            member __.result with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"success\", {args})"); CompiledName("addEventListener1276")>]
            member __.addEventListener_success(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1277")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1278")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type IDBTransaction with 

            [<FunScript.JSEmitInline("({0}.oncomplete)"); CompiledName("oncomplete1")>]
            member __.oncomplete with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.db)"); CompiledName("db")>]
            member __.db with get() : IDBDatabase = failwith "never" and set (v : IDBDatabase) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mode)"); CompiledName("mode")>]
            member __.mode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.error)"); CompiledName("error6")>]
            member __.error with get() : DOMError = failwith "never" and set (v : DOMError) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror10")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort5")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abort())"); CompiledName("abort2")>]
            member __.abort() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.objectStore({args}))"); CompiledName("objectStore1")>]
            member __.objectStore(name : string) : IDBObjectStore = failwith "never"
            [<FunScript.JSEmitInline("({0}.READ_ONLY)"); CompiledName("READ_ONLY1")>]
            member __.READ_ONLY with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERSION_CHANGE)"); CompiledName("VERSION_CHANGE1")>]
            member __.VERSION_CHANGE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.READ_WRITE)"); CompiledName("READ_WRITE1")>]
            member __.READ_WRITE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"complete\", {args})"); CompiledName("addEventListener1279")>]
            member __.addEventListener_complete(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1280")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1281")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1282")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type IDBVersionChangeEvent with 

            [<FunScript.JSEmitInline("({0}.newVersion)"); CompiledName("newVersion")>]
            member __.newVersion with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oldVersion)"); CompiledName("oldVersion")>]
            member __.oldVersion with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type ITextWriter with 

            [<FunScript.JSEmitInline("({0}.Write({args}))"); CompiledName("Write")>]
            member __.Write(s : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.WriteLine({args}))"); CompiledName("WriteLine")>]
            member __.WriteLine(s : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.Close())"); CompiledName("Close")>]
            member __.Close() : unit = failwith "never"




    type ImageData with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width18")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data4")>]
            member __.data with get() : array<float> = failwith "never" and set (v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height15")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type Int16Array with 

            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT10")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length21")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item17")>]
            member __.Item with get(i : int) : float = failwith "never" and set (i : int) (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get4")>]
            member __.get(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set6")>]
            member __.set(index : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set7")>]
            member __.set(array : Int16Array, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set8")>]
            member __.set(array : array<float>, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subarray({args}))"); CompiledName("subarray2")>]
            member __.subarray(_begin : float, ?_end : float) : Int16Array = failwith "never"




    type Int32Array with 

            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT11")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length22")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item18")>]
            member __.Item with get(i : int) : float = failwith "never" and set (i : int) (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get5")>]
            member __.get(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set9")>]
            member __.set(index : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set10")>]
            member __.set(array : Int32Array, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set11")>]
            member __.set(array : array<float>, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subarray({args}))"); CompiledName("subarray3")>]
            member __.subarray(_begin : float, ?_end : float) : Int32Array = failwith "never"




    type Int8Array with 

            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT12")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length23")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item19")>]
            member __.Item with get(i : int) : float = failwith "never" and set (i : int) (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get6")>]
            member __.get(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set12")>]
            member __.set(index : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set13")>]
            member __.set(array : Int8Array, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set14")>]
            member __.set(array : array<float>, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subarray({args}))"); CompiledName("subarray4")>]
            member __.subarray(_begin : float, ?_end : float) : Int8Array = failwith "never"




    type Intl with 

            [<FunScript.JSEmitInline("(Collator)"); CompiledName("Collator")>]
            static member Collator with get() : AnonymousType29 = failwith "never" and set (v : AnonymousType29) : unit = failwith "never"
            [<FunScript.JSEmitInline("(NumberFormat)"); CompiledName("NumberFormat")>]
            static member NumberFormat with get() : AnonymousType30 = failwith "never" and set (v : AnonymousType30) : unit = failwith "never"
            [<FunScript.JSEmitInline("(DateTimeFormat)"); CompiledName("DateTimeFormat")>]
            static member DateTimeFormat with get() : AnonymousType31 = failwith "never" and set (v : AnonymousType31) : unit = failwith "never"




    type JSON with 

            [<FunScript.JSEmitInline("({0}.parse({args}))"); CompiledName("parse1")>]
            member __.parse(text : string, ?reviver : System.Func<obj, obj, obj>) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.stringify({args}))"); CompiledName("stringify")>]
            member __.stringify(value : obj) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.stringify({args}))"); CompiledName("stringify1")>]
            member __.stringify(value : obj, replacer : System.Func<string, obj, obj>) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.stringify({args}))"); CompiledName("stringify2")>]
            member __.stringify(value : obj, replacer : array<obj>) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.stringify({args}))"); CompiledName("stringify3")>]
            member __.stringify(value : obj, replacer : System.Func<string, obj, obj>, space : obj) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.stringify({args}))"); CompiledName("stringify4")>]
            member __.stringify(value : obj, replacer : array<obj>, space : obj) : string = failwith "never"




    type Key with 

            [<FunScript.JSEmitInline("({0}.algorithm)"); CompiledName("algorithm1")>]
            member __.algorithm with get() : Algorithm = failwith "never" and set (v : Algorithm) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type18")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.extractable)"); CompiledName("extractable")>]
            member __.extractable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.keyUsage)"); CompiledName("keyUsage")>]
            member __.keyUsage with get() : array<string> = failwith "never" and set (v : array<string>) : unit = failwith "never"




    type KeyOperation with 

            [<FunScript.JSEmitInline("({0}.oncomplete)"); CompiledName("oncomplete2")>]
            member __.oncomplete with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror11")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.result)"); CompiledName("result2")>]
            member __.result with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"complete\", {args})"); CompiledName("addEventListener1283")>]
            member __.addEventListener_complete(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1284")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1285")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type KeyPair with 

            [<FunScript.JSEmitInline("({0}.privateKey)"); CompiledName("privateKey")>]
            member __.privateKey with get() : Key = failwith "never" and set (v : Key) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.publicKey)"); CompiledName("publicKey")>]
            member __.publicKey with get() : Key = failwith "never" and set (v : Key) : unit = failwith "never"




    type KeyboardEvent with 

            [<FunScript.JSEmitInline("({0}.location)"); CompiledName("location2")>]
            member __.location with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.keyCode)"); CompiledName("keyCode")>]
            member __.keyCode with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shiftKey)"); CompiledName("shiftKey")>]
            member __.shiftKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.which)"); CompiledName("which")>]
            member __.which with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.locale)"); CompiledName("locale1")>]
            member __.locale with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.key)"); CompiledName("key2")>]
            member __.key with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.altKey)"); CompiledName("altKey")>]
            member __.altKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.metaKey)"); CompiledName("metaKey")>]
            member __.metaKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.char)"); CompiledName("_char")>]
            member __._char with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ctrlKey)"); CompiledName("ctrlKey")>]
            member __.ctrlKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.repeat)"); CompiledName("repeat")>]
            member __.repeat with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.charCode)"); CompiledName("charCode")>]
            member __.charCode with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getModifierState({args}))"); CompiledName("getModifierState")>]
            member __.getModifierState(keyArg : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.initKeyboardEvent({args}))"); CompiledName("initKeyboardEvent")>]
            member __.initKeyboardEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, keyArg : string, locationArg : float, modifiersListArg : string, repeat : bool, locale : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_RIGHT)"); CompiledName("DOM_KEY_LOCATION_RIGHT1")>]
            member __.DOM_KEY_LOCATION_RIGHT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_STANDARD)"); CompiledName("DOM_KEY_LOCATION_STANDARD1")>]
            member __.DOM_KEY_LOCATION_STANDARD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_LEFT)"); CompiledName("DOM_KEY_LOCATION_LEFT1")>]
            member __.DOM_KEY_LOCATION_LEFT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_NUMPAD)"); CompiledName("DOM_KEY_LOCATION_NUMPAD1")>]
            member __.DOM_KEY_LOCATION_NUMPAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_JOYSTICK)"); CompiledName("DOM_KEY_LOCATION_JOYSTICK1")>]
            member __.DOM_KEY_LOCATION_JOYSTICK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_KEY_LOCATION_MOBILE)"); CompiledName("DOM_KEY_LOCATION_MOBILE1")>]
            member __.DOM_KEY_LOCATION_MOBILE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type LinkStyle with 

            [<FunScript.JSEmitInline("({0}.styleSheet)"); CompiledName("styleSheet1")>]
            member __.styleSheet with get() : StyleSheet = failwith "never" and set (v : StyleSheet) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sheet)"); CompiledName("sheet")>]
            member __.sheet with get() : StyleSheet = failwith "never" and set (v : StyleSheet) : unit = failwith "never"




    type Location with 

            [<FunScript.JSEmitInline("({0}.hash)"); CompiledName("hash2")>]
            member __.hash with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.protocol)"); CompiledName("protocol2")>]
            member __.protocol with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.search)"); CompiledName("search2")>]
            member __.search with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href7")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hostname)"); CompiledName("hostname2")>]
            member __.hostname with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.port)"); CompiledName("port2")>]
            member __.port with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pathname)"); CompiledName("pathname2")>]
            member __.pathname with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.host)"); CompiledName("host2")>]
            member __.host with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.reload({args}))"); CompiledName("reload")>]
            member __.reload(?flag : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replace({args}))"); CompiledName("replace")>]
            member __.replace(url : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.assign({args}))"); CompiledName("assign")>]
            member __.assign(url : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString9")>]
            member __.toString() : string = failwith "never"




    type LongRunningScriptDetectedEvent with 

            [<FunScript.JSEmitInline("({0}.stopPageScriptExecution)"); CompiledName("stopPageScriptExecution")>]
            member __.stopPageScriptExecution with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.executionTime)"); CompiledName("executionTime")>]
            member __.executionTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MSApp with 

            [<FunScript.JSEmitInline("({0}.createFileFromStorageFile({args}))"); CompiledName("createFileFromStorageFile")>]
            member __.createFileFromStorageFile(storageFile : obj) : File = failwith "never"
            [<FunScript.JSEmitInline("({0}.createBlobFromRandomAccessStream({args}))"); CompiledName("createBlobFromRandomAccessStream")>]
            member __.createBlobFromRandomAccessStream(_type : string, seeker : obj) : Blob = failwith "never"
            [<FunScript.JSEmitInline("({0}.createStreamFromInputStream({args}))"); CompiledName("createStreamFromInputStream")>]
            member __.createStreamFromInputStream(_type : string, inputStream : obj) : MSStream = failwith "never"
            [<FunScript.JSEmitInline("({0}.terminateApp({args}))"); CompiledName("terminateApp")>]
            member __.terminateApp(exceptionObject : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createDataPackage({args}))"); CompiledName("createDataPackage")>]
            member __.createDataPackage(_object : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.execUnsafeLocalFunction({args}))"); CompiledName("execUnsafeLocalFunction")>]
            member __.execUnsafeLocalFunction(unsafeFunction : MSUnsafeFunctionCallbackDelegate) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getHtmlPrintDocumentSource({args}))"); CompiledName("getHtmlPrintDocumentSource")>]
            member __.getHtmlPrintDocumentSource(htmlDoc : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.addPublicLocalApplicationUri({args}))"); CompiledName("addPublicLocalApplicationUri")>]
            member __.addPublicLocalApplicationUri(uri : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createDataPackageFromSelection())"); CompiledName("createDataPackageFromSelection")>]
            member __.createDataPackageFromSelection() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getViewOpener())"); CompiledName("getViewOpener")>]
            member __.getViewOpener() : MSAppView = failwith "never"
            [<FunScript.JSEmitInline("({0}.suppressSubdownloadCredentialPrompts({args}))"); CompiledName("suppressSubdownloadCredentialPrompts")>]
            member __.suppressSubdownloadCredentialPrompts(suppress : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.execAsyncAtPriority({args}))"); CompiledName("execAsyncAtPriority")>]
            member __.execAsyncAtPriority(asynchronousCallback : MSExecAtPriorityFunctionCallback, priority : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.execAsyncAtPriority({args}))"); CompiledName("execAsyncAtPriority1")>]
            member __.execAsyncAtPriorityOverload2(asynchronousCallback : MSExecAtPriorityFunctionCallback, priority : string, [<System.ParamArray>] args : array<obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isTaskScheduledAtPriorityOrHigher({args}))"); CompiledName("isTaskScheduledAtPriorityOrHigher")>]
            member __.isTaskScheduledAtPriorityOrHigher(priority : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.execAtPriority({args}))"); CompiledName("execAtPriority")>]
            member __.execAtPriority(synchronousCallback : MSExecAtPriorityFunctionCallback, priority : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.execAtPriority({args}))"); CompiledName("execAtPriority1")>]
            member __.execAtPriorityOverload2(synchronousCallback : MSExecAtPriorityFunctionCallback, priority : string, [<System.ParamArray>] args : array<obj>) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.createNewView({args}))"); CompiledName("createNewView")>]
            member __.createNewView(uri : string) : MSAppView = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCurrentPriority())"); CompiledName("getCurrentPriority")>]
            member __.getCurrentPriority() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.NORMAL)"); CompiledName("NORMAL")>]
            member __.NORMAL with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIGH)"); CompiledName("HIGH")>]
            member __.HIGH with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.IDLE)"); CompiledName("IDLE2")>]
            member __.IDLE with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CURRENT)"); CompiledName("CURRENT")>]
            member __.CURRENT with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type MSAppView with 

            [<FunScript.JSEmitInline("({0}.viewId)"); CompiledName("viewId")>]
            member __.viewId with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.close())"); CompiledName("close3")>]
            member __.close() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.postMessage({args}))"); CompiledName("postMessage1")>]
            member __.postMessage(message : obj, targetOrigin : string, ?ports : obj) : unit = failwith "never"




    type MSBaseReader with 

            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress5")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState7")>]
            member __.readyState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort6")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadend)"); CompiledName("onloadend")>]
            member __.onloadend with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror12")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload7")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadstart)"); CompiledName("onloadstart3")>]
            member __.onloadstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.result)"); CompiledName("result3")>]
            member __.result with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abort())"); CompiledName("abort3")>]
            member __.abort() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADING)"); CompiledName("LOADING4")>]
            member __.LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.EMPTY)"); CompiledName("EMPTY")>]
            member __.EMPTY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DONE)"); CompiledName("DONE1")>]
            member __.DONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener1286")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1287")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadend\", {args})"); CompiledName("addEventListener1288")>]
            member __.addEventListener_loadend(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1289")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1290")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener1291")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1292")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type MSBehaviorUrnsCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length24")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item13")>]
            member __.item(index : float) : string = failwith "never"




    type MSBlobBuilder with 

            [<FunScript.JSEmitInline("({0}.append({args}))"); CompiledName("append1")>]
            member __.append(data : obj, ?endings : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getBlob({args}))"); CompiledName("getBlob")>]
            member __.getBlob(?contentType : string) : Blob = failwith "never"




    type MSCSSMatrix with 

            [<FunScript.JSEmitInline("({0}.m24)"); CompiledName("m24")>]
            member __.m24 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m34)"); CompiledName("m34")>]
            member __.m34 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.a)"); CompiledName("a")>]
            member __.a with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.d)"); CompiledName("d")>]
            member __.d with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m32)"); CompiledName("m32")>]
            member __.m32 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m41)"); CompiledName("m41")>]
            member __.m41 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m11)"); CompiledName("m11")>]
            member __.m11 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.f)"); CompiledName("f")>]
            member __.f with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.e)"); CompiledName("e")>]
            member __.e with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m23)"); CompiledName("m23")>]
            member __.m23 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m14)"); CompiledName("m14")>]
            member __.m14 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m33)"); CompiledName("m33")>]
            member __.m33 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m22)"); CompiledName("m22")>]
            member __.m22 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m21)"); CompiledName("m21")>]
            member __.m21 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.c)"); CompiledName("c")>]
            member __.c with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m12)"); CompiledName("m12")>]
            member __.m12 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.b)"); CompiledName("b")>]
            member __.b with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m42)"); CompiledName("m42")>]
            member __.m42 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m31)"); CompiledName("m31")>]
            member __.m31 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m43)"); CompiledName("m43")>]
            member __.m43 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m13)"); CompiledName("m13")>]
            member __.m13 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.m44)"); CompiledName("m44")>]
            member __.m44 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.multiply({args}))"); CompiledName("multiply")>]
            member __.multiply(secondMatrix : MSCSSMatrix) : MSCSSMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.skewY({args}))"); CompiledName("skewY")>]
            member __.skewY(angle : float) : MSCSSMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.setMatrixValue({args}))"); CompiledName("setMatrixValue")>]
            member __.setMatrixValue(value : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.inverse())"); CompiledName("inverse")>]
            member __.inverse() : MSCSSMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotateAxisAngle({args}))"); CompiledName("rotateAxisAngle")>]
            member __.rotateAxisAngle(x : float, y : float, z : float, angle : float) : MSCSSMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString10")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotate({args}))"); CompiledName("rotate1")>]
            member __.rotate(angleX : float, ?angleY : float, ?angleZ : float) : MSCSSMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.translate({args}))"); CompiledName("translate1")>]
            member __.translate(x : float, y : float, ?z : float) : MSCSSMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.scale({args}))"); CompiledName("scale1")>]
            member __.scale(scaleX : float, ?scaleY : float, ?scaleZ : float) : MSCSSMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.skewX({args}))"); CompiledName("skewX")>]
            member __.skewX(angle : float) : MSCSSMatrix = failwith "never"




    type MSCSSProperties with 

            [<FunScript.JSEmitInline("({0}.scrollbarShadowColor)"); CompiledName("scrollbarShadowColor")>]
            member __.scrollbarShadowColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollbarHighlightColor)"); CompiledName("scrollbarHighlightColor")>]
            member __.scrollbarHighlightColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.layoutGridChar)"); CompiledName("layoutGridChar")>]
            member __.layoutGridChar with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.layoutGridType)"); CompiledName("layoutGridType")>]
            member __.layoutGridType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textAutospace)"); CompiledName("textAutospace")>]
            member __.textAutospace with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textKashidaSpace)"); CompiledName("textKashidaSpace")>]
            member __.textKashidaSpace with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.writingMode)"); CompiledName("writingMode")>]
            member __.writingMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollbarFaceColor)"); CompiledName("scrollbarFaceColor")>]
            member __.scrollbarFaceColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundPositionY)"); CompiledName("backgroundPositionY")>]
            member __.backgroundPositionY with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineBreak)"); CompiledName("lineBreak")>]
            member __.lineBreak with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.imeMode)"); CompiledName("imeMode")>]
            member __.imeMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msBlockProgression)"); CompiledName("msBlockProgression")>]
            member __.msBlockProgression with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.layoutGridLine)"); CompiledName("layoutGridLine")>]
            member __.layoutGridLine with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollbarBaseColor)"); CompiledName("scrollbarBaseColor")>]
            member __.scrollbarBaseColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.layoutGrid)"); CompiledName("layoutGrid")>]
            member __.layoutGrid with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.layoutFlow)"); CompiledName("layoutFlow")>]
            member __.layoutFlow with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textKashida)"); CompiledName("textKashida")>]
            member __.textKashida with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filter)"); CompiledName("filter2")>]
            member __.filter with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.zoom)"); CompiledName("zoom")>]
            member __.zoom with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollbarArrowColor)"); CompiledName("scrollbarArrowColor")>]
            member __.scrollbarArrowColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.behavior)"); CompiledName("behavior1")>]
            member __.behavior with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.backgroundPositionX)"); CompiledName("backgroundPositionX")>]
            member __.backgroundPositionX with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.accelerator)"); CompiledName("accelerator")>]
            member __.accelerator with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.layoutGridMode)"); CompiledName("layoutGridMode")>]
            member __.layoutGridMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textJustifyTrim)"); CompiledName("textJustifyTrim")>]
            member __.textJustifyTrim with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollbar3dLightColor)"); CompiledName("scrollbar3dLightColor")>]
            member __.scrollbar3dLightColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msInterpolationMode)"); CompiledName("msInterpolationMode")>]
            member __.msInterpolationMode with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollbarTrackColor)"); CompiledName("scrollbarTrackColor")>]
            member __.scrollbarTrackColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollbarDarkShadowColor)"); CompiledName("scrollbarDarkShadowColor")>]
            member __.scrollbarDarkShadowColor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.styleFloat)"); CompiledName("styleFloat")>]
            member __.styleFloat with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAttribute({args}))"); CompiledName("getAttribute1")>]
            member __.getAttribute(attributeName : string, ?flags : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.setAttribute({args}))"); CompiledName("setAttribute1")>]
            member __.setAttribute(attributeName : string, attributeValue : obj, ?flags : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeAttribute({args}))"); CompiledName("removeAttribute1")>]
            member __.removeAttribute(attributeName : string, ?flags : float) : bool = failwith "never"




    type MSCSSRuleList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length25")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item14")>]
            member __.item(?index : float) : CSSStyleRule = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item20")>]
            member __.Item with get(i : int) : CSSStyleRule = failwith "never" and set (i : int) (v : CSSStyleRule) : unit = failwith "never"




    type MSCompatibleInfo with 

            [<FunScript.JSEmitInline("({0}.version)"); CompiledName("version2")>]
            member __.version with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.userAgent)"); CompiledName("userAgent")>]
            member __.userAgent with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type MSCompatibleInfoCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length26")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item15")>]
            member __.item(index : float) : MSCompatibleInfo = failwith "never"




    type MSCurrentStyleCSSProperties with 

            [<FunScript.JSEmitInline("({0}.blockDirection)"); CompiledName("blockDirection")>]
            member __.blockDirection with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clipBottom)"); CompiledName("clipBottom")>]
            member __.clipBottom with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clipLeft)"); CompiledName("clipLeft")>]
            member __.clipLeft with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clipRight)"); CompiledName("clipRight")>]
            member __.clipRight with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clipTop)"); CompiledName("clipTop")>]
            member __.clipTop with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasLayout)"); CompiledName("hasLayout")>]
            member __.hasLayout with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type MSDataBindingExtensions with 

            [<FunScript.JSEmitInline("({0}.dataSrc)"); CompiledName("dataSrc")>]
            member __.dataSrc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dataFormatAs)"); CompiledName("dataFormatAs")>]
            member __.dataFormatAs with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dataFld)"); CompiledName("dataFld")>]
            member __.dataFld with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type MSDataBindingRecordSetExtensions with 

            [<FunScript.JSEmitInline("({0}.recordset)"); CompiledName("recordset")>]
            member __.recordset with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.namedRecordset({args}))"); CompiledName("namedRecordset")>]
            member __.namedRecordset(dataMember : string, ?hierarchy : obj) : obj = failwith "never"




    type MSDataBindingRecordSetReadonlyExtensions with 

            [<FunScript.JSEmitInline("({0}.recordset)"); CompiledName("recordset1")>]
            member __.recordset with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.namedRecordset({args}))"); CompiledName("namedRecordset1")>]
            member __.namedRecordset(dataMember : string, ?hierarchy : obj) : obj = failwith "never"




    type MSDataBindingTableExtensions with 

            [<FunScript.JSEmitInline("({0}.dataPageSize)"); CompiledName("dataPageSize")>]
            member __.dataPageSize with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nextPage())"); CompiledName("nextPage")>]
            member __.nextPage() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.firstPage())"); CompiledName("firstPage")>]
            member __.firstPage() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.refresh())"); CompiledName("refresh")>]
            member __.refresh() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousPage())"); CompiledName("previousPage")>]
            member __.previousPage() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastPage())"); CompiledName("lastPage")>]
            member __.lastPage() : unit = failwith "never"




    type MSDocumentExtensions with 

            [<FunScript.JSEmitInline("({0}.captureEvents())"); CompiledName("captureEvents1")>]
            member __.captureEvents() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.releaseEvents())"); CompiledName("releaseEvents1")>]
            member __.releaseEvents() : unit = failwith "never"




    type MSEventAttachmentTarget with 

            [<FunScript.JSEmitInline("({0}.attachEvent({args}))"); CompiledName("attachEvent1")>]
            member __.attachEvent(_event : string, listener : EventListenerDelegate) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.detachEvent({args}))"); CompiledName("detachEvent1")>]
            member __.detachEvent(_event : string, listener : EventListenerDelegate) : unit = failwith "never"




    type MSEventObj with 

            [<FunScript.JSEmitInline("({0}.nextPage)"); CompiledName("nextPage1")>]
            member __.nextPage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.keyCode)"); CompiledName("keyCode1")>]
            member __.keyCode with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toElement)"); CompiledName("toElement")>]
            member __.toElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.returnValue)"); CompiledName("returnValue1")>]
            member __.returnValue with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dataFld)"); CompiledName("dataFld1")>]
            member __.dataFld with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y2")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dataTransfer)"); CompiledName("dataTransfer1")>]
            member __.dataTransfer with get() : DataTransfer = failwith "never" and set (v : DataTransfer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.propertyName)"); CompiledName("propertyName")>]
            member __.propertyName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.url)"); CompiledName("url1")>]
            member __.url with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetX)"); CompiledName("offsetX")>]
            member __.offsetX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.recordset)"); CompiledName("recordset2")>]
            member __.recordset with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenX)"); CompiledName("screenX1")>]
            member __.screenX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.buttonID)"); CompiledName("buttonID")>]
            member __.buttonID with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.wheelDelta)"); CompiledName("wheelDelta")>]
            member __.wheelDelta with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.reason)"); CompiledName("reason1")>]
            member __.reason with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.origin)"); CompiledName("origin")>]
            member __.origin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data5")>]
            member __.data with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.srcFilter)"); CompiledName("srcFilter")>]
            member __.srcFilter with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.boundElements)"); CompiledName("boundElements")>]
            member __.boundElements with get() : HTMLCollection = failwith "never" and set (v : HTMLCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cancelBubble)"); CompiledName("cancelBubble1")>]
            member __.cancelBubble with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.altLeft)"); CompiledName("altLeft")>]
            member __.altLeft with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.behaviorCookie)"); CompiledName("behaviorCookie")>]
            member __.behaviorCookie with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bookmarks)"); CompiledName("bookmarks")>]
            member __.bookmarks with get() : BookmarkCollection = failwith "never" and set (v : BookmarkCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type19")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.repeat)"); CompiledName("repeat1")>]
            member __.repeat with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.srcElement)"); CompiledName("srcElement1")>]
            member __.srcElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.source)"); CompiledName("source2")>]
            member __.source with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fromElement)"); CompiledName("fromElement")>]
            member __.fromElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetY)"); CompiledName("offsetY")>]
            member __.offsetY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x2")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.behaviorPart)"); CompiledName("behaviorPart")>]
            member __.behaviorPart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.qualifier)"); CompiledName("qualifier")>]
            member __.qualifier with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.altKey)"); CompiledName("altKey1")>]
            member __.altKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ctrlKey)"); CompiledName("ctrlKey1")>]
            member __.ctrlKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientY)"); CompiledName("clientY")>]
            member __.clientY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shiftKey)"); CompiledName("shiftKey1")>]
            member __.shiftKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shiftLeft)"); CompiledName("shiftLeft")>]
            member __.shiftLeft with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentOverflow)"); CompiledName("contentOverflow")>]
            member __.contentOverflow with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenY)"); CompiledName("screenY1")>]
            member __.screenY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ctrlLeft)"); CompiledName("ctrlLeft")>]
            member __.ctrlLeft with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.button)"); CompiledName("button")>]
            member __.button with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.srcUrn)"); CompiledName("srcUrn")>]
            member __.srcUrn with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientX)"); CompiledName("clientX")>]
            member __.clientX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.actionURL)"); CompiledName("actionURL")>]
            member __.actionURL with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAttribute({args}))"); CompiledName("getAttribute2")>]
            member __.getAttribute(strAttributeName : string, ?lFlags : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.setAttribute({args}))"); CompiledName("setAttribute2")>]
            member __.setAttribute(strAttributeName : string, attributeValue : obj, ?lFlags : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeAttribute({args}))"); CompiledName("removeAttribute2")>]
            member __.removeAttribute(strAttributeName : string, ?lFlags : float) : bool = failwith "never"




    type MSExecAtPriorityFunctionCallback with 

            [<FunScript.JSEmitInline("({0}())"); CompiledName("Invoke29")>]
            member __.Invoke() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke30")>]
            member __.InvokeOverload2([<System.ParamArray>] args : array<obj>) : obj = failwith "never"




    type MSFileSaver with 

            [<FunScript.JSEmitInline("({0}.msSaveBlob({args}))"); CompiledName("msSaveBlob")>]
            member __.msSaveBlob(blob : obj, ?defaultName : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.msSaveOrOpenBlob({args}))"); CompiledName("msSaveOrOpenBlob")>]
            member __.msSaveOrOpenBlob(blob : obj, ?defaultName : string) : bool = failwith "never"




    type MSGesture with 

            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target6")>]
            member __.target with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addPointer({args}))"); CompiledName("addPointer")>]
            member __.addPointer(pointerId : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stop())"); CompiledName("stop1")>]
            member __.stop() : unit = failwith "never"




    type MSGestureEvent with 

            [<FunScript.JSEmitInline("({0}.offsetY)"); CompiledName("offsetY1")>]
            member __.offsetY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.translationY)"); CompiledName("translationY")>]
            member __.translationY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.velocityExpansion)"); CompiledName("velocityExpansion")>]
            member __.velocityExpansion with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.velocityY)"); CompiledName("velocityY")>]
            member __.velocityY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.velocityAngular)"); CompiledName("velocityAngular")>]
            member __.velocityAngular with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.translationX)"); CompiledName("translationX")>]
            member __.translationX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.velocityX)"); CompiledName("velocityX")>]
            member __.velocityX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hwTimestamp)"); CompiledName("hwTimestamp")>]
            member __.hwTimestamp with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetX)"); CompiledName("offsetX1")>]
            member __.offsetX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenX)"); CompiledName("screenX2")>]
            member __.screenX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotation)"); CompiledName("rotation")>]
            member __.rotation with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.expansion)"); CompiledName("expansion")>]
            member __.expansion with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientY)"); CompiledName("clientY1")>]
            member __.clientY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenY)"); CompiledName("screenY2")>]
            member __.screenY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scale)"); CompiledName("scale2")>]
            member __.scale with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.gestureObject)"); CompiledName("gestureObject")>]
            member __.gestureObject with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientX)"); CompiledName("clientX1")>]
            member __.clientX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initGestureEvent({args}))"); CompiledName("initGestureEvent")>]
            member __.initGestureEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, screenXArg : float, screenYArg : float, clientXArg : float, clientYArg : float, offsetXArg : float, offsetYArg : float, translationXArg : float, translationYArg : float, scaleArg : float, expansionArg : float, rotationArg : float, velocityXArg : float, velocityYArg : float, velocityExpansionArg : float, velocityAngularArg : float, hwTimestampArg : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_BEGIN)"); CompiledName("MSGESTURE_FLAG_BEGIN1")>]
            member __.MSGESTURE_FLAG_BEGIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_END)"); CompiledName("MSGESTURE_FLAG_END1")>]
            member __.MSGESTURE_FLAG_END with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_CANCEL)"); CompiledName("MSGESTURE_FLAG_CANCEL1")>]
            member __.MSGESTURE_FLAG_CANCEL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_INERTIA)"); CompiledName("MSGESTURE_FLAG_INERTIA1")>]
            member __.MSGESTURE_FLAG_INERTIA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSGESTURE_FLAG_NONE)"); CompiledName("MSGESTURE_FLAG_NONE1")>]
            member __.MSGESTURE_FLAG_NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MSGraphicsTrust with 

            [<FunScript.JSEmitInline("({0}.status)"); CompiledName("status5")>]
            member __.status with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.constrictionActive)"); CompiledName("constrictionActive")>]
            member __.constrictionActive with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type MSHTMLCollectionExtensions with 

            [<FunScript.JSEmitInline("({0}.urns({args}))"); CompiledName("urns")>]
            member __.urns(urn : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.tags({args}))"); CompiledName("tags")>]
            member __.tags(tagName : obj) : obj = failwith "never"




    type MSHTMLWebViewElement with 

            [<FunScript.JSEmitInline("({0}.documentTitle)"); CompiledName("documentTitle")>]
            member __.documentTitle with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width19")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.src)"); CompiledName("src10")>]
            member __.src with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.canGoForward)"); CompiledName("canGoForward")>]
            member __.canGoForward with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height16")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.canGoBack)"); CompiledName("canGoBack")>]
            member __.canGoBack with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.navigateWithHttpRequestMessage({args}))"); CompiledName("navigateWithHttpRequestMessage")>]
            member __.navigateWithHttpRequestMessage(requestMessage : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.goBack())"); CompiledName("goBack")>]
            member __.goBack() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.navigate({args}))"); CompiledName("navigate1")>]
            member __.navigate(uri : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stop())"); CompiledName("stop2")>]
            member __.stop() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.navigateToString({args}))"); CompiledName("navigateToString")>]
            member __.navigateToString(contents : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.captureSelectedContentToDataPackageAsync())"); CompiledName("captureSelectedContentToDataPackageAsync")>]
            member __.captureSelectedContentToDataPackageAsync() : MSWebViewAsyncOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.capturePreviewToBlobAsync())"); CompiledName("capturePreviewToBlobAsync")>]
            member __.capturePreviewToBlobAsync() : MSWebViewAsyncOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.refresh())"); CompiledName("refresh1")>]
            member __.refresh() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.goForward())"); CompiledName("goForward")>]
            member __.goForward() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.navigateToLocalStreamUri({args}))"); CompiledName("navigateToLocalStreamUri")>]
            member __.navigateToLocalStreamUri(source : string, streamResolver : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.invokeScriptAsync({args}))"); CompiledName("invokeScriptAsync")>]
            member __.invokeScriptAsync(scriptName : string) : MSWebViewAsyncOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.invokeScriptAsync({args}))"); CompiledName("invokeScriptAsync1")>]
            member __.invokeScriptAsyncOverload2(scriptName : string, [<System.ParamArray>] args : array<obj>) : MSWebViewAsyncOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.buildLocalStreamUri({args}))"); CompiledName("buildLocalStreamUri")>]
            member __.buildLocalStreamUri(contentIdentifier : string, relativePath : string) : string = failwith "never"




    type MSImageResourceExtensions with 

            [<FunScript.JSEmitInline("({0}.dynsrc)"); CompiledName("dynsrc1")>]
            member __.dynsrc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vrml)"); CompiledName("vrml1")>]
            member __.vrml with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lowsrc)"); CompiledName("lowsrc1")>]
            member __.lowsrc with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.start)"); CompiledName("start3")>]
            member __.start with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loop)"); CompiledName("loop4")>]
            member __.loop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MSInputMethodContext with 

            [<FunScript.JSEmitInline("({0}.oncandidatewindowshow)"); CompiledName("oncandidatewindowshow")>]
            member __.oncandidatewindowshow with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target7")>]
            member __.target with get() : HTMLElement = failwith "never" and set (v : HTMLElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.compositionStartOffset)"); CompiledName("compositionStartOffset")>]
            member __.compositionStartOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncandidatewindowhide)"); CompiledName("oncandidatewindowhide")>]
            member __.oncandidatewindowhide with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncandidatewindowupdate)"); CompiledName("oncandidatewindowupdate")>]
            member __.oncandidatewindowupdate with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.compositionEndOffset)"); CompiledName("compositionEndOffset")>]
            member __.compositionEndOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCompositionAlternatives())"); CompiledName("getCompositionAlternatives")>]
            member __.getCompositionAlternatives() : array<string> = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCandidateWindowClientRect())"); CompiledName("getCandidateWindowClientRect")>]
            member __.getCandidateWindowClientRect() : ClientRect = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasComposition())"); CompiledName("hasComposition")>]
            member __.hasComposition() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.isCandidateWindowVisible())"); CompiledName("isCandidateWindowVisible")>]
            member __.isCandidateWindowVisible() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"candidatewindowshow\", {args})"); CompiledName("addEventListener1293")>]
            member __.addEventListener_candidatewindowshow(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"candidatewindowhide\", {args})"); CompiledName("addEventListener1294")>]
            member __.addEventListener_candidatewindowhide(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"candidatewindowupdate\", {args})"); CompiledName("addEventListener1295")>]
            member __.addEventListener_candidatewindowupdate(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1296")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type MSLaunchUriCallback with 

            [<FunScript.JSEmitInline("({0}())"); CompiledName("Invoke31")>]
            member __.Invoke() : unit = failwith "never"




    type MSManipulationEvent with 

            [<FunScript.JSEmitInline("({0}.lastState)"); CompiledName("lastState")>]
            member __.lastState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentState)"); CompiledName("currentState")>]
            member __.currentState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initMSManipulationEvent({args}))"); CompiledName("initMSManipulationEvent")>]
            member __.initMSManipulationEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, lastState : float, currentState : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_STOPPED)"); CompiledName("MS_MANIPULATION_STATE_STOPPED1")>]
            member __.MS_MANIPULATION_STATE_STOPPED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_ACTIVE)"); CompiledName("MS_MANIPULATION_STATE_ACTIVE1")>]
            member __.MS_MANIPULATION_STATE_ACTIVE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_INERTIA)"); CompiledName("MS_MANIPULATION_STATE_INERTIA1")>]
            member __.MS_MANIPULATION_STATE_INERTIA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_SELECTING)"); CompiledName("MS_MANIPULATION_STATE_SELECTING1")>]
            member __.MS_MANIPULATION_STATE_SELECTING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_COMMITTED)"); CompiledName("MS_MANIPULATION_STATE_COMMITTED1")>]
            member __.MS_MANIPULATION_STATE_COMMITTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_PRESELECT)"); CompiledName("MS_MANIPULATION_STATE_PRESELECT1")>]
            member __.MS_MANIPULATION_STATE_PRESELECT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_DRAGGING)"); CompiledName("MS_MANIPULATION_STATE_DRAGGING1")>]
            member __.MS_MANIPULATION_STATE_DRAGGING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MANIPULATION_STATE_CANCELLED)"); CompiledName("MS_MANIPULATION_STATE_CANCELLED1")>]
            member __.MS_MANIPULATION_STATE_CANCELLED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MSMediaKeyError with 

            [<FunScript.JSEmitInline("({0}.systemCode)"); CompiledName("systemCode")>]
            member __.systemCode with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code5")>]
            member __.code with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_SERVICE)"); CompiledName("MS_MEDIA_KEYERR_SERVICE1")>]
            member __.MS_MEDIA_KEYERR_SERVICE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_HARDWARECHANGE)"); CompiledName("MS_MEDIA_KEYERR_HARDWARECHANGE1")>]
            member __.MS_MEDIA_KEYERR_HARDWARECHANGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_OUTPUT)"); CompiledName("MS_MEDIA_KEYERR_OUTPUT1")>]
            member __.MS_MEDIA_KEYERR_OUTPUT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_DOMAIN)"); CompiledName("MS_MEDIA_KEYERR_DOMAIN1")>]
            member __.MS_MEDIA_KEYERR_DOMAIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_UNKNOWN)"); CompiledName("MS_MEDIA_KEYERR_UNKNOWN1")>]
            member __.MS_MEDIA_KEYERR_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_KEYERR_CLIENT)"); CompiledName("MS_MEDIA_KEYERR_CLIENT1")>]
            member __.MS_MEDIA_KEYERR_CLIENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MSMediaKeyMessageEvent with 

            [<FunScript.JSEmitInline("({0}.destinationURL)"); CompiledName("destinationURL")>]
            member __.destinationURL with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.message)"); CompiledName("message4")>]
            member __.message with get() : Uint8Array = failwith "never" and set (v : Uint8Array) : unit = failwith "never"




    type MSMediaKeyNeededEvent with 

            [<FunScript.JSEmitInline("({0}.initData)"); CompiledName("initData")>]
            member __.initData with get() : Uint8Array = failwith "never" and set (v : Uint8Array) : unit = failwith "never"




    type MSMediaKeySession with 

            [<FunScript.JSEmitInline("({0}.sessionId)"); CompiledName("sessionId")>]
            member __.sessionId with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.error)"); CompiledName("error7")>]
            member __.error with get() : MSMediaKeyError = failwith "never" and set (v : MSMediaKeyError) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.keySystem)"); CompiledName("keySystem")>]
            member __.keySystem with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.close())"); CompiledName("close4")>]
            member __.close() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.update({args}))"); CompiledName("update2")>]
            member __.update(key : Uint8Array) : unit = failwith "never"




    type MSMediaKeys with 

            [<FunScript.JSEmitInline("({0}.keySystem)"); CompiledName("keySystem1")>]
            member __.keySystem with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSession({args}))"); CompiledName("createSession")>]
            member __.createSession(_type : string, initData : Uint8Array, ?cdmData : Uint8Array) : MSMediaKeySession = failwith "never"




    type MSMimeTypesCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length27")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MSNamespaceInfo with 

            [<FunScript.JSEmitInline("({0}.urn)"); CompiledName("urn1")>]
            member __.urn with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onreadystatechange)"); CompiledName("onreadystatechange3")>]
            member __.onreadystatechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name29")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState8")>]
            member __.readyState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.doImport({args}))"); CompiledName("doImport")>]
            member __.doImport(implementationUrl : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener1297")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1298")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type MSNamespaceInfoCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length28")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.add({args}))"); CompiledName("add5")>]
            member __.add(?_namespace : string, ?urn : string, ?implementationUrl : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item16")>]
            member __.item(index : obj) : obj = failwith "never"




    type MSNavigatorDoNotTrack with 

            [<FunScript.JSEmitInline("({0}.msDoNotTrack)"); CompiledName("msDoNotTrack")>]
            member __.msDoNotTrack with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeSiteSpecificTrackingException({args}))"); CompiledName("removeSiteSpecificTrackingException")>]
            member __.removeSiteSpecificTrackingException(args : ExceptionInformation) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeWebWideTrackingException({args}))"); CompiledName("removeWebWideTrackingException")>]
            member __.removeWebWideTrackingException(args : ExceptionInformation) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.storeWebWideTrackingException({args}))"); CompiledName("storeWebWideTrackingException")>]
            member __.storeWebWideTrackingException(args : StoreExceptionsInformation) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.storeSiteSpecificTrackingException({args}))"); CompiledName("storeSiteSpecificTrackingException")>]
            member __.storeSiteSpecificTrackingException(args : StoreSiteSpecificExceptionsInformation) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.confirmSiteSpecificTrackingException({args}))"); CompiledName("confirmSiteSpecificTrackingException")>]
            member __.confirmSiteSpecificTrackingException(args : ConfirmSiteSpecificExceptionsInformation) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.confirmWebWideTrackingException({args}))"); CompiledName("confirmWebWideTrackingException")>]
            member __.confirmWebWideTrackingException(args : ExceptionInformation) : bool = failwith "never"




    type MSNavigatorExtensions with 

            [<FunScript.JSEmitInline("({0}.userLanguage)"); CompiledName("userLanguage")>]
            member __.userLanguage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.plugins)"); CompiledName("plugins1")>]
            member __.plugins with get() : MSPluginsCollection = failwith "never" and set (v : MSPluginsCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cookieEnabled)"); CompiledName("cookieEnabled")>]
            member __.cookieEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appCodeName)"); CompiledName("appCodeName")>]
            member __.appCodeName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cpuClass)"); CompiledName("cpuClass")>]
            member __.cpuClass with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appMinorVersion)"); CompiledName("appMinorVersion")>]
            member __.appMinorVersion with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.connectionSpeed)"); CompiledName("connectionSpeed")>]
            member __.connectionSpeed with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.browserLanguage)"); CompiledName("browserLanguage")>]
            member __.browserLanguage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mimeTypes)"); CompiledName("mimeTypes")>]
            member __.mimeTypes with get() : MSMimeTypesCollection = failwith "never" and set (v : MSMimeTypesCollection) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.systemLanguage)"); CompiledName("systemLanguage")>]
            member __.systemLanguage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.language)"); CompiledName("language2")>]
            member __.language with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.javaEnabled())"); CompiledName("javaEnabled")>]
            member __.javaEnabled() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.taintEnabled())"); CompiledName("taintEnabled")>]
            member __.taintEnabled() : bool = failwith "never"




    type MSNodeExtensions with 

            [<FunScript.JSEmitInline("({0}.swapNode({args}))"); CompiledName("swapNode")>]
            member __.swapNode(otherNode : Node) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeNode({args}))"); CompiledName("removeNode")>]
            member __.removeNode(?deep : bool) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceNode({args}))"); CompiledName("replaceNode")>]
            member __.replaceNode(replacement : Node) : Node = failwith "never"




    type MSPluginsCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length29")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.refresh({args}))"); CompiledName("refresh2")>]
            member __.refresh(?reload : bool) : unit = failwith "never"




    type MSPointerEvent with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width20")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotation)"); CompiledName("rotation1")>]
            member __.rotation with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pressure)"); CompiledName("pressure")>]
            member __.pressure with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointerType)"); CompiledName("pointerType")>]
            member __.pointerType with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isPrimary)"); CompiledName("isPrimary")>]
            member __.isPrimary with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tiltY)"); CompiledName("tiltY")>]
            member __.tiltY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height17")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.intermediatePoints)"); CompiledName("intermediatePoints")>]
            member __.intermediatePoints with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentPoint)"); CompiledName("currentPoint")>]
            member __.currentPoint with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tiltX)"); CompiledName("tiltX")>]
            member __.tiltX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hwTimestamp)"); CompiledName("hwTimestamp1")>]
            member __.hwTimestamp with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointerId)"); CompiledName("pointerId")>]
            member __.pointerId with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initPointerEvent({args}))"); CompiledName("initPointerEvent")>]
            member __.initPointerEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, screenXArg : float, screenYArg : float, clientXArg : float, clientYArg : float, ctrlKeyArg : bool, altKeyArg : bool, shiftKeyArg : bool, metaKeyArg : bool, buttonArg : float, relatedTargetArg : EventTarget, offsetXArg : float, offsetYArg : float, widthArg : float, heightArg : float, pressure : float, rotation : float, tiltX : float, tiltY : float, pointerIdArg : float, pointerType : obj, hwTimestampArg : float, isPrimary : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCurrentPoint({args}))"); CompiledName("getCurrentPoint")>]
            member __.getCurrentPoint(element : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getIntermediatePoints({args}))"); CompiledName("getIntermediatePoints")>]
            member __.getIntermediatePoints(element : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSPOINTER_TYPE_PEN)"); CompiledName("MSPOINTER_TYPE_PEN1")>]
            member __.MSPOINTER_TYPE_PEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSPOINTER_TYPE_MOUSE)"); CompiledName("MSPOINTER_TYPE_MOUSE1")>]
            member __.MSPOINTER_TYPE_MOUSE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MSPOINTER_TYPE_TOUCH)"); CompiledName("MSPOINTER_TYPE_TOUCH1")>]
            member __.MSPOINTER_TYPE_TOUCH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MSPopupWindow with 

            [<FunScript.JSEmitInline("({0}.document)"); CompiledName("document2")>]
            member __.document with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isOpen)"); CompiledName("isOpen")>]
            member __.isOpen with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.show({args}))"); CompiledName("show")>]
            member __.show(x : float, y : float, w : float, h : float, ?element : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hide())"); CompiledName("hide")>]
            member __.hide() : unit = failwith "never"




    type MSRangeCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length30")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item17")>]
            member __.item(index : float) : Range = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item21")>]
            member __.Item with get(i : int) : Range = failwith "never" and set (i : int) (v : Range) : unit = failwith "never"




    type MSResourceMetadata with 

            [<FunScript.JSEmitInline("({0}.protocol)"); CompiledName("protocol3")>]
            member __.protocol with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fileSize)"); CompiledName("fileSize")>]
            member __.fileSize with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fileUpdatedDate)"); CompiledName("fileUpdatedDate")>]
            member __.fileUpdatedDate with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nameProp)"); CompiledName("nameProp1")>]
            member __.nameProp with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fileCreatedDate)"); CompiledName("fileCreatedDate")>]
            member __.fileCreatedDate with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fileModifiedDate)"); CompiledName("fileModifiedDate")>]
            member __.fileModifiedDate with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mimeType)"); CompiledName("mimeType1")>]
            member __.mimeType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type MSSelection with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type20")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.typeDetail)"); CompiledName("typeDetail")>]
            member __.typeDetail with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createRange())"); CompiledName("createRange1")>]
            member __.createRange() : TextRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear6")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createRangeCollection())"); CompiledName("createRangeCollection")>]
            member __.createRangeCollection() : TextRangeCollection = failwith "never"
            [<FunScript.JSEmitInline("({0}.empty())"); CompiledName("empty")>]
            member __.empty() : unit = failwith "never"




    type MSSiteModeEvent with 

            [<FunScript.JSEmitInline("({0}.buttonID)"); CompiledName("buttonID1")>]
            member __.buttonID with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.actionURL)"); CompiledName("actionURL1")>]
            member __.actionURL with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type MSStorageExtensions with 

            [<FunScript.JSEmitInline("({0}.remainingSpace)"); CompiledName("remainingSpace")>]
            member __.remainingSpace with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MSStream with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type21")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msDetachStream())"); CompiledName("msDetachStream1")>]
            member __.msDetachStream() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.msClose())"); CompiledName("msClose1")>]
            member __.msClose() : unit = failwith "never"




    type MSStreamReader with 

            [<FunScript.JSEmitInline("({0}.error)"); CompiledName("error8")>]
            member __.error with get() : DOMError = failwith "never" and set (v : DOMError) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readAsArrayBuffer({args}))"); CompiledName("readAsArrayBuffer1")>]
            member __.readAsArrayBuffer(stream : MSStream, ?size : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readAsBlob({args}))"); CompiledName("readAsBlob")>]
            member __.readAsBlob(stream : MSStream, ?size : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readAsDataURL({args}))"); CompiledName("readAsDataURL1")>]
            member __.readAsDataURL(stream : MSStream, ?size : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readAsText({args}))"); CompiledName("readAsText1")>]
            member __.readAsText(stream : MSStream, ?encoding : string, ?size : float) : unit = failwith "never"




    type MSStyleCSSProperties with 

            [<FunScript.JSEmitInline("({0}.pixelWidth)"); CompiledName("pixelWidth")>]
            member __.pixelWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.posHeight)"); CompiledName("posHeight")>]
            member __.posHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.posLeft)"); CompiledName("posLeft")>]
            member __.posLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelTop)"); CompiledName("pixelTop")>]
            member __.pixelTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelBottom)"); CompiledName("pixelBottom")>]
            member __.pixelBottom with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textDecorationNone)"); CompiledName("textDecorationNone")>]
            member __.textDecorationNone with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelLeft)"); CompiledName("pixelLeft")>]
            member __.pixelLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.posTop)"); CompiledName("posTop")>]
            member __.posTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.posBottom)"); CompiledName("posBottom")>]
            member __.posBottom with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textDecorationOverline)"); CompiledName("textDecorationOverline")>]
            member __.textDecorationOverline with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.posWidth)"); CompiledName("posWidth")>]
            member __.posWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textDecorationLineThrough)"); CompiledName("textDecorationLineThrough")>]
            member __.textDecorationLineThrough with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelHeight)"); CompiledName("pixelHeight")>]
            member __.pixelHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textDecorationBlink)"); CompiledName("textDecorationBlink")>]
            member __.textDecorationBlink with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.posRight)"); CompiledName("posRight")>]
            member __.posRight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelRight)"); CompiledName("pixelRight")>]
            member __.pixelRight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textDecorationUnderline)"); CompiledName("textDecorationUnderline")>]
            member __.textDecorationUnderline with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type MSUnsafeFunctionCallback with 

            [<FunScript.JSEmitInline("({0}())"); CompiledName("Invoke32")>]
            member __.Invoke() : obj = failwith "never"




    type MSWebViewAsyncOperation with 

            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target8")>]
            member __.target with get() : MSHTMLWebViewElement = failwith "never" and set (v : MSHTMLWebViewElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncomplete)"); CompiledName("oncomplete3")>]
            member __.oncomplete with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.error)"); CompiledName("error9")>]
            member __.error with get() : DOMError = failwith "never" and set (v : DOMError) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror13")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState9")>]
            member __.readyState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type22")>]
            member __._type with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.result)"); CompiledName("result4")>]
            member __.result with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.start())"); CompiledName("start4")>]
            member __.start() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ERROR)"); CompiledName("ERROR4")>]
            member __.ERROR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION)"); CompiledName("TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION1")>]
            member __.TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_INVOKE_SCRIPT)"); CompiledName("TYPE_INVOKE_SCRIPT1")>]
            member __.TYPE_INVOKE_SCRIPT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPLETED)"); CompiledName("COMPLETED1")>]
            member __.COMPLETED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM)"); CompiledName("TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM1")>]
            member __.TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STARTED)"); CompiledName("STARTED1")>]
            member __.STARTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"complete\", {args})"); CompiledName("addEventListener1299")>]
            member __.addEventListener_complete(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1300")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1301")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type MSWindowExtensions with 

            [<FunScript.JSEmitInline("({0}.status)"); CompiledName("status6")>]
            member __.status with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseleave)"); CompiledName("onmouseleave2")>]
            member __.onmouseleave with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenLeft)"); CompiledName("screenLeft1")>]
            member __.screenLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offscreenBuffering)"); CompiledName("offscreenBuffering1")>]
            member __.offscreenBuffering with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maxConnectionsPerServer)"); CompiledName("maxConnectionsPerServer1")>]
            member __.maxConnectionsPerServer with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseenter)"); CompiledName("onmouseenter2")>]
            member __.onmouseenter with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clipboardData)"); CompiledName("clipboardData1")>]
            member __.clipboardData with get() : DataTransfer = failwith "never" and set (v : DataTransfer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.defaultStatus)"); CompiledName("defaultStatus1")>]
            member __.defaultStatus with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientInformation)"); CompiledName("clientInformation1")>]
            member __.clientInformation with get() : Navigator = failwith "never" and set (v : Navigator) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.closed)"); CompiledName("closed1")>]
            member __.closed with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onhelp)"); CompiledName("onhelp3")>]
            member __.onhelp with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.external)"); CompiledName("_external1")>]
            member __._external with get() : External = failwith "never" and set (v : External) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.event)"); CompiledName("_event2")>]
            member __._event with get() : MSEventObj = failwith "never" and set (v : MSEventObj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocusout)"); CompiledName("onfocusout3")>]
            member __.onfocusout with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenTop)"); CompiledName("screenTop1")>]
            member __.screenTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocusin)"); CompiledName("onfocusin3")>]
            member __.onfocusin with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.showModelessDialog({args}))"); CompiledName("showModelessDialog1")>]
            member __.showModelessDialog(?url : string, ?argument : obj, ?options : obj) : Window = failwith "never"
            [<FunScript.JSEmitInline("({0}.navigate({args}))"); CompiledName("navigate2")>]
            member __.navigate(url : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.resizeBy({args}))"); CompiledName("resizeBy1")>]
            member __.resizeBy(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item18")>]
            member __.item(index : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.resizeTo({args}))"); CompiledName("resizeTo1")>]
            member __.resizeTo(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createPopup({args}))"); CompiledName("createPopup1")>]
            member __.createPopup(?arguments : obj) : MSPopupWindow = failwith "never"
            [<FunScript.JSEmitInline("({0}.toStaticHTML({args}))"); CompiledName("toStaticHTML1")>]
            member __.toStaticHTML(html : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.execScript({args}))"); CompiledName("execScript1")>]
            member __.execScript(code : string, ?language : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.msWriteProfilerMark({args}))"); CompiledName("msWriteProfilerMark1")>]
            member __.msWriteProfilerMark(profilerMarkName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveTo({args}))"); CompiledName("moveTo2")>]
            member __.moveTo(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveBy({args}))"); CompiledName("moveBy1")>]
            member __.moveBy(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.showHelp({args}))"); CompiledName("showHelp1")>]
            member __.showHelp(url : string, ?helpArg : obj, ?features : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.captureEvents())"); CompiledName("captureEvents2")>]
            member __.captureEvents() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.releaseEvents())"); CompiledName("releaseEvents2")>]
            member __.releaseEvents() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener1302")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener1303")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener1304")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener1305")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener1306")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1307")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type MSWindowModeless with 

            [<FunScript.JSEmitInline("({0}.dialogTop)"); CompiledName("dialogTop")>]
            member __.dialogTop with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dialogLeft)"); CompiledName("dialogLeft")>]
            member __.dialogLeft with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dialogWidth)"); CompiledName("dialogWidth")>]
            member __.dialogWidth with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dialogHeight)"); CompiledName("dialogHeight")>]
            member __.dialogHeight with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.menuArguments)"); CompiledName("menuArguments")>]
            member __.menuArguments with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"




    type Map<'K, 'V> with 

            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear7")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.delete({args}))"); CompiledName("delete2")>]
            member __.delete(key : 'K) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.forEach({args}))"); CompiledName("forEach1")>]
            member __.forEach(callbackfn : System.Func<'V, 'K, Map<'K, 'V>, unit>, ?thisArg : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get7")>]
            member __.get(key : 'K) : 'V = failwith "never"
            [<FunScript.JSEmitInline("({0}.has({args}))"); CompiledName("has")>]
            member __.has(key : 'K) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set15")>]
            member __.set(key : 'K, value : 'V) : Map<'K, 'V> = failwith "never"
            [<FunScript.JSEmitInline("({0}.size)"); CompiledName("size5")>]
            member __.size with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type Math with 

            [<FunScript.JSEmitInline("({0}.E)"); CompiledName("E")>]
            member __.E with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LN10)"); CompiledName("LN10")>]
            member __.LN10 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LN2)"); CompiledName("LN2")>]
            member __.LN2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOG2E)"); CompiledName("LOG2E")>]
            member __.LOG2E with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOG10E)"); CompiledName("LOG10E")>]
            member __.LOG10E with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PI)"); CompiledName("PI")>]
            member __.PI with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SQRT1_2)"); CompiledName("SQRT1_2")>]
            member __.SQRT1_2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SQRT2)"); CompiledName("SQRT2")>]
            member __.SQRT2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abs({args}))"); CompiledName("abs")>]
            member __.abs(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.acos({args}))"); CompiledName("acos")>]
            member __.acos(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.asin({args}))"); CompiledName("asin")>]
            member __.asin(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.atan({args}))"); CompiledName("atan")>]
            member __.atan(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.atan2({args}))"); CompiledName("atan2")>]
            member __.atan2(y : float, x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.ceil({args}))"); CompiledName("ceil")>]
            member __.ceil(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.cos({args}))"); CompiledName("cos")>]
            member __.cos(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.exp({args}))"); CompiledName("exp")>]
            member __.exp(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.floor({args}))"); CompiledName("floor")>]
            member __.floor(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.log({args}))"); CompiledName("log2")>]
            member __.log(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.max())"); CompiledName("max2")>]
            member __.max() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.max({args}))"); CompiledName("max3")>]
            member __.maxOverload2([<System.ParamArray>] values : array<float>) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.min())"); CompiledName("min1")>]
            member __.min() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.min({args}))"); CompiledName("min2")>]
            member __.minOverload2([<System.ParamArray>] values : array<float>) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.pow({args}))"); CompiledName("pow")>]
            member __.pow(x : float, y : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.random())"); CompiledName("random")>]
            member __.random() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.round({args}))"); CompiledName("round")>]
            member __.round(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.sin({args}))"); CompiledName("sin")>]
            member __.sin(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.sqrt({args}))"); CompiledName("sqrt")>]
            member __.sqrt(x : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.tan({args}))"); CompiledName("tan")>]
            member __.tan(x : float) : float = failwith "never"




    type MediaError with 

            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code6")>]
            member __.code with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msExtendedCode)"); CompiledName("msExtendedCode")>]
            member __.msExtendedCode with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_ERR_ABORTED)"); CompiledName("MEDIA_ERR_ABORTED1")>]
            member __.MEDIA_ERR_ABORTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_ERR_NETWORK)"); CompiledName("MEDIA_ERR_NETWORK1")>]
            member __.MEDIA_ERR_NETWORK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_ERR_SRC_NOT_SUPPORTED)"); CompiledName("MEDIA_ERR_SRC_NOT_SUPPORTED1")>]
            member __.MEDIA_ERR_SRC_NOT_SUPPORTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIA_ERR_DECODE)"); CompiledName("MEDIA_ERR_DECODE1")>]
            member __.MEDIA_ERR_DECODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MS_MEDIA_ERR_ENCRYPTED)"); CompiledName("MS_MEDIA_ERR_ENCRYPTED1")>]
            member __.MS_MEDIA_ERR_ENCRYPTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MediaList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length31")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mediaText)"); CompiledName("mediaText")>]
            member __.mediaText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteMedium({args}))"); CompiledName("deleteMedium")>]
            member __.deleteMedium(oldMedium : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendMedium({args}))"); CompiledName("appendMedium")>]
            member __.appendMedium(newMedium : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item19")>]
            member __.item(index : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item22")>]
            member __.Item with get(i : int) : string = failwith "never" and set (i : int) (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString11")>]
            member __.toString() : string = failwith "never"




    type MediaQueryList with 

            [<FunScript.JSEmitInline("({0}.matches)"); CompiledName("matches")>]
            member __.matches with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media6")>]
            member __.media with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addListener({args}))"); CompiledName("addListener")>]
            member __.addListener(listener : MediaQueryListListenerDelegate) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeListener({args}))"); CompiledName("removeListener")>]
            member __.removeListener(listener : MediaQueryListListenerDelegate) : unit = failwith "never"




    type MediaQueryListListener with 

            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke33")>]
            member __.Invoke(mql : MediaQueryList) : unit = failwith "never"




    type MediaSource with 

            [<FunScript.JSEmitInline("({0}.sourceBuffers)"); CompiledName("sourceBuffers")>]
            member __.sourceBuffers with get() : SourceBufferList = failwith "never" and set (v : SourceBufferList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.duration)"); CompiledName("duration1")>]
            member __.duration with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState10")>]
            member __.readyState with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.activeSourceBuffers)"); CompiledName("activeSourceBuffers")>]
            member __.activeSourceBuffers with get() : SourceBufferList = failwith "never" and set (v : SourceBufferList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addSourceBuffer({args}))"); CompiledName("addSourceBuffer")>]
            member __.addSourceBuffer(_type : string) : SourceBuffer = failwith "never"
            [<FunScript.JSEmitInline("({0}.endOfStream({args}))"); CompiledName("endOfStream")>]
            member __.endOfStream(?error : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeSourceBuffer({args}))"); CompiledName("removeSourceBuffer")>]
            member __.removeSourceBuffer(sourceBuffer : SourceBuffer) : unit = failwith "never"




    type MessageChannel with 

            [<FunScript.JSEmitInline("({0}.port2)"); CompiledName("port21")>]
            member __.port2 with get() : MessagePort = failwith "never" and set (v : MessagePort) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.port1)"); CompiledName("port11")>]
            member __.port1 with get() : MessagePort = failwith "never" and set (v : MessagePort) : unit = failwith "never"




    type MessageEvent with 

            [<FunScript.JSEmitInline("({0}.source)"); CompiledName("source3")>]
            member __.source with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.origin)"); CompiledName("origin1")>]
            member __.origin with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data6")>]
            member __.data with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ports)"); CompiledName("ports")>]
            member __.ports with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initMessageEvent({args}))"); CompiledName("initMessageEvent")>]
            member __.initMessageEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, dataArg : obj, originArg : string, lastEventIdArg : string, sourceArg : Window) : unit = failwith "never"




    type MessagePort with 

            [<FunScript.JSEmitInline("({0}.onmessage)"); CompiledName("onmessage3")>]
            member __.onmessage with get() : System.Func<MessageEvent, obj> = failwith "never" and set (v : System.Func<MessageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.close())"); CompiledName("close5")>]
            member __.close() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.postMessage({args}))"); CompiledName("postMessage2")>]
            member __.postMessage(?message : obj, ?ports : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.start())"); CompiledName("start5")>]
            member __.start() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"message\", {args})"); CompiledName("addEventListener1308")>]
            member __.addEventListener_message(listener : System.Func<MessageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1309")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type MimeType with 

            [<FunScript.JSEmitInline("({0}.enabledPlugin)"); CompiledName("enabledPlugin")>]
            member __.enabledPlugin with get() : Plugin = failwith "never" and set (v : Plugin) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.suffixes)"); CompiledName("suffixes")>]
            member __.suffixes with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type23")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.description)"); CompiledName("description")>]
            member __.description with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type MimeTypeArray with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length32")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item20")>]
            member __.item(index : float) : Plugin = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item23")>]
            member __.Item with get(i : int) : Plugin = failwith "never" and set (i : int) (v : Plugin) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.namedItem({args}))"); CompiledName("namedItem4")>]
            member __.namedItem(_type : string) : Plugin = failwith "never"




    type MouseEvent with 

            [<FunScript.JSEmitInline("({0}.toElement)"); CompiledName("toElement1")>]
            member __.toElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.layerY)"); CompiledName("layerY")>]
            member __.layerY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fromElement)"); CompiledName("fromElement1")>]
            member __.fromElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.which)"); CompiledName("which1")>]
            member __.which with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pageX)"); CompiledName("pageX")>]
            member __.pageX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetY)"); CompiledName("offsetY2")>]
            member __.offsetY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x3")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y3")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.metaKey)"); CompiledName("metaKey1")>]
            member __.metaKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.altKey)"); CompiledName("altKey2")>]
            member __.altKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ctrlKey)"); CompiledName("ctrlKey2")>]
            member __.ctrlKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetX)"); CompiledName("offsetX2")>]
            member __.offsetX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenX)"); CompiledName("screenX3")>]
            member __.screenX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientY)"); CompiledName("clientY2")>]
            member __.clientY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shiftKey)"); CompiledName("shiftKey2")>]
            member __.shiftKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.layerX)"); CompiledName("layerX")>]
            member __.layerX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenY)"); CompiledName("screenY3")>]
            member __.screenY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.relatedTarget)"); CompiledName("relatedTarget1")>]
            member __.relatedTarget with get() : EventTarget = failwith "never" and set (v : EventTarget) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.button)"); CompiledName("button1")>]
            member __.button with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pageY)"); CompiledName("pageY")>]
            member __.pageY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.buttons)"); CompiledName("buttons")>]
            member __.buttons with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientX)"); CompiledName("clientX2")>]
            member __.clientX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initMouseEvent({args}))"); CompiledName("initMouseEvent")>]
            member __.initMouseEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, screenXArg : float, screenYArg : float, clientXArg : float, clientYArg : float, ctrlKeyArg : bool, altKeyArg : bool, shiftKeyArg : bool, metaKeyArg : bool, buttonArg : float, relatedTargetArg : EventTarget) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getModifierState({args}))"); CompiledName("getModifierState1")>]
            member __.getModifierState(keyArg : string) : bool = failwith "never"




    type MouseEventInit with 

            [<FunScript.JSEmitInline("({0}.bubbles)"); CompiledName("bubbles1")>]
            member __.bubbles with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cancelable)"); CompiledName("cancelable1")>]
            member __.cancelable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.view)"); CompiledName("view")>]
            member __.view with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.detail)"); CompiledName("detail1")>]
            member __.detail with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenX)"); CompiledName("screenX4")>]
            member __.screenX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenY)"); CompiledName("screenY4")>]
            member __.screenY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientX)"); CompiledName("clientX3")>]
            member __.clientX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clientY)"); CompiledName("clientY3")>]
            member __.clientY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ctrlKey)"); CompiledName("ctrlKey3")>]
            member __.ctrlKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.shiftKey)"); CompiledName("shiftKey3")>]
            member __.shiftKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.altKey)"); CompiledName("altKey3")>]
            member __.altKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.metaKey)"); CompiledName("metaKey2")>]
            member __.metaKey with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.button)"); CompiledName("button2")>]
            member __.button with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.buttons)"); CompiledName("buttons1")>]
            member __.buttons with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.relatedTarget)"); CompiledName("relatedTarget2")>]
            member __.relatedTarget with get() : EventTarget = failwith "never" and set (v : EventTarget) : unit = failwith "never"




    type MouseWheelEvent with 

            [<FunScript.JSEmitInline("({0}.wheelDelta)"); CompiledName("wheelDelta1")>]
            member __.wheelDelta with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initMouseWheelEvent({args}))"); CompiledName("initMouseWheelEvent")>]
            member __.initMouseWheelEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, screenXArg : float, screenYArg : float, clientXArg : float, clientYArg : float, buttonArg : float, relatedTargetArg : EventTarget, modifiersListArg : string, wheelDeltaArg : float) : unit = failwith "never"




    type MsZoomToOptions with 

            [<FunScript.JSEmitInline("({0}.contentX)"); CompiledName("contentX")>]
            member __.contentX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentY)"); CompiledName("contentY")>]
            member __.contentY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.viewportX)"); CompiledName("viewportX")>]
            member __.viewportX with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.viewportY)"); CompiledName("viewportY")>]
            member __.viewportY with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scaleFactor)"); CompiledName("scaleFactor")>]
            member __.scaleFactor with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animate)"); CompiledName("animate")>]
            member __.animate with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type MutationCallback with 

            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke34")>]
            member __.Invoke(mutations : array<MutationRecord>, observer : MutationObserver) : unit = failwith "never"




    type MutationEvent with 

            [<FunScript.JSEmitInline("({0}.newValue)"); CompiledName("newValue")>]
            member __.newValue with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attrChange)"); CompiledName("attrChange")>]
            member __.attrChange with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attrName)"); CompiledName("attrName")>]
            member __.attrName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.prevValue)"); CompiledName("prevValue")>]
            member __.prevValue with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.relatedNode)"); CompiledName("relatedNode")>]
            member __.relatedNode with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initMutationEvent({args}))"); CompiledName("initMutationEvent")>]
            member __.initMutationEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, relatedNodeArg : Node, prevValueArg : string, newValueArg : string, attrNameArg : string, attrChangeArg : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MODIFICATION)"); CompiledName("MODIFICATION1")>]
            member __.MODIFICATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.REMOVAL)"); CompiledName("REMOVAL1")>]
            member __.REMOVAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ADDITION)"); CompiledName("ADDITION1")>]
            member __.ADDITION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type MutationObserver with 

            [<FunScript.JSEmitInline("({0}.observe({args}))"); CompiledName("observe")>]
            member __.observe(target : Node, options : MutationObserverInit) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.takeRecords())"); CompiledName("takeRecords")>]
            member __.takeRecords() : array<MutationRecord> = failwith "never"
            [<FunScript.JSEmitInline("({0}.disconnect())"); CompiledName("disconnect")>]
            member __.disconnect() : unit = failwith "never"




    type MutationObserverInit with 

            [<FunScript.JSEmitInline("({0}.childList)"); CompiledName("childList")>]
            member __.childList with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attributes)"); CompiledName("attributes")>]
            member __.attributes with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.characterData)"); CompiledName("characterData")>]
            member __.characterData with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subtree)"); CompiledName("subtree")>]
            member __.subtree with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attributeOldValue)"); CompiledName("attributeOldValue")>]
            member __.attributeOldValue with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.characterDataOldValue)"); CompiledName("characterDataOldValue")>]
            member __.characterDataOldValue with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attributeFilter)"); CompiledName("attributeFilter")>]
            member __.attributeFilter with get() : array<string> = failwith "never" and set (v : array<string>) : unit = failwith "never"




    type MutationRecord with 

            [<FunScript.JSEmitInline("({0}.oldValue)"); CompiledName("oldValue")>]
            member __.oldValue with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousSibling)"); CompiledName("previousSibling")>]
            member __.previousSibling with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addedNodes)"); CompiledName("addedNodes")>]
            member __.addedNodes with get() : NodeList = failwith "never" and set (v : NodeList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attributeName)"); CompiledName("attributeName")>]
            member __.attributeName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removedNodes)"); CompiledName("removedNodes")>]
            member __.removedNodes with get() : NodeList = failwith "never" and set (v : NodeList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target9")>]
            member __.target with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nextSibling)"); CompiledName("nextSibling")>]
            member __.nextSibling with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attributeNamespace)"); CompiledName("attributeNamespace")>]
            member __.attributeNamespace with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type24")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type NamedNodeMap with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length33")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeNamedItemNS({args}))"); CompiledName("removeNamedItemNS")>]
            member __.removeNamedItemNS(namespaceURI : string, localName : string) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item21")>]
            member __.item(index : float) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item24")>]
            member __.Item with get(i : int) : Attr = failwith "never" and set (i : int) (v : Attr) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeNamedItem({args}))"); CompiledName("removeNamedItem")>]
            member __.removeNamedItem(name : string) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.getNamedItem({args}))"); CompiledName("getNamedItem")>]
            member __.getNamedItem(name : string) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.setNamedItem({args}))"); CompiledName("setNamedItem")>]
            member __.setNamedItem(arg : Attr) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.getNamedItemNS({args}))"); CompiledName("getNamedItemNS")>]
            member __.getNamedItemNS(namespaceURI : string, localName : string) : Attr = failwith "never"
            [<FunScript.JSEmitInline("({0}.setNamedItemNS({args}))"); CompiledName("setNamedItemNS")>]
            member __.setNamedItemNS(arg : Attr) : Attr = failwith "never"




    type NavigationCompletedEvent with 

            [<FunScript.JSEmitInline("({0}.webErrorStatus)"); CompiledName("webErrorStatus")>]
            member __.webErrorStatus with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isSuccess)"); CompiledName("isSuccess")>]
            member __.isSuccess with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type NavigationEvent with 

            [<FunScript.JSEmitInline("({0}.uri)"); CompiledName("uri")>]
            member __.uri with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type Navigator with 

            [<FunScript.JSEmitInline("({0}.msMaxTouchPoints)"); CompiledName("msMaxTouchPoints")>]
            member __.msMaxTouchPoints with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msPointerEnabled)"); CompiledName("msPointerEnabled")>]
            member __.msPointerEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msManipulationViewsEnabled)"); CompiledName("msManipulationViewsEnabled")>]
            member __.msManipulationViewsEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointerEnabled)"); CompiledName("pointerEnabled")>]
            member __.pointerEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maxTouchPoints)"); CompiledName("maxTouchPoints")>]
            member __.maxTouchPoints with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msLaunchUri({args}))"); CompiledName("msLaunchUri")>]
            member __.msLaunchUri(uri : string, ?successCallback : MSLaunchUriCallbackDelegate, ?noHandlerCallback : MSLaunchUriCallbackDelegate) : unit = failwith "never"




    type NavigatorGeolocation with 

            [<FunScript.JSEmitInline("({0}.geolocation)"); CompiledName("geolocation")>]
            member __.geolocation with get() : Geolocation = failwith "never" and set (v : Geolocation) : unit = failwith "never"




    type NavigatorID with 

            [<FunScript.JSEmitInline("({0}.appVersion)"); CompiledName("appVersion")>]
            member __.appVersion with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appName)"); CompiledName("appName")>]
            member __.appName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.userAgent)"); CompiledName("userAgent1")>]
            member __.userAgent with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.platform)"); CompiledName("platform")>]
            member __.platform with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.product)"); CompiledName("product")>]
            member __.product with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vendor)"); CompiledName("vendor")>]
            member __.vendor with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type NavigatorOnLine with 

            [<FunScript.JSEmitInline("({0}.onLine)"); CompiledName("onLine")>]
            member __.onLine with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type Node with 

            [<FunScript.JSEmitInline("({0}.nodeType)"); CompiledName("nodeType")>]
            member __.nodeType with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousSibling)"); CompiledName("previousSibling1")>]
            member __.previousSibling with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.localName)"); CompiledName("localName")>]
            member __.localName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.namespaceURI)"); CompiledName("namespaceURI1")>]
            member __.namespaceURI with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.textContent)"); CompiledName("textContent")>]
            member __.textContent with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentNode)"); CompiledName("parentNode")>]
            member __.parentNode with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nextSibling)"); CompiledName("nextSibling1")>]
            member __.nextSibling with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nodeValue)"); CompiledName("nodeValue")>]
            member __.nodeValue with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastChild)"); CompiledName("lastChild")>]
            member __.lastChild with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.childNodes)"); CompiledName("childNodes")>]
            member __.childNodes with get() : NodeList = failwith "never" and set (v : NodeList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nodeName)"); CompiledName("nodeName")>]
            member __.nodeName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ownerDocument)"); CompiledName("ownerDocument")>]
            member __.ownerDocument with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attributes)"); CompiledName("attributes1")>]
            member __.attributes with get() : NamedNodeMap = failwith "never" and set (v : NamedNodeMap) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.firstChild)"); CompiledName("firstChild")>]
            member __.firstChild with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.prefix)"); CompiledName("prefix1")>]
            member __.prefix with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeChild({args}))"); CompiledName("removeChild")>]
            member __.removeChild(oldChild : Node) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendChild({args}))"); CompiledName("appendChild")>]
            member __.appendChild(newChild : Node) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.isSupported({args}))"); CompiledName("isSupported")>]
            member __.isSupported(feature : string, version : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.isEqualNode({args}))"); CompiledName("isEqualNode")>]
            member __.isEqualNode(arg : Node) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.lookupPrefix({args}))"); CompiledName("lookupPrefix")>]
            member __.lookupPrefix(namespaceURI : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.isDefaultNamespace({args}))"); CompiledName("isDefaultNamespace")>]
            member __.isDefaultNamespace(namespaceURI : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.compareDocumentPosition({args}))"); CompiledName("compareDocumentPosition")>]
            member __.compareDocumentPosition(other : Node) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.normalize())"); CompiledName("normalize")>]
            member __.normalize() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isSameNode({args}))"); CompiledName("isSameNode")>]
            member __.isSameNode(other : Node) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasAttributes())"); CompiledName("hasAttributes")>]
            member __.hasAttributes() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.lookupNamespaceURI({args}))"); CompiledName("lookupNamespaceURI")>]
            member __.lookupNamespaceURI(prefix : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.cloneNode({args}))"); CompiledName("cloneNode")>]
            member __.cloneNode(?deep : bool) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasChildNodes())"); CompiledName("hasChildNodes")>]
            member __.hasChildNodes() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceChild({args}))"); CompiledName("replaceChild")>]
            member __.replaceChild(newChild : Node, oldChild : Node) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertBefore({args}))"); CompiledName("insertBefore")>]
            member __.insertBefore(newChild : Node, ?refChild : Node) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.ENTITY_REFERENCE_NODE)"); CompiledName("ENTITY_REFERENCE_NODE1")>]
            member __.ENTITY_REFERENCE_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ATTRIBUTE_NODE)"); CompiledName("ATTRIBUTE_NODE1")>]
            member __.ATTRIBUTE_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_FRAGMENT_NODE)"); CompiledName("DOCUMENT_FRAGMENT_NODE1")>]
            member __.DOCUMENT_FRAGMENT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXT_NODE)"); CompiledName("TEXT_NODE1")>]
            member __.TEXT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ELEMENT_NODE)"); CompiledName("ELEMENT_NODE1")>]
            member __.ELEMENT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMMENT_NODE)"); CompiledName("COMMENT_NODE1")>]
            member __.COMMENT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_DISCONNECTED)"); CompiledName("DOCUMENT_POSITION_DISCONNECTED1")>]
            member __.DOCUMENT_POSITION_DISCONNECTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_CONTAINED_BY)"); CompiledName("DOCUMENT_POSITION_CONTAINED_BY1")>]
            member __.DOCUMENT_POSITION_CONTAINED_BY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_CONTAINS)"); CompiledName("DOCUMENT_POSITION_CONTAINS1")>]
            member __.DOCUMENT_POSITION_CONTAINS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_TYPE_NODE)"); CompiledName("DOCUMENT_TYPE_NODE1")>]
            member __.DOCUMENT_TYPE_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC)"); CompiledName("DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC1")>]
            member __.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_NODE)"); CompiledName("DOCUMENT_NODE1")>]
            member __.DOCUMENT_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ENTITY_NODE)"); CompiledName("ENTITY_NODE1")>]
            member __.ENTITY_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PROCESSING_INSTRUCTION_NODE)"); CompiledName("PROCESSING_INSTRUCTION_NODE1")>]
            member __.PROCESSING_INSTRUCTION_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CDATA_SECTION_NODE)"); CompiledName("CDATA_SECTION_NODE1")>]
            member __.CDATA_SECTION_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NOTATION_NODE)"); CompiledName("NOTATION_NODE1")>]
            member __.NOTATION_NODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_FOLLOWING)"); CompiledName("DOCUMENT_POSITION_FOLLOWING1")>]
            member __.DOCUMENT_POSITION_FOLLOWING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOCUMENT_POSITION_PRECEDING)"); CompiledName("DOCUMENT_POSITION_PRECEDING1")>]
            member __.DOCUMENT_POSITION_PRECEDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type NodeFilter with 

            [<FunScript.JSEmitInline("({0}.acceptNode({args}))"); CompiledName("acceptNode")>]
            member __.acceptNode(n : Node) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_ENTITY_REFERENCE)"); CompiledName("SHOW_ENTITY_REFERENCE")>]
            member __.SHOW_ENTITY_REFERENCE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_NOTATION)"); CompiledName("SHOW_NOTATION")>]
            member __.SHOW_NOTATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_ENTITY)"); CompiledName("SHOW_ENTITY")>]
            member __.SHOW_ENTITY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_DOCUMENT)"); CompiledName("SHOW_DOCUMENT")>]
            member __.SHOW_DOCUMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_PROCESSING_INSTRUCTION)"); CompiledName("SHOW_PROCESSING_INSTRUCTION")>]
            member __.SHOW_PROCESSING_INSTRUCTION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FILTER_REJECT)"); CompiledName("FILTER_REJECT")>]
            member __.FILTER_REJECT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_CDATA_SECTION)"); CompiledName("SHOW_CDATA_SECTION")>]
            member __.SHOW_CDATA_SECTION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FILTER_ACCEPT)"); CompiledName("FILTER_ACCEPT")>]
            member __.FILTER_ACCEPT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_ALL)"); CompiledName("SHOW_ALL")>]
            member __.SHOW_ALL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_DOCUMENT_TYPE)"); CompiledName("SHOW_DOCUMENT_TYPE")>]
            member __.SHOW_DOCUMENT_TYPE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_TEXT)"); CompiledName("SHOW_TEXT")>]
            member __.SHOW_TEXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_ELEMENT)"); CompiledName("SHOW_ELEMENT")>]
            member __.SHOW_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_COMMENT)"); CompiledName("SHOW_COMMENT")>]
            member __.SHOW_COMMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FILTER_SKIP)"); CompiledName("FILTER_SKIP")>]
            member __.FILTER_SKIP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_ATTRIBUTE)"); CompiledName("SHOW_ATTRIBUTE")>]
            member __.SHOW_ATTRIBUTE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOW_DOCUMENT_FRAGMENT)"); CompiledName("SHOW_DOCUMENT_FRAGMENT")>]
            member __.SHOW_DOCUMENT_FRAGMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type NodeIterator with 

            [<FunScript.JSEmitInline("({0}.whatToShow)"); CompiledName("whatToShow")>]
            member __.whatToShow with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filter)"); CompiledName("filter3")>]
            member __.filter with get() : NodeFilter = failwith "never" and set (v : NodeFilter) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.root)"); CompiledName("root")>]
            member __.root with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.expandEntityReferences)"); CompiledName("expandEntityReferences")>]
            member __.expandEntityReferences with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nextNode())"); CompiledName("nextNode")>]
            member __.nextNode() : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.detach())"); CompiledName("detach")>]
            member __.detach() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousNode())"); CompiledName("previousNode")>]
            member __.previousNode() : Node = failwith "never"




    type NodeList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length34")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item22")>]
            member __.item(index : float) : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item25")>]
            member __.Item with get(i : int) : Node = failwith "never" and set (i : int) (v : Node) : unit = failwith "never"




    type NodeListOf<'TNode when 'TNode :> Node> with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length35")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item23")>]
            member __.item(index : float) : 'TNode = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item26")>]
            member __.Item with get(i : int) : 'TNode = failwith "never" and set (i : int) (v : 'TNode) : unit = failwith "never"




    type NodeSelector with 

            [<FunScript.JSEmitInline("({0}.querySelectorAll({args}))"); CompiledName("querySelectorAll")>]
            member __.querySelectorAll(selectors : string) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.querySelector({args}))"); CompiledName("querySelector")>]
            member __.querySelector(selectors : string) : Element = failwith "never"




    type Number with 

            [<FunScript.JSEmitInline("({0}.toString({args}))"); CompiledName("toString12")>]
            member __.toString(?radix : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toFixed({args}))"); CompiledName("toFixed")>]
            member __.toFixed(?fractionDigits : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toExponential({args}))"); CompiledName("toExponential")>]
            member __.toExponential(?fractionDigits : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toPrecision({args}))"); CompiledName("toPrecision")>]
            member __.toPrecision(?precision : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleString({args}))"); CompiledName("toLocaleString4")>]
            member __.toLocaleString(?locales : array<string>, ?options : NumberFormatOptions) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleString({args}))"); CompiledName("toLocaleString5")>]
            member __.toLocaleStringOverload2(?locale : string, ?options : NumberFormatOptions) : string = failwith "never"




    type NumberFormat with 

            [<FunScript.JSEmitInline("({0}.format({args}))"); CompiledName("format1")>]
            member __.format(value : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.resolvedOptions())"); CompiledName("resolvedOptions2")>]
            member __.resolvedOptions() : ResolvedNumberFormatOptions = failwith "never"




    type NumberFormatOptions with 

            [<FunScript.JSEmitInline("({0}.localeMatcher)"); CompiledName("localeMatcher2")>]
            member __.localeMatcher with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.style)"); CompiledName("style5")>]
            member __.style with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currency)"); CompiledName("currency")>]
            member __.currency with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currencyDisplay)"); CompiledName("currencyDisplay")>]
            member __.currencyDisplay with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.useGrouping)"); CompiledName("useGrouping")>]
            member __.useGrouping with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type OES_standard_derivatives with 

            [<FunScript.JSEmitInline("({0}.FRAGMENT_SHADER_DERIVATIVE_HINT_OES)"); CompiledName("FRAGMENT_SHADER_DERIVATIVE_HINT_OES1")>]
            member __.FRAGMENT_SHADER_DERIVATIVE_HINT_OES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type Object with 

            [<FunScript.JSEmitInline("({0}.constructor)"); CompiledName("_constructor")>]
            member __._constructor with get() : Function = failwith "never" and set (v : Function) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString13")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleString())"); CompiledName("toLocaleString6")>]
            member __.toLocaleString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.valueOf())"); CompiledName("valueOf1")>]
            member __.valueOf() : Object = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasOwnProperty({args}))"); CompiledName("hasOwnProperty")>]
            member __.hasOwnProperty(v : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.isPrototypeOf({args}))"); CompiledName("isPrototypeOf")>]
            member __.isPrototypeOf(v : Object) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.propertyIsEnumerable({args}))"); CompiledName("propertyIsEnumerable")>]
            member __.propertyIsEnumerable(v : string) : bool = failwith "never"




    type ObjectURLOptions with 

            [<FunScript.JSEmitInline("({0}.oneTimeOnly)"); CompiledName("oneTimeOnly")>]
            member __.oneTimeOnly with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type PageTransitionEvent with 

            [<FunScript.JSEmitInline("({0}.persisted)"); CompiledName("persisted")>]
            member __.persisted with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type PerfWidgetExternal with 

            [<FunScript.JSEmitInline("({0}.maxCpuSpeed)"); CompiledName("maxCpuSpeed")>]
            member __.maxCpuSpeed with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.independentRenderingEnabled)"); CompiledName("independentRenderingEnabled")>]
            member __.independentRenderingEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.irDisablingContentString)"); CompiledName("irDisablingContentString")>]
            member __.irDisablingContentString with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.irStatusAvailable)"); CompiledName("irStatusAvailable")>]
            member __.irStatusAvailable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.performanceCounter)"); CompiledName("performanceCounter")>]
            member __.performanceCounter with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.averagePaintTime)"); CompiledName("averagePaintTime")>]
            member __.averagePaintTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.activeNetworkRequestCount)"); CompiledName("activeNetworkRequestCount")>]
            member __.activeNetworkRequestCount with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.paintRequestsPerSecond)"); CompiledName("paintRequestsPerSecond")>]
            member __.paintRequestsPerSecond with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.extraInformationEnabled)"); CompiledName("extraInformationEnabled")>]
            member __.extraInformationEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.performanceCounterFrequency)"); CompiledName("performanceCounterFrequency")>]
            member __.performanceCounterFrequency with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.averageFrameTime)"); CompiledName("averageFrameTime")>]
            member __.averageFrameTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.repositionWindow({args}))"); CompiledName("repositionWindow")>]
            member __.repositionWindow(x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getRecentMemoryUsage({args}))"); CompiledName("getRecentMemoryUsage")>]
            member __.getRecentMemoryUsage(last : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getMemoryUsage())"); CompiledName("getMemoryUsage")>]
            member __.getMemoryUsage() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.resizeWindow({args}))"); CompiledName("resizeWindow")>]
            member __.resizeWindow(width : float, height : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getProcessCpuUsage())"); CompiledName("getProcessCpuUsage")>]
            member __.getProcessCpuUsage() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeEventListener({args}))"); CompiledName("removeEventListener2")>]
            member __.removeEventListener(eventType : string, callback : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getRecentCpuUsage({args}))"); CompiledName("getRecentCpuUsage")>]
            member __.getRecentCpuUsage(last : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1310")>]
            member __.addEventListener(eventType : string, callback : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getRecentFrames({args}))"); CompiledName("getRecentFrames")>]
            member __.getRecentFrames(last : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getRecentPaintRequests({args}))"); CompiledName("getRecentPaintRequests")>]
            member __.getRecentPaintRequests(last : float) : obj = failwith "never"




    type Performance with 

            [<FunScript.JSEmitInline("({0}.navigation)"); CompiledName("navigation")>]
            member __.navigation with get() : PerformanceNavigation = failwith "never" and set (v : PerformanceNavigation) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.timing)"); CompiledName("timing")>]
            member __.timing with get() : PerformanceTiming = failwith "never" and set (v : PerformanceTiming) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getEntriesByType({args}))"); CompiledName("getEntriesByType")>]
            member __.getEntriesByType(entryType : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.toJSON())"); CompiledName("toJSON1")>]
            member __.toJSON() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getMeasures({args}))"); CompiledName("getMeasures")>]
            member __.getMeasures(?measureName : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearMarks({args}))"); CompiledName("clearMarks")>]
            member __.clearMarks(?markName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getMarks({args}))"); CompiledName("getMarks")>]
            member __.getMarks(?markName : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearResourceTimings())"); CompiledName("clearResourceTimings")>]
            member __.clearResourceTimings() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mark({args}))"); CompiledName("mark")>]
            member __.mark(markName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.measure({args}))"); CompiledName("_measure")>]
            member __._measure(measureName : string, ?startMarkName : string, ?endMarkName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getEntriesByName({args}))"); CompiledName("getEntriesByName")>]
            member __.getEntriesByName(name : string, ?entryType : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getEntries())"); CompiledName("getEntries")>]
            member __.getEntries() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearMeasures({args}))"); CompiledName("clearMeasures")>]
            member __.clearMeasures(?measureName : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setResourceTimingBufferSize({args}))"); CompiledName("setResourceTimingBufferSize")>]
            member __.setResourceTimingBufferSize(maxSize : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.now())"); CompiledName("now1")>]
            member __.now() : float = failwith "never"




    type PerformanceEntry with 

            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name30")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.startTime)"); CompiledName("startTime")>]
            member __.startTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.duration)"); CompiledName("duration2")>]
            member __.duration with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.entryType)"); CompiledName("entryType")>]
            member __.entryType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type PerformanceNavigation with 

            [<FunScript.JSEmitInline("({0}.redirectCount)"); CompiledName("redirectCount")>]
            member __.redirectCount with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type25")>]
            member __._type with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toJSON())"); CompiledName("toJSON2")>]
            member __.toJSON() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_RELOAD)"); CompiledName("TYPE_RELOAD1")>]
            member __.TYPE_RELOAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_RESERVED)"); CompiledName("TYPE_RESERVED1")>]
            member __.TYPE_RESERVED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_BACK_FORWARD)"); CompiledName("TYPE_BACK_FORWARD1")>]
            member __.TYPE_BACK_FORWARD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TYPE_NAVIGATE)"); CompiledName("TYPE_NAVIGATE1")>]
            member __.TYPE_NAVIGATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type PerformanceNavigationTiming with 

            [<FunScript.JSEmitInline("({0}.redirectStart)"); CompiledName("redirectStart")>]
            member __.redirectStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domainLookupEnd)"); CompiledName("domainLookupEnd")>]
            member __.domainLookupEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseStart)"); CompiledName("responseStart")>]
            member __.responseStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domComplete)"); CompiledName("domComplete")>]
            member __.domComplete with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domainLookupStart)"); CompiledName("domainLookupStart")>]
            member __.domainLookupStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loadEventStart)"); CompiledName("loadEventStart")>]
            member __.loadEventStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.unloadEventEnd)"); CompiledName("unloadEventEnd")>]
            member __.unloadEventEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fetchStart)"); CompiledName("fetchStart")>]
            member __.fetchStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.requestStart)"); CompiledName("requestStart")>]
            member __.requestStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domInteractive)"); CompiledName("domInteractive")>]
            member __.domInteractive with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.navigationStart)"); CompiledName("navigationStart")>]
            member __.navigationStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.connectEnd)"); CompiledName("connectEnd")>]
            member __.connectEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loadEventEnd)"); CompiledName("loadEventEnd")>]
            member __.loadEventEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.connectStart)"); CompiledName("connectStart")>]
            member __.connectStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseEnd)"); CompiledName("responseEnd")>]
            member __.responseEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domLoading)"); CompiledName("domLoading")>]
            member __.domLoading with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.redirectEnd)"); CompiledName("redirectEnd")>]
            member __.redirectEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.redirectCount)"); CompiledName("redirectCount1")>]
            member __.redirectCount with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.unloadEventStart)"); CompiledName("unloadEventStart")>]
            member __.unloadEventStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domContentLoadedEventStart)"); CompiledName("domContentLoadedEventStart")>]
            member __.domContentLoadedEventStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domContentLoadedEventEnd)"); CompiledName("domContentLoadedEventEnd")>]
            member __.domContentLoadedEventEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type26")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type PerformanceResourceTiming with 

            [<FunScript.JSEmitInline("({0}.redirectStart)"); CompiledName("redirectStart1")>]
            member __.redirectStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.redirectEnd)"); CompiledName("redirectEnd1")>]
            member __.redirectEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domainLookupEnd)"); CompiledName("domainLookupEnd1")>]
            member __.domainLookupEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseStart)"); CompiledName("responseStart1")>]
            member __.responseStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domainLookupStart)"); CompiledName("domainLookupStart1")>]
            member __.domainLookupStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fetchStart)"); CompiledName("fetchStart1")>]
            member __.fetchStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.requestStart)"); CompiledName("requestStart1")>]
            member __.requestStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.connectEnd)"); CompiledName("connectEnd1")>]
            member __.connectEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.connectStart)"); CompiledName("connectStart1")>]
            member __.connectStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initiatorType)"); CompiledName("initiatorType")>]
            member __.initiatorType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseEnd)"); CompiledName("responseEnd1")>]
            member __.responseEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type PerformanceTiming with 

            [<FunScript.JSEmitInline("({0}.redirectStart)"); CompiledName("redirectStart2")>]
            member __.redirectStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domainLookupEnd)"); CompiledName("domainLookupEnd2")>]
            member __.domainLookupEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseStart)"); CompiledName("responseStart2")>]
            member __.responseStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domComplete)"); CompiledName("domComplete1")>]
            member __.domComplete with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domainLookupStart)"); CompiledName("domainLookupStart2")>]
            member __.domainLookupStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loadEventStart)"); CompiledName("loadEventStart1")>]
            member __.loadEventStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msFirstPaint)"); CompiledName("msFirstPaint")>]
            member __.msFirstPaint with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.unloadEventEnd)"); CompiledName("unloadEventEnd1")>]
            member __.unloadEventEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fetchStart)"); CompiledName("fetchStart2")>]
            member __.fetchStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.requestStart)"); CompiledName("requestStart2")>]
            member __.requestStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domInteractive)"); CompiledName("domInteractive1")>]
            member __.domInteractive with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.navigationStart)"); CompiledName("navigationStart1")>]
            member __.navigationStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.connectEnd)"); CompiledName("connectEnd2")>]
            member __.connectEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.loadEventEnd)"); CompiledName("loadEventEnd1")>]
            member __.loadEventEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.connectStart)"); CompiledName("connectStart2")>]
            member __.connectStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseEnd)"); CompiledName("responseEnd2")>]
            member __.responseEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domLoading)"); CompiledName("domLoading1")>]
            member __.domLoading with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.redirectEnd)"); CompiledName("redirectEnd2")>]
            member __.redirectEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.unloadEventStart)"); CompiledName("unloadEventStart1")>]
            member __.unloadEventStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domContentLoadedEventStart)"); CompiledName("domContentLoadedEventStart1")>]
            member __.domContentLoadedEventStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.domContentLoadedEventEnd)"); CompiledName("domContentLoadedEventEnd1")>]
            member __.domContentLoadedEventEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toJSON())"); CompiledName("toJSON3")>]
            member __.toJSON() : obj = failwith "never"




    type Plugin with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length36")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filename)"); CompiledName("filename1")>]
            member __.filename with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.version)"); CompiledName("version3")>]
            member __.version with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name31")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.description)"); CompiledName("description1")>]
            member __.description with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item24")>]
            member __.item(index : float) : MimeType = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item27")>]
            member __.Item with get(i : int) : MimeType = failwith "never" and set (i : int) (v : MimeType) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.namedItem({args}))"); CompiledName("namedItem5")>]
            member __.namedItem(_type : string) : MimeType = failwith "never"




    type PluginArray with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length37")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.refresh({args}))"); CompiledName("refresh3")>]
            member __.refresh(?reload : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item25")>]
            member __.item(index : float) : Plugin = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item28")>]
            member __.Item with get(i : int) : Plugin = failwith "never" and set (i : int) (v : Plugin) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.namedItem({args}))"); CompiledName("namedItem6")>]
            member __.namedItem(name : string) : Plugin = failwith "never"




    type PointerEvent with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width21")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotation)"); CompiledName("rotation2")>]
            member __.rotation with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pressure)"); CompiledName("pressure1")>]
            member __.pressure with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointerType)"); CompiledName("pointerType1")>]
            member __.pointerType with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isPrimary)"); CompiledName("isPrimary1")>]
            member __.isPrimary with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tiltY)"); CompiledName("tiltY1")>]
            member __.tiltY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height18")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.intermediatePoints)"); CompiledName("intermediatePoints1")>]
            member __.intermediatePoints with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentPoint)"); CompiledName("currentPoint1")>]
            member __.currentPoint with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tiltX)"); CompiledName("tiltX1")>]
            member __.tiltX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hwTimestamp)"); CompiledName("hwTimestamp2")>]
            member __.hwTimestamp with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointerId)"); CompiledName("pointerId1")>]
            member __.pointerId with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initPointerEvent({args}))"); CompiledName("initPointerEvent1")>]
            member __.initPointerEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, screenXArg : float, screenYArg : float, clientXArg : float, clientYArg : float, ctrlKeyArg : bool, altKeyArg : bool, shiftKeyArg : bool, metaKeyArg : bool, buttonArg : float, relatedTargetArg : EventTarget, offsetXArg : float, offsetYArg : float, widthArg : float, heightArg : float, pressure : float, rotation : float, tiltX : float, tiltY : float, pointerIdArg : float, pointerType : obj, hwTimestampArg : float, isPrimary : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCurrentPoint({args}))"); CompiledName("getCurrentPoint1")>]
            member __.getCurrentPoint(element : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getIntermediatePoints({args}))"); CompiledName("getIntermediatePoints1")>]
            member __.getIntermediatePoints(element : Element) : unit = failwith "never"




    type PointerEventInit with 

            [<FunScript.JSEmitInline("({0}.pointerId)"); CompiledName("pointerId2")>]
            member __.pointerId with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width22")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height19")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pressure)"); CompiledName("pressure2")>]
            member __.pressure with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tiltX)"); CompiledName("tiltX2")>]
            member __.tiltX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tiltY)"); CompiledName("tiltY2")>]
            member __.tiltY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointerType)"); CompiledName("pointerType2")>]
            member __.pointerType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isPrimary)"); CompiledName("isPrimary2")>]
            member __.isPrimary with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type PopStateEvent with 

            [<FunScript.JSEmitInline("({0}.state)"); CompiledName("state1")>]
            member __.state with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initPopStateEvent({args}))"); CompiledName("initPopStateEvent")>]
            member __.initPopStateEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, stateArg : obj) : unit = failwith "never"




    type Position with 

            [<FunScript.JSEmitInline("({0}.timestamp)"); CompiledName("timestamp")>]
            member __.timestamp with get() : Date = failwith "never" and set (v : Date) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.coords)"); CompiledName("coords2")>]
            member __.coords with get() : Coordinates = failwith "never" and set (v : Coordinates) : unit = failwith "never"




    type PositionCallback with 

            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke35")>]
            member __.Invoke(position : Position) : unit = failwith "never"




    type PositionError with 

            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code7")>]
            member __.code with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.message)"); CompiledName("message5")>]
            member __.message with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString14")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.POSITION_UNAVAILABLE)"); CompiledName("POSITION_UNAVAILABLE1")>]
            member __.POSITION_UNAVAILABLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PERMISSION_DENIED)"); CompiledName("PERMISSION_DENIED1")>]
            member __.PERMISSION_DENIED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TIMEOUT)"); CompiledName("TIMEOUT1")>]
            member __.TIMEOUT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type PositionErrorCallback with 

            [<FunScript.JSEmitInline("({0}({args}))"); CompiledName("Invoke36")>]
            member __.Invoke(error : PositionError) : unit = failwith "never"




    type PositionOptions with 

            [<FunScript.JSEmitInline("({0}.enableHighAccuracy)"); CompiledName("enableHighAccuracy")>]
            member __.enableHighAccuracy with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.timeout)"); CompiledName("timeout")>]
            member __.timeout with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maximumAge)"); CompiledName("maximumAge")>]
            member __.maximumAge with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type ProcessingInstruction with 

            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target10")>]
            member __.target with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data7")>]
            member __.data with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type ProgressEvent with 

            [<FunScript.JSEmitInline("({0}.loaded)"); CompiledName("loaded")>]
            member __.loaded with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lengthComputable)"); CompiledName("lengthComputable")>]
            member __.lengthComputable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.total)"); CompiledName("total")>]
            member __.total with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initProgressEvent({args}))"); CompiledName("initProgressEvent")>]
            member __.initProgressEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, lengthComputableArg : bool, loadedArg : float, totalArg : float) : unit = failwith "never"




    type PropertyDescriptor with 

            [<FunScript.JSEmitInline("({0}.configurable)"); CompiledName("configurable")>]
            member __.configurable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.enumerable)"); CompiledName("enumerable")>]
            member __.enumerable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value12")>]
            member __.value with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.writable)"); CompiledName("writable")>]
            member __.writable with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get())"); CompiledName("get8")>]
            member __.get() : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set16")>]
            member __.set(v : obj) : unit = failwith "never"




    type PropertyDescriptorMap with 

            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item29")>]
            member __.Item with get(i : string) : PropertyDescriptor = failwith "never" and set (i : string) (v : PropertyDescriptor) : unit = failwith "never"




    type RandomSource with 

            [<FunScript.JSEmitInline("({0}.getRandomValues({args}))"); CompiledName("getRandomValues")>]
            member __.getRandomValues(array : ArrayBufferView) : ArrayBufferView = failwith "never"




    type Range with 

            [<FunScript.JSEmitInline("({0}.startOffset)"); CompiledName("startOffset")>]
            member __.startOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.collapsed)"); CompiledName("collapsed")>]
            member __.collapsed with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.endOffset)"); CompiledName("endOffset")>]
            member __.endOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.startContainer)"); CompiledName("startContainer")>]
            member __.startContainer with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.endContainer)"); CompiledName("endContainer")>]
            member __.endContainer with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.commonAncestorContainer)"); CompiledName("commonAncestorContainer")>]
            member __.commonAncestorContainer with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setStart({args}))"); CompiledName("setStart")>]
            member __.setStart(refNode : Node, offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setEndBefore({args}))"); CompiledName("setEndBefore")>]
            member __.setEndBefore(refNode : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setStartBefore({args}))"); CompiledName("setStartBefore")>]
            member __.setStartBefore(refNode : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectNode({args}))"); CompiledName("selectNode")>]
            member __.selectNode(refNode : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.detach())"); CompiledName("detach1")>]
            member __.detach() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getBoundingClientRect())"); CompiledName("getBoundingClientRect1")>]
            member __.getBoundingClientRect() : ClientRect = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString15")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.compareBoundaryPoints({args}))"); CompiledName("compareBoundaryPoints")>]
            member __.compareBoundaryPoints(how : float, sourceRange : Range) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertNode({args}))"); CompiledName("insertNode")>]
            member __.insertNode(newNode : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.collapse({args}))"); CompiledName("collapse")>]
            member __.collapse(toStart : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectNodeContents({args}))"); CompiledName("selectNodeContents")>]
            member __.selectNodeContents(refNode : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cloneContents())"); CompiledName("cloneContents")>]
            member __.cloneContents() : DocumentFragment = failwith "never"
            [<FunScript.JSEmitInline("({0}.setEnd({args}))"); CompiledName("setEnd")>]
            member __.setEnd(refNode : Node, offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cloneRange())"); CompiledName("cloneRange")>]
            member __.cloneRange() : Range = failwith "never"
            [<FunScript.JSEmitInline("({0}.getClientRects())"); CompiledName("getClientRects1")>]
            member __.getClientRects() : ClientRectList = failwith "never"
            [<FunScript.JSEmitInline("({0}.surroundContents({args}))"); CompiledName("surroundContents")>]
            member __.surroundContents(newParent : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteContents())"); CompiledName("deleteContents")>]
            member __.deleteContents() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setStartAfter({args}))"); CompiledName("setStartAfter")>]
            member __.setStartAfter(refNode : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.extractContents())"); CompiledName("extractContents")>]
            member __.extractContents() : DocumentFragment = failwith "never"
            [<FunScript.JSEmitInline("({0}.setEndAfter({args}))"); CompiledName("setEndAfter")>]
            member __.setEndAfter(refNode : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createContextualFragment({args}))"); CompiledName("createContextualFragment")>]
            member __.createContextualFragment(fragment : string) : DocumentFragment = failwith "never"
            [<FunScript.JSEmitInline("({0}.END_TO_END)"); CompiledName("END_TO_END1")>]
            member __.END_TO_END with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.START_TO_START)"); CompiledName("START_TO_START1")>]
            member __.START_TO_START with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.START_TO_END)"); CompiledName("START_TO_END1")>]
            member __.START_TO_END with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.END_TO_START)"); CompiledName("END_TO_START1")>]
            member __.END_TO_START with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type RangeException with 

            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code8")>]
            member __.code with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.message)"); CompiledName("message6")>]
            member __.message with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name32")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString16")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_NODE_TYPE_ERR)"); CompiledName("INVALID_NODE_TYPE_ERR3")>]
            member __.INVALID_NODE_TYPE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BAD_BOUNDARYPOINTS_ERR)"); CompiledName("BAD_BOUNDARYPOINTS_ERR1")>]
            member __.BAD_BOUNDARYPOINTS_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type RegExp with 

            [<FunScript.JSEmitInline("({0}.exec({args}))"); CompiledName("exec")>]
            member __.exec(_string : string) : RegExpExecArray = failwith "never"
            [<FunScript.JSEmitInline("({0}.test({args}))"); CompiledName("test")>]
            member __.test(_string : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.source)"); CompiledName("source4")>]
            member __.source with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.global)"); CompiledName("_global")>]
            member __._global with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ignoreCase)"); CompiledName("ignoreCase")>]
            member __.ignoreCase with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.multiline)"); CompiledName("multiline")>]
            member __.multiline with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastIndex)"); CompiledName("lastIndex")>]
            member __.lastIndex with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.compile())"); CompiledName("compile")>]
            member __.compile() : RegExp = failwith "never"




    type RegExpExecArray with 

            [<FunScript.JSEmitInline("({0}.index)"); CompiledName("index3")>]
            member __.index with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.input)"); CompiledName("input")>]
            member __.input with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type RegExpMatchArray with 

            [<FunScript.JSEmitInline("({0}.index)"); CompiledName("index4")>]
            member __.index with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.input)"); CompiledName("input1")>]
            member __.input with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type ResolvedCollatorOptions with 

            [<FunScript.JSEmitInline("({0}.locale)"); CompiledName("locale2")>]
            member __.locale with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.usage)"); CompiledName("usage1")>]
            member __.usage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sensitivity)"); CompiledName("sensitivity1")>]
            member __.sensitivity with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ignorePunctuation)"); CompiledName("ignorePunctuation1")>]
            member __.ignorePunctuation with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.collation)"); CompiledName("collation")>]
            member __.collation with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.caseFirst)"); CompiledName("caseFirst1")>]
            member __.caseFirst with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.numeric)"); CompiledName("numeric1")>]
            member __.numeric with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type ResolvedDateTimeFormatOptions with 

            [<FunScript.JSEmitInline("({0}.locale)"); CompiledName("locale3")>]
            member __.locale with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.calendar)"); CompiledName("calendar")>]
            member __.calendar with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.numberingSystem)"); CompiledName("numberingSystem")>]
            member __.numberingSystem with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.timeZone)"); CompiledName("timeZone")>]
            member __.timeZone with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hour12)"); CompiledName("hour121")>]
            member __.hour12 with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.weekday)"); CompiledName("weekday1")>]
            member __.weekday with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.era)"); CompiledName("era1")>]
            member __.era with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.year)"); CompiledName("year1")>]
            member __.year with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.month)"); CompiledName("month1")>]
            member __.month with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.day)"); CompiledName("day1")>]
            member __.day with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hour)"); CompiledName("hour1")>]
            member __.hour with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.minute)"); CompiledName("minute1")>]
            member __.minute with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.second)"); CompiledName("second1")>]
            member __.second with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.timeZoneName)"); CompiledName("timeZoneName1")>]
            member __.timeZoneName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type ResolvedNumberFormatOptions with 

            [<FunScript.JSEmitInline("({0}.locale)"); CompiledName("locale4")>]
            member __.locale with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.numberingSystem)"); CompiledName("numberingSystem1")>]
            member __.numberingSystem with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.style)"); CompiledName("style6")>]
            member __.style with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currency)"); CompiledName("currency1")>]
            member __.currency with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currencyDisplay)"); CompiledName("currencyDisplay1")>]
            member __.currencyDisplay with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.minimumintegerDigits)"); CompiledName("minimumintegerDigits")>]
            member __.minimumintegerDigits with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.minimumFractionDigits)"); CompiledName("minimumFractionDigits")>]
            member __.minimumFractionDigits with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maximumFractionDigits)"); CompiledName("maximumFractionDigits")>]
            member __.maximumFractionDigits with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.minimumSignificantDigits)"); CompiledName("minimumSignificantDigits")>]
            member __.minimumSignificantDigits with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maximumSignificantDigits)"); CompiledName("maximumSignificantDigits")>]
            member __.maximumSignificantDigits with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.useGrouping)"); CompiledName("useGrouping1")>]
            member __.useGrouping with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type SVGAElement with 

            [<FunScript.JSEmitInline("({0}.target)"); CompiledName("target11")>]
            member __.target with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"




    type SVGAngle with 

            [<FunScript.JSEmitInline("({0}.valueAsString)"); CompiledName("valueAsString")>]
            member __.valueAsString with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.valueInSpecifiedUnits)"); CompiledName("valueInSpecifiedUnits")>]
            member __.valueInSpecifiedUnits with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value13")>]
            member __.value with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.unitType)"); CompiledName("unitType")>]
            member __.unitType with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.newValueSpecifiedUnits({args}))"); CompiledName("newValueSpecifiedUnits")>]
            member __.newValueSpecifiedUnits(unitType : float, valueInSpecifiedUnits : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.convertToSpecifiedUnits({args}))"); CompiledName("convertToSpecifiedUnits")>]
            member __.convertToSpecifiedUnits(unitType : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_RAD)"); CompiledName("SVG_ANGLETYPE_RAD1")>]
            member __.SVG_ANGLETYPE_RAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_UNKNOWN)"); CompiledName("SVG_ANGLETYPE_UNKNOWN1")>]
            member __.SVG_ANGLETYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_UNSPECIFIED)"); CompiledName("SVG_ANGLETYPE_UNSPECIFIED1")>]
            member __.SVG_ANGLETYPE_UNSPECIFIED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_DEG)"); CompiledName("SVG_ANGLETYPE_DEG1")>]
            member __.SVG_ANGLETYPE_DEG with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ANGLETYPE_GRAD)"); CompiledName("SVG_ANGLETYPE_GRAD1")>]
            member __.SVG_ANGLETYPE_GRAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGAnimatedAngle with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal")>]
            member __.animVal with get() : SVGAngle = failwith "never" and set (v : SVGAngle) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal")>]
            member __.baseVal with get() : SVGAngle = failwith "never" and set (v : SVGAngle) : unit = failwith "never"




    type SVGAnimatedBoolean with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal1")>]
            member __.animVal with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal1")>]
            member __.baseVal with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type SVGAnimatedEnumeration with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal2")>]
            member __.animVal with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal2")>]
            member __.baseVal with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGAnimatedInteger with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal3")>]
            member __.animVal with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal3")>]
            member __.baseVal with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGAnimatedLength with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal4")>]
            member __.animVal with get() : SVGLength = failwith "never" and set (v : SVGLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal4")>]
            member __.baseVal with get() : SVGLength = failwith "never" and set (v : SVGLength) : unit = failwith "never"




    type SVGAnimatedLengthList with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal5")>]
            member __.animVal with get() : SVGLengthList = failwith "never" and set (v : SVGLengthList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal5")>]
            member __.baseVal with get() : SVGLengthList = failwith "never" and set (v : SVGLengthList) : unit = failwith "never"




    type SVGAnimatedNumber with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal6")>]
            member __.animVal with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal6")>]
            member __.baseVal with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGAnimatedNumberList with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal7")>]
            member __.animVal with get() : SVGNumberList = failwith "never" and set (v : SVGNumberList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal7")>]
            member __.baseVal with get() : SVGNumberList = failwith "never" and set (v : SVGNumberList) : unit = failwith "never"




    type SVGAnimatedPathData with 

            [<FunScript.JSEmitInline("({0}.pathSegList)"); CompiledName("pathSegList")>]
            member __.pathSegList with get() : SVGPathSegList = failwith "never" and set (v : SVGPathSegList) : unit = failwith "never"




    type SVGAnimatedPoints with 

            [<FunScript.JSEmitInline("({0}.points)"); CompiledName("points")>]
            member __.points with get() : SVGPointList = failwith "never" and set (v : SVGPointList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animatedPoints)"); CompiledName("animatedPoints")>]
            member __.animatedPoints with get() : SVGPointList = failwith "never" and set (v : SVGPointList) : unit = failwith "never"




    type SVGAnimatedPreserveAspectRatio with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal8")>]
            member __.animVal with get() : SVGPreserveAspectRatio = failwith "never" and set (v : SVGPreserveAspectRatio) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal8")>]
            member __.baseVal with get() : SVGPreserveAspectRatio = failwith "never" and set (v : SVGPreserveAspectRatio) : unit = failwith "never"




    type SVGAnimatedRect with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal9")>]
            member __.animVal with get() : SVGRect = failwith "never" and set (v : SVGRect) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal9")>]
            member __.baseVal with get() : SVGRect = failwith "never" and set (v : SVGRect) : unit = failwith "never"




    type SVGAnimatedString with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal10")>]
            member __.animVal with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal10")>]
            member __.baseVal with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type SVGAnimatedTransformList with 

            [<FunScript.JSEmitInline("({0}.animVal)"); CompiledName("animVal11")>]
            member __.animVal with get() : SVGTransformList = failwith "never" and set (v : SVGTransformList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseVal)"); CompiledName("baseVal11")>]
            member __.baseVal with get() : SVGTransformList = failwith "never" and set (v : SVGTransformList) : unit = failwith "never"




    type SVGCircleElement with 

            [<FunScript.JSEmitInline("({0}.cx)"); CompiledName("cx")>]
            member __.cx with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.r)"); CompiledName("r")>]
            member __.r with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cy)"); CompiledName("cy")>]
            member __.cy with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGClipPathElement with 

            [<FunScript.JSEmitInline("({0}.clipPathUnits)"); CompiledName("clipPathUnits")>]
            member __.clipPathUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"




    type SVGComponentTransferFunctionElement with 

            [<FunScript.JSEmitInline("({0}.tableValues)"); CompiledName("tableValues")>]
            member __.tableValues with get() : SVGAnimatedNumberList = failwith "never" and set (v : SVGAnimatedNumberList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.slope)"); CompiledName("slope")>]
            member __.slope with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type27")>]
            member __._type with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.exponent)"); CompiledName("exponent")>]
            member __.exponent with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.amplitude)"); CompiledName("amplitude")>]
            member __.amplitude with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.intercept)"); CompiledName("intercept")>]
            member __.intercept with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offset)"); CompiledName("offset")>]
            member __.offset with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN1")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_TABLE)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_TABLE1")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_TABLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY1")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_GAMMA1")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE1")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR)"); CompiledName("SVG_FECOMPONENTTRANSFER_TYPE_LINEAR1")>]
            member __.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGElement with 

            [<FunScript.JSEmitInline("({0}.onmouseover)"); CompiledName("onmouseover3")>]
            member __.onmouseover with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.viewportElement)"); CompiledName("viewportElement")>]
            member __.viewportElement with get() : SVGElement = failwith "never" and set (v : SVGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousemove)"); CompiledName("onmousemove3")>]
            member __.onmousemove with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseout)"); CompiledName("onmouseout3")>]
            member __.onmouseout with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondblclick)"); CompiledName("ondblclick3")>]
            member __.ondblclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocusout)"); CompiledName("onfocusout4")>]
            member __.onfocusout with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocusin)"); CompiledName("onfocusin4")>]
            member __.onfocusin with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.xmlbase)"); CompiledName("xmlbase")>]
            member __.xmlbase with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousedown)"); CompiledName("onmousedown3")>]
            member __.onmousedown with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload8")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseup)"); CompiledName("onmouseup3")>]
            member __.onmouseup with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onclick)"); CompiledName("onclick3")>]
            member __.onclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ownerSVGElement)"); CompiledName("ownerSVGElement")>]
            member __.ownerSVGElement with get() : SVGSVGElement = failwith "never" and set (v : SVGSVGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.id)"); CompiledName("id3")>]
            member __.id with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener1311")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener1312")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener1313")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener1314")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener1315")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener1316")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener1317")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener1318")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener1319")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener1320")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener1321")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener1322")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener1323")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener1324")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener1325")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener1326")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener1327")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener1328")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener1329")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener1330")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener1331")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener1332")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener1333")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener1334")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener1335")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener1336")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener1337")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener1338")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener1339")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener1340")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener1341")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener1342")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener1343")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener1344")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener1345")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1346")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener1347")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener1348")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1349")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type SVGElementInstance with 

            [<FunScript.JSEmitInline("({0}.previousSibling)"); CompiledName("previousSibling2")>]
            member __.previousSibling with get() : SVGElementInstance = failwith "never" and set (v : SVGElementInstance) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentNode)"); CompiledName("parentNode1")>]
            member __.parentNode with get() : SVGElementInstance = failwith "never" and set (v : SVGElementInstance) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastChild)"); CompiledName("lastChild1")>]
            member __.lastChild with get() : SVGElementInstance = failwith "never" and set (v : SVGElementInstance) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nextSibling)"); CompiledName("nextSibling2")>]
            member __.nextSibling with get() : SVGElementInstance = failwith "never" and set (v : SVGElementInstance) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.childNodes)"); CompiledName("childNodes1")>]
            member __.childNodes with get() : SVGElementInstanceList = failwith "never" and set (v : SVGElementInstanceList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.correspondingUseElement)"); CompiledName("correspondingUseElement")>]
            member __.correspondingUseElement with get() : SVGUseElement = failwith "never" and set (v : SVGUseElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.correspondingElement)"); CompiledName("correspondingElement")>]
            member __.correspondingElement with get() : SVGElement = failwith "never" and set (v : SVGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.firstChild)"); CompiledName("firstChild1")>]
            member __.firstChild with get() : SVGElementInstance = failwith "never" and set (v : SVGElementInstance) : unit = failwith "never"




    type SVGElementInstanceList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length38")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item26")>]
            member __.item(index : float) : SVGElementInstance = failwith "never"




    type SVGEllipseElement with 

            [<FunScript.JSEmitInline("({0}.ry)"); CompiledName("ry")>]
            member __.ry with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cx)"); CompiledName("cx1")>]
            member __.cx with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rx)"); CompiledName("rx")>]
            member __.rx with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cy)"); CompiledName("cy1")>]
            member __.cy with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGException with 

            [<FunScript.JSEmitInline("({0}.code)"); CompiledName("code9")>]
            member __.code with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.message)"); CompiledName("message7")>]
            member __.message with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name33")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString17")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MATRIX_NOT_INVERTABLE)"); CompiledName("SVG_MATRIX_NOT_INVERTABLE1")>]
            member __.SVG_MATRIX_NOT_INVERTABLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_WRONG_TYPE_ERR)"); CompiledName("SVG_WRONG_TYPE_ERR1")>]
            member __.SVG_WRONG_TYPE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_INVALID_VALUE_ERR)"); CompiledName("SVG_INVALID_VALUE_ERR1")>]
            member __.SVG_INVALID_VALUE_ERR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGExternalResourcesRequired with 

            [<FunScript.JSEmitInline("({0}.externalResourcesRequired)"); CompiledName("externalResourcesRequired")>]
            member __.externalResourcesRequired with get() : SVGAnimatedBoolean = failwith "never" and set (v : SVGAnimatedBoolean) : unit = failwith "never"




    type SVGFEBlendElement with 

            [<FunScript.JSEmitInline("({0}.in2)"); CompiledName("in2")>]
            member __.in2 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mode)"); CompiledName("mode1")>]
            member __.mode with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in1")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_DARKEN)"); CompiledName("SVG_FEBLEND_MODE_DARKEN1")>]
            member __.SVG_FEBLEND_MODE_DARKEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_UNKNOWN)"); CompiledName("SVG_FEBLEND_MODE_UNKNOWN1")>]
            member __.SVG_FEBLEND_MODE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_MULTIPLY)"); CompiledName("SVG_FEBLEND_MODE_MULTIPLY1")>]
            member __.SVG_FEBLEND_MODE_MULTIPLY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_NORMAL)"); CompiledName("SVG_FEBLEND_MODE_NORMAL1")>]
            member __.SVG_FEBLEND_MODE_NORMAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_SCREEN)"); CompiledName("SVG_FEBLEND_MODE_SCREEN1")>]
            member __.SVG_FEBLEND_MODE_SCREEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FEBLEND_MODE_LIGHTEN)"); CompiledName("SVG_FEBLEND_MODE_LIGHTEN1")>]
            member __.SVG_FEBLEND_MODE_LIGHTEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGFEColorMatrixElement with 

            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in11")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type28")>]
            member __._type with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.values)"); CompiledName("values")>]
            member __.values with get() : SVGAnimatedNumberList = failwith "never" and set (v : SVGAnimatedNumberList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_SATURATE)"); CompiledName("SVG_FECOLORMATRIX_TYPE_SATURATE1")>]
            member __.SVG_FECOLORMATRIX_TYPE_SATURATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_UNKNOWN)"); CompiledName("SVG_FECOLORMATRIX_TYPE_UNKNOWN1")>]
            member __.SVG_FECOLORMATRIX_TYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_MATRIX)"); CompiledName("SVG_FECOLORMATRIX_TYPE_MATRIX1")>]
            member __.SVG_FECOLORMATRIX_TYPE_MATRIX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_HUEROTATE)"); CompiledName("SVG_FECOLORMATRIX_TYPE_HUEROTATE1")>]
            member __.SVG_FECOLORMATRIX_TYPE_HUEROTATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA)"); CompiledName("SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA1")>]
            member __.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGFEComponentTransferElement with 

            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in12")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"




    type SVGFECompositeElement with 

            [<FunScript.JSEmitInline("({0}.operator)"); CompiledName("_operator")>]
            member __._operator with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in2)"); CompiledName("in21")>]
            member __.in2 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.k2)"); CompiledName("k2")>]
            member __.k2 with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.k1)"); CompiledName("k1")>]
            member __.k1 with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.k3)"); CompiledName("k3")>]
            member __.k3 with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in13")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.k4)"); CompiledName("k4")>]
            member __.k4 with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_OUT)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_OUT1")>]
            member __.SVG_FECOMPOSITE_OPERATOR_OUT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_OVER)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_OVER1")>]
            member __.SVG_FECOMPOSITE_OPERATOR_OVER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_XOR)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_XOR1")>]
            member __.SVG_FECOMPOSITE_OPERATOR_XOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_ARITHMETIC1")>]
            member __.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_UNKNOWN)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_UNKNOWN1")>]
            member __.SVG_FECOMPOSITE_OPERATOR_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_IN)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_IN1")>]
            member __.SVG_FECOMPOSITE_OPERATOR_IN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_FECOMPOSITE_OPERATOR_ATOP)"); CompiledName("SVG_FECOMPOSITE_OPERATOR_ATOP1")>]
            member __.SVG_FECOMPOSITE_OPERATOR_ATOP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGFEConvolveMatrixElement with 

            [<FunScript.JSEmitInline("({0}.orderY)"); CompiledName("orderY")>]
            member __.orderY with get() : SVGAnimatedInteger = failwith "never" and set (v : SVGAnimatedInteger) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.kernelUnitLengthY)"); CompiledName("kernelUnitLengthY")>]
            member __.kernelUnitLengthY with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.orderX)"); CompiledName("orderX")>]
            member __.orderX with get() : SVGAnimatedInteger = failwith "never" and set (v : SVGAnimatedInteger) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.preserveAlpha)"); CompiledName("preserveAlpha")>]
            member __.preserveAlpha with get() : SVGAnimatedBoolean = failwith "never" and set (v : SVGAnimatedBoolean) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.kernelMatrix)"); CompiledName("kernelMatrix")>]
            member __.kernelMatrix with get() : SVGAnimatedNumberList = failwith "never" and set (v : SVGAnimatedNumberList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.edgeMode)"); CompiledName("edgeMode")>]
            member __.edgeMode with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.kernelUnitLengthX)"); CompiledName("kernelUnitLengthX")>]
            member __.kernelUnitLengthX with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bias)"); CompiledName("bias")>]
            member __.bias with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.targetX)"); CompiledName("targetX")>]
            member __.targetX with get() : SVGAnimatedInteger = failwith "never" and set (v : SVGAnimatedInteger) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.targetY)"); CompiledName("targetY")>]
            member __.targetY with get() : SVGAnimatedInteger = failwith "never" and set (v : SVGAnimatedInteger) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.divisor)"); CompiledName("divisor")>]
            member __.divisor with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in14")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_EDGEMODE_WRAP)"); CompiledName("SVG_EDGEMODE_WRAP1")>]
            member __.SVG_EDGEMODE_WRAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_EDGEMODE_DUPLICATE)"); CompiledName("SVG_EDGEMODE_DUPLICATE1")>]
            member __.SVG_EDGEMODE_DUPLICATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_EDGEMODE_UNKNOWN)"); CompiledName("SVG_EDGEMODE_UNKNOWN1")>]
            member __.SVG_EDGEMODE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_EDGEMODE_NONE)"); CompiledName("SVG_EDGEMODE_NONE1")>]
            member __.SVG_EDGEMODE_NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGFEDiffuseLightingElement with 

            [<FunScript.JSEmitInline("({0}.kernelUnitLengthY)"); CompiledName("kernelUnitLengthY1")>]
            member __.kernelUnitLengthY with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.surfaceScale)"); CompiledName("surfaceScale")>]
            member __.surfaceScale with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in15")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.kernelUnitLengthX)"); CompiledName("kernelUnitLengthX1")>]
            member __.kernelUnitLengthX with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.diffuseConstant)"); CompiledName("diffuseConstant")>]
            member __.diffuseConstant with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"




    type SVGFEDisplacementMapElement with 

            [<FunScript.JSEmitInline("({0}.in2)"); CompiledName("in22")>]
            member __.in2 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.xChannelSelector)"); CompiledName("xChannelSelector")>]
            member __.xChannelSelector with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.yChannelSelector)"); CompiledName("yChannelSelector")>]
            member __.yChannelSelector with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scale)"); CompiledName("scale3")>]
            member __.scale with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in16")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_B)"); CompiledName("SVG_CHANNEL_B1")>]
            member __.SVG_CHANNEL_B with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_R)"); CompiledName("SVG_CHANNEL_R1")>]
            member __.SVG_CHANNEL_R with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_G)"); CompiledName("SVG_CHANNEL_G1")>]
            member __.SVG_CHANNEL_G with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_UNKNOWN)"); CompiledName("SVG_CHANNEL_UNKNOWN1")>]
            member __.SVG_CHANNEL_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_CHANNEL_A)"); CompiledName("SVG_CHANNEL_A1")>]
            member __.SVG_CHANNEL_A with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGFEDistantLightElement with 

            [<FunScript.JSEmitInline("({0}.azimuth)"); CompiledName("azimuth")>]
            member __.azimuth with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.elevation)"); CompiledName("elevation")>]
            member __.elevation with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"




    type SVGFEGaussianBlurElement with 

            [<FunScript.JSEmitInline("({0}.stdDeviationX)"); CompiledName("stdDeviationX")>]
            member __.stdDeviationX with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in17")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stdDeviationY)"); CompiledName("stdDeviationY")>]
            member __.stdDeviationY with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setStdDeviation({args}))"); CompiledName("setStdDeviation")>]
            member __.setStdDeviation(stdDeviationX : float, stdDeviationY : float) : unit = failwith "never"




    type SVGFEImageElement with 

            [<FunScript.JSEmitInline("({0}.preserveAspectRatio)"); CompiledName("preserveAspectRatio")>]
            member __.preserveAspectRatio with get() : SVGAnimatedPreserveAspectRatio = failwith "never" and set (v : SVGAnimatedPreserveAspectRatio) : unit = failwith "never"




    type SVGFEMergeNodeElement with 

            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in18")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"




    type SVGFEMorphologyElement with 

            [<FunScript.JSEmitInline("({0}.operator)"); CompiledName("_operator1")>]
            member __._operator with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.radiusX)"); CompiledName("radiusX")>]
            member __.radiusX with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.radiusY)"); CompiledName("radiusY")>]
            member __.radiusY with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in19")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MORPHOLOGY_OPERATOR_UNKNOWN)"); CompiledName("SVG_MORPHOLOGY_OPERATOR_UNKNOWN1")>]
            member __.SVG_MORPHOLOGY_OPERATOR_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MORPHOLOGY_OPERATOR_ERODE)"); CompiledName("SVG_MORPHOLOGY_OPERATOR_ERODE1")>]
            member __.SVG_MORPHOLOGY_OPERATOR_ERODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MORPHOLOGY_OPERATOR_DILATE)"); CompiledName("SVG_MORPHOLOGY_OPERATOR_DILATE1")>]
            member __.SVG_MORPHOLOGY_OPERATOR_DILATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGFEOffsetElement with 

            [<FunScript.JSEmitInline("({0}.dy)"); CompiledName("dy")>]
            member __.dy with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in110")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dx)"); CompiledName("dx")>]
            member __.dx with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"




    type SVGFEPointLightElement with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y4")>]
            member __.y with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x4")>]
            member __.x with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.z)"); CompiledName("z2")>]
            member __.z with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"




    type SVGFESpecularLightingElement with 

            [<FunScript.JSEmitInline("({0}.kernelUnitLengthY)"); CompiledName("kernelUnitLengthY2")>]
            member __.kernelUnitLengthY with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.surfaceScale)"); CompiledName("surfaceScale1")>]
            member __.surfaceScale with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.specularExponent)"); CompiledName("specularExponent")>]
            member __.specularExponent with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in111")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.kernelUnitLengthX)"); CompiledName("kernelUnitLengthX2")>]
            member __.kernelUnitLengthX with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.specularConstant)"); CompiledName("specularConstant")>]
            member __.specularConstant with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"




    type SVGFESpotLightElement with 

            [<FunScript.JSEmitInline("({0}.pointsAtY)"); CompiledName("pointsAtY")>]
            member __.pointsAtY with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y5")>]
            member __.y with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.limitingConeAngle)"); CompiledName("limitingConeAngle")>]
            member __.limitingConeAngle with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.specularExponent)"); CompiledName("specularExponent1")>]
            member __.specularExponent with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x5")>]
            member __.x with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointsAtZ)"); CompiledName("pointsAtZ")>]
            member __.pointsAtZ with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.z)"); CompiledName("z3")>]
            member __.z with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pointsAtX)"); CompiledName("pointsAtX")>]
            member __.pointsAtX with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"




    type SVGFETileElement with 

            [<FunScript.JSEmitInline("({0}.in1)"); CompiledName("in112")>]
            member __.in1 with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"




    type SVGFETurbulenceElement with 

            [<FunScript.JSEmitInline("({0}.baseFrequencyX)"); CompiledName("baseFrequencyX")>]
            member __.baseFrequencyX with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.numOctaves)"); CompiledName("numOctaves")>]
            member __.numOctaves with get() : SVGAnimatedInteger = failwith "never" and set (v : SVGAnimatedInteger) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type29")>]
            member __._type with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.baseFrequencyY)"); CompiledName("baseFrequencyY")>]
            member __.baseFrequencyY with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stitchTiles)"); CompiledName("stitchTiles")>]
            member __.stitchTiles with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.seed)"); CompiledName("seed")>]
            member __.seed with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_STITCHTYPE_UNKNOWN)"); CompiledName("SVG_STITCHTYPE_UNKNOWN1")>]
            member __.SVG_STITCHTYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_STITCHTYPE_NOSTITCH)"); CompiledName("SVG_STITCHTYPE_NOSTITCH1")>]
            member __.SVG_STITCHTYPE_NOSTITCH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TURBULENCE_TYPE_UNKNOWN)"); CompiledName("SVG_TURBULENCE_TYPE_UNKNOWN1")>]
            member __.SVG_TURBULENCE_TYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TURBULENCE_TYPE_TURBULENCE)"); CompiledName("SVG_TURBULENCE_TYPE_TURBULENCE1")>]
            member __.SVG_TURBULENCE_TYPE_TURBULENCE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TURBULENCE_TYPE_FRACTALNOISE)"); CompiledName("SVG_TURBULENCE_TYPE_FRACTALNOISE1")>]
            member __.SVG_TURBULENCE_TYPE_FRACTALNOISE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_STITCHTYPE_STITCH)"); CompiledName("SVG_STITCHTYPE_STITCH1")>]
            member __.SVG_STITCHTYPE_STITCH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGFilterElement with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y6")>]
            member __.y with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width23")>]
            member __.width with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filterResX)"); CompiledName("filterResX")>]
            member __.filterResX with get() : SVGAnimatedInteger = failwith "never" and set (v : SVGAnimatedInteger) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filterUnits)"); CompiledName("filterUnits")>]
            member __.filterUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.primitiveUnits)"); CompiledName("primitiveUnits")>]
            member __.primitiveUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x6")>]
            member __.x with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height20")>]
            member __.height with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filterResY)"); CompiledName("filterResY")>]
            member __.filterResY with get() : SVGAnimatedInteger = failwith "never" and set (v : SVGAnimatedInteger) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setFilterRes({args}))"); CompiledName("setFilterRes")>]
            member __.setFilterRes(filterResX : float, filterResY : float) : unit = failwith "never"




    type SVGFilterPrimitiveStandardAttributes with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y7")>]
            member __.y with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width24")>]
            member __.width with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x7")>]
            member __.x with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height21")>]
            member __.height with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.result)"); CompiledName("result5")>]
            member __.result with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"




    type SVGFitToViewBox with 

            [<FunScript.JSEmitInline("({0}.viewBox)"); CompiledName("viewBox")>]
            member __.viewBox with get() : SVGAnimatedRect = failwith "never" and set (v : SVGAnimatedRect) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.preserveAspectRatio)"); CompiledName("preserveAspectRatio1")>]
            member __.preserveAspectRatio with get() : SVGAnimatedPreserveAspectRatio = failwith "never" and set (v : SVGAnimatedPreserveAspectRatio) : unit = failwith "never"




    type SVGGradientElement with 

            [<FunScript.JSEmitInline("({0}.spreadMethod)"); CompiledName("spreadMethod")>]
            member __.spreadMethod with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.gradientTransform)"); CompiledName("gradientTransform")>]
            member __.gradientTransform with get() : SVGAnimatedTransformList = failwith "never" and set (v : SVGAnimatedTransformList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.gradientUnits)"); CompiledName("gradientUnits")>]
            member __.gradientUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_SPREADMETHOD_REFLECT)"); CompiledName("SVG_SPREADMETHOD_REFLECT1")>]
            member __.SVG_SPREADMETHOD_REFLECT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_SPREADMETHOD_PAD)"); CompiledName("SVG_SPREADMETHOD_PAD1")>]
            member __.SVG_SPREADMETHOD_PAD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_SPREADMETHOD_UNKNOWN)"); CompiledName("SVG_SPREADMETHOD_UNKNOWN1")>]
            member __.SVG_SPREADMETHOD_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_SPREADMETHOD_REPEAT)"); CompiledName("SVG_SPREADMETHOD_REPEAT1")>]
            member __.SVG_SPREADMETHOD_REPEAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGImageElement with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y8")>]
            member __.y with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width25")>]
            member __.width with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.preserveAspectRatio)"); CompiledName("preserveAspectRatio2")>]
            member __.preserveAspectRatio with get() : SVGAnimatedPreserveAspectRatio = failwith "never" and set (v : SVGAnimatedPreserveAspectRatio) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x8")>]
            member __.x with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height22")>]
            member __.height with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGLangSpace with 

            [<FunScript.JSEmitInline("({0}.xmllang)"); CompiledName("xmllang")>]
            member __.xmllang with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.xmlspace)"); CompiledName("xmlspace")>]
            member __.xmlspace with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type SVGLength with 

            [<FunScript.JSEmitInline("({0}.valueAsString)"); CompiledName("valueAsString1")>]
            member __.valueAsString with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.valueInSpecifiedUnits)"); CompiledName("valueInSpecifiedUnits1")>]
            member __.valueInSpecifiedUnits with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value14")>]
            member __.value with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.unitType)"); CompiledName("unitType1")>]
            member __.unitType with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.newValueSpecifiedUnits({args}))"); CompiledName("newValueSpecifiedUnits1")>]
            member __.newValueSpecifiedUnits(unitType : float, valueInSpecifiedUnits : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.convertToSpecifiedUnits({args}))"); CompiledName("convertToSpecifiedUnits1")>]
            member __.convertToSpecifiedUnits(unitType : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_NUMBER)"); CompiledName("SVG_LENGTHTYPE_NUMBER1")>]
            member __.SVG_LENGTHTYPE_NUMBER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_CM)"); CompiledName("SVG_LENGTHTYPE_CM1")>]
            member __.SVG_LENGTHTYPE_CM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_PC)"); CompiledName("SVG_LENGTHTYPE_PC1")>]
            member __.SVG_LENGTHTYPE_PC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_PERCENTAGE)"); CompiledName("SVG_LENGTHTYPE_PERCENTAGE1")>]
            member __.SVG_LENGTHTYPE_PERCENTAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_MM)"); CompiledName("SVG_LENGTHTYPE_MM1")>]
            member __.SVG_LENGTHTYPE_MM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_PT)"); CompiledName("SVG_LENGTHTYPE_PT1")>]
            member __.SVG_LENGTHTYPE_PT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_IN)"); CompiledName("SVG_LENGTHTYPE_IN1")>]
            member __.SVG_LENGTHTYPE_IN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_EMS)"); CompiledName("SVG_LENGTHTYPE_EMS1")>]
            member __.SVG_LENGTHTYPE_EMS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_PX)"); CompiledName("SVG_LENGTHTYPE_PX1")>]
            member __.SVG_LENGTHTYPE_PX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_UNKNOWN)"); CompiledName("SVG_LENGTHTYPE_UNKNOWN1")>]
            member __.SVG_LENGTHTYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_LENGTHTYPE_EXS)"); CompiledName("SVG_LENGTHTYPE_EXS1")>]
            member __.SVG_LENGTHTYPE_EXS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGLengthList with 

            [<FunScript.JSEmitInline("({0}.numberOfItems)"); CompiledName("numberOfItems")>]
            member __.numberOfItems with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceItem({args}))"); CompiledName("replaceItem")>]
            member __.replaceItem(newItem : SVGLength, index : float) : SVGLength = failwith "never"
            [<FunScript.JSEmitInline("({0}.getItem({args}))"); CompiledName("getItem")>]
            member __.getItem(index : float) : SVGLength = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear8")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendItem({args}))"); CompiledName("appendItem")>]
            member __.appendItem(newItem : SVGLength) : SVGLength = failwith "never"
            [<FunScript.JSEmitInline("({0}.initialize({args}))"); CompiledName("initialize")>]
            member __.initialize(newItem : SVGLength) : SVGLength = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeItem({args}))"); CompiledName("removeItem")>]
            member __.removeItem(index : float) : SVGLength = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertItemBefore({args}))"); CompiledName("insertItemBefore")>]
            member __.insertItemBefore(newItem : SVGLength, index : float) : SVGLength = failwith "never"




    type SVGLineElement with 

            [<FunScript.JSEmitInline("({0}.y1)"); CompiledName("y11")>]
            member __.y1 with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x2)"); CompiledName("x21")>]
            member __.x2 with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x1)"); CompiledName("x11")>]
            member __.x1 with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y2)"); CompiledName("y21")>]
            member __.y2 with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGLinearGradientElement with 

            [<FunScript.JSEmitInline("({0}.y1)"); CompiledName("y12")>]
            member __.y1 with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x2)"); CompiledName("x22")>]
            member __.x2 with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x1)"); CompiledName("x12")>]
            member __.x1 with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y2)"); CompiledName("y22")>]
            member __.y2 with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGLocatable with 

            [<FunScript.JSEmitInline("({0}.farthestViewportElement)"); CompiledName("farthestViewportElement")>]
            member __.farthestViewportElement with get() : SVGElement = failwith "never" and set (v : SVGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.nearestViewportElement)"); CompiledName("nearestViewportElement")>]
            member __.nearestViewportElement with get() : SVGElement = failwith "never" and set (v : SVGElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getBBox())"); CompiledName("getBBox")>]
            member __.getBBox() : SVGRect = failwith "never"
            [<FunScript.JSEmitInline("({0}.getTransformToElement({args}))"); CompiledName("getTransformToElement")>]
            member __.getTransformToElement(element : SVGElement) : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCTM())"); CompiledName("getCTM")>]
            member __.getCTM() : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.getScreenCTM())"); CompiledName("getScreenCTM")>]
            member __.getScreenCTM() : SVGMatrix = failwith "never"




    type SVGMarkerElement with 

            [<FunScript.JSEmitInline("({0}.orientType)"); CompiledName("orientType")>]
            member __.orientType with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.markerUnits)"); CompiledName("markerUnits")>]
            member __.markerUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.markerWidth)"); CompiledName("markerWidth")>]
            member __.markerWidth with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.markerHeight)"); CompiledName("markerHeight")>]
            member __.markerHeight with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.orientAngle)"); CompiledName("orientAngle")>]
            member __.orientAngle with get() : SVGAnimatedAngle = failwith "never" and set (v : SVGAnimatedAngle) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.refY)"); CompiledName("refY")>]
            member __.refY with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.refX)"); CompiledName("refX")>]
            member __.refX with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setOrientToAngle({args}))"); CompiledName("setOrientToAngle")>]
            member __.setOrientToAngle(angle : SVGAngle) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setOrientToAuto())"); CompiledName("setOrientToAuto")>]
            member __.setOrientToAuto() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKER_ORIENT_UNKNOWN)"); CompiledName("SVG_MARKER_ORIENT_UNKNOWN1")>]
            member __.SVG_MARKER_ORIENT_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKER_ORIENT_ANGLE)"); CompiledName("SVG_MARKER_ORIENT_ANGLE1")>]
            member __.SVG_MARKER_ORIENT_ANGLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKERUNITS_UNKNOWN)"); CompiledName("SVG_MARKERUNITS_UNKNOWN1")>]
            member __.SVG_MARKERUNITS_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKERUNITS_STROKEWIDTH)"); CompiledName("SVG_MARKERUNITS_STROKEWIDTH1")>]
            member __.SVG_MARKERUNITS_STROKEWIDTH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKER_ORIENT_AUTO)"); CompiledName("SVG_MARKER_ORIENT_AUTO1")>]
            member __.SVG_MARKER_ORIENT_AUTO with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MARKERUNITS_USERSPACEONUSE)"); CompiledName("SVG_MARKERUNITS_USERSPACEONUSE1")>]
            member __.SVG_MARKERUNITS_USERSPACEONUSE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGMaskElement with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y9")>]
            member __.y with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width26")>]
            member __.width with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maskUnits)"); CompiledName("maskUnits")>]
            member __.maskUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.maskContentUnits)"); CompiledName("maskContentUnits")>]
            member __.maskContentUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x9")>]
            member __.x with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height23")>]
            member __.height with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGMatrix with 

            [<FunScript.JSEmitInline("({0}.e)"); CompiledName("e1")>]
            member __.e with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.c)"); CompiledName("c1")>]
            member __.c with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.a)"); CompiledName("a1")>]
            member __.a with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.b)"); CompiledName("b1")>]
            member __.b with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.d)"); CompiledName("d1")>]
            member __.d with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.f)"); CompiledName("f1")>]
            member __.f with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.multiply({args}))"); CompiledName("multiply1")>]
            member __.multiply(secondMatrix : SVGMatrix) : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.flipY())"); CompiledName("flipY")>]
            member __.flipY() : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.skewY({args}))"); CompiledName("skewY1")>]
            member __.skewY(angle : float) : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.inverse())"); CompiledName("inverse1")>]
            member __.inverse() : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.scaleNonUniform({args}))"); CompiledName("scaleNonUniform")>]
            member __.scaleNonUniform(scaleFactorX : float, scaleFactorY : float) : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotate({args}))"); CompiledName("rotate2")>]
            member __.rotate(angle : float) : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.flipX())"); CompiledName("flipX")>]
            member __.flipX() : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.translate({args}))"); CompiledName("translate2")>]
            member __.translate(x : float, y : float) : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.scale({args}))"); CompiledName("scale4")>]
            member __.scale(scaleFactor : float) : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotateFromVector({args}))"); CompiledName("rotateFromVector")>]
            member __.rotateFromVector(x : float, y : float) : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.skewX({args}))"); CompiledName("skewX1")>]
            member __.skewX(angle : float) : SVGMatrix = failwith "never"




    type SVGNumber with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value15")>]
            member __.value with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGNumberList with 

            [<FunScript.JSEmitInline("({0}.numberOfItems)"); CompiledName("numberOfItems1")>]
            member __.numberOfItems with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceItem({args}))"); CompiledName("replaceItem1")>]
            member __.replaceItem(newItem : SVGNumber, index : float) : SVGNumber = failwith "never"
            [<FunScript.JSEmitInline("({0}.getItem({args}))"); CompiledName("getItem1")>]
            member __.getItem(index : float) : SVGNumber = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear9")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendItem({args}))"); CompiledName("appendItem1")>]
            member __.appendItem(newItem : SVGNumber) : SVGNumber = failwith "never"
            [<FunScript.JSEmitInline("({0}.initialize({args}))"); CompiledName("initialize1")>]
            member __.initialize(newItem : SVGNumber) : SVGNumber = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeItem({args}))"); CompiledName("removeItem1")>]
            member __.removeItem(index : float) : SVGNumber = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertItemBefore({args}))"); CompiledName("insertItemBefore1")>]
            member __.insertItemBefore(newItem : SVGNumber, index : float) : SVGNumber = failwith "never"




    type SVGPathElement with 

            [<FunScript.JSEmitInline("({0}.getPathSegAtLength({args}))"); CompiledName("getPathSegAtLength")>]
            member __.getPathSegAtLength(distance : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getPointAtLength({args}))"); CompiledName("getPointAtLength")>]
            member __.getPointAtLength(distance : float) : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegCurvetoQuadraticAbs({args}))"); CompiledName("createSVGPathSegCurvetoQuadraticAbs")>]
            member __.createSVGPathSegCurvetoQuadraticAbs(x : float, y : float, x1 : float, y1 : float) : SVGPathSegCurvetoQuadraticAbs = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegLinetoRel({args}))"); CompiledName("createSVGPathSegLinetoRel")>]
            member __.createSVGPathSegLinetoRel(x : float, y : float) : SVGPathSegLinetoRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegCurvetoQuadraticRel({args}))"); CompiledName("createSVGPathSegCurvetoQuadraticRel")>]
            member __.createSVGPathSegCurvetoQuadraticRel(x : float, y : float, x1 : float, y1 : float) : SVGPathSegCurvetoQuadraticRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegCurvetoCubicAbs({args}))"); CompiledName("createSVGPathSegCurvetoCubicAbs")>]
            member __.createSVGPathSegCurvetoCubicAbs(x : float, y : float, x1 : float, y1 : float, x2 : float, y2 : float) : SVGPathSegCurvetoCubicAbs = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegLinetoAbs({args}))"); CompiledName("createSVGPathSegLinetoAbs")>]
            member __.createSVGPathSegLinetoAbs(x : float, y : float) : SVGPathSegLinetoAbs = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegClosePath())"); CompiledName("createSVGPathSegClosePath")>]
            member __.createSVGPathSegClosePath() : SVGPathSegClosePath = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegCurvetoCubicRel({args}))"); CompiledName("createSVGPathSegCurvetoCubicRel")>]
            member __.createSVGPathSegCurvetoCubicRel(x : float, y : float, x1 : float, y1 : float, x2 : float, y2 : float) : SVGPathSegCurvetoCubicRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegCurvetoQuadraticSmoothRel({args}))"); CompiledName("createSVGPathSegCurvetoQuadraticSmoothRel")>]
            member __.createSVGPathSegCurvetoQuadraticSmoothRel(x : float, y : float) : SVGPathSegCurvetoQuadraticSmoothRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegMovetoRel({args}))"); CompiledName("createSVGPathSegMovetoRel")>]
            member __.createSVGPathSegMovetoRel(x : float, y : float) : SVGPathSegMovetoRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegCurvetoCubicSmoothAbs({args}))"); CompiledName("createSVGPathSegCurvetoCubicSmoothAbs")>]
            member __.createSVGPathSegCurvetoCubicSmoothAbs(x : float, y : float, x2 : float, y2 : float) : SVGPathSegCurvetoCubicSmoothAbs = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegMovetoAbs({args}))"); CompiledName("createSVGPathSegMovetoAbs")>]
            member __.createSVGPathSegMovetoAbs(x : float, y : float) : SVGPathSegMovetoAbs = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegLinetoVerticalRel({args}))"); CompiledName("createSVGPathSegLinetoVerticalRel")>]
            member __.createSVGPathSegLinetoVerticalRel(y : float) : SVGPathSegLinetoVerticalRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegArcRel({args}))"); CompiledName("createSVGPathSegArcRel")>]
            member __.createSVGPathSegArcRel(x : float, y : float, r1 : float, r2 : float, angle : float, largeArcFlag : bool, sweepFlag : bool) : SVGPathSegArcRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegCurvetoQuadraticSmoothAbs({args}))"); CompiledName("createSVGPathSegCurvetoQuadraticSmoothAbs")>]
            member __.createSVGPathSegCurvetoQuadraticSmoothAbs(x : float, y : float) : SVGPathSegCurvetoQuadraticSmoothAbs = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegLinetoHorizontalRel({args}))"); CompiledName("createSVGPathSegLinetoHorizontalRel")>]
            member __.createSVGPathSegLinetoHorizontalRel(x : float) : SVGPathSegLinetoHorizontalRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.getTotalLength())"); CompiledName("getTotalLength")>]
            member __.getTotalLength() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegCurvetoCubicSmoothRel({args}))"); CompiledName("createSVGPathSegCurvetoCubicSmoothRel")>]
            member __.createSVGPathSegCurvetoCubicSmoothRel(x : float, y : float, x2 : float, y2 : float) : SVGPathSegCurvetoCubicSmoothRel = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegLinetoHorizontalAbs({args}))"); CompiledName("createSVGPathSegLinetoHorizontalAbs")>]
            member __.createSVGPathSegLinetoHorizontalAbs(x : float) : SVGPathSegLinetoHorizontalAbs = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegLinetoVerticalAbs({args}))"); CompiledName("createSVGPathSegLinetoVerticalAbs")>]
            member __.createSVGPathSegLinetoVerticalAbs(y : float) : SVGPathSegLinetoVerticalAbs = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPathSegArcAbs({args}))"); CompiledName("createSVGPathSegArcAbs")>]
            member __.createSVGPathSegArcAbs(x : float, y : float, r1 : float, r2 : float, angle : float, largeArcFlag : bool, sweepFlag : bool) : SVGPathSegArcAbs = failwith "never"




    type SVGPathSeg with 

            [<FunScript.JSEmitInline("({0}.pathSegType)"); CompiledName("pathSegType")>]
            member __.pathSegType with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pathSegTypeAsLetter)"); CompiledName("pathSegTypeAsLetter")>]
            member __.pathSegTypeAsLetter with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_MOVETO_REL)"); CompiledName("PATHSEG_MOVETO_REL1")>]
            member __.PATHSEG_MOVETO_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_VERTICAL_REL)"); CompiledName("PATHSEG_LINETO_VERTICAL_REL1")>]
            member __.PATHSEG_LINETO_VERTICAL_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS)"); CompiledName("PATHSEG_CURVETO_CUBIC_SMOOTH_ABS1")>]
            member __.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_QUADRATIC_REL)"); CompiledName("PATHSEG_CURVETO_QUADRATIC_REL1")>]
            member __.PATHSEG_CURVETO_QUADRATIC_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_CUBIC_ABS)"); CompiledName("PATHSEG_CURVETO_CUBIC_ABS1")>]
            member __.PATHSEG_CURVETO_CUBIC_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_HORIZONTAL_ABS)"); CompiledName("PATHSEG_LINETO_HORIZONTAL_ABS1")>]
            member __.PATHSEG_LINETO_HORIZONTAL_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_QUADRATIC_ABS)"); CompiledName("PATHSEG_CURVETO_QUADRATIC_ABS1")>]
            member __.PATHSEG_CURVETO_QUADRATIC_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_ABS)"); CompiledName("PATHSEG_LINETO_ABS1")>]
            member __.PATHSEG_LINETO_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CLOSEPATH)"); CompiledName("PATHSEG_CLOSEPATH1")>]
            member __.PATHSEG_CLOSEPATH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_HORIZONTAL_REL)"); CompiledName("PATHSEG_LINETO_HORIZONTAL_REL1")>]
            member __.PATHSEG_LINETO_HORIZONTAL_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_CUBIC_SMOOTH_REL)"); CompiledName("PATHSEG_CURVETO_CUBIC_SMOOTH_REL1")>]
            member __.PATHSEG_CURVETO_CUBIC_SMOOTH_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_REL)"); CompiledName("PATHSEG_LINETO_REL1")>]
            member __.PATHSEG_LINETO_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS)"); CompiledName("PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS1")>]
            member __.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_ARC_REL)"); CompiledName("PATHSEG_ARC_REL1")>]
            member __.PATHSEG_ARC_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_CUBIC_REL)"); CompiledName("PATHSEG_CURVETO_CUBIC_REL1")>]
            member __.PATHSEG_CURVETO_CUBIC_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_UNKNOWN)"); CompiledName("PATHSEG_UNKNOWN1")>]
            member __.PATHSEG_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_LINETO_VERTICAL_ABS)"); CompiledName("PATHSEG_LINETO_VERTICAL_ABS1")>]
            member __.PATHSEG_LINETO_VERTICAL_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_ARC_ABS)"); CompiledName("PATHSEG_ARC_ABS1")>]
            member __.PATHSEG_ARC_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_MOVETO_ABS)"); CompiledName("PATHSEG_MOVETO_ABS1")>]
            member __.PATHSEG_MOVETO_ABS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL)"); CompiledName("PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL1")>]
            member __.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegArcAbs with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y10")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sweepFlag)"); CompiledName("sweepFlag")>]
            member __.sweepFlag with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.r2)"); CompiledName("r2")>]
            member __.r2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x10")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.angle)"); CompiledName("angle")>]
            member __.angle with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.r1)"); CompiledName("r1")>]
            member __.r1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.largeArcFlag)"); CompiledName("largeArcFlag")>]
            member __.largeArcFlag with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type SVGPathSegArcRel with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y13")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sweepFlag)"); CompiledName("sweepFlag1")>]
            member __.sweepFlag with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.r2)"); CompiledName("r21")>]
            member __.r2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x13")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.angle)"); CompiledName("angle1")>]
            member __.angle with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.r1)"); CompiledName("r11")>]
            member __.r1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.largeArcFlag)"); CompiledName("largeArcFlag1")>]
            member __.largeArcFlag with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type SVGPathSegCurvetoCubicAbs with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y14")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y1)"); CompiledName("y15")>]
            member __.y1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x2)"); CompiledName("x23")>]
            member __.x2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x14")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x1)"); CompiledName("x15")>]
            member __.x1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y2)"); CompiledName("y23")>]
            member __.y2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegCurvetoCubicRel with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y16")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y1)"); CompiledName("y17")>]
            member __.y1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x2)"); CompiledName("x24")>]
            member __.x2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x16")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x1)"); CompiledName("x17")>]
            member __.x1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y2)"); CompiledName("y24")>]
            member __.y2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegCurvetoCubicSmoothAbs with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y18")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x2)"); CompiledName("x25")>]
            member __.x2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x18")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y2)"); CompiledName("y25")>]
            member __.y2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegCurvetoCubicSmoothRel with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y19")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x2)"); CompiledName("x26")>]
            member __.x2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x19")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y2)"); CompiledName("y26")>]
            member __.y2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegCurvetoQuadraticAbs with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y20")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y1)"); CompiledName("y110")>]
            member __.y1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x20")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x1)"); CompiledName("x110")>]
            member __.x1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegCurvetoQuadraticRel with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y27")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y1)"); CompiledName("y111")>]
            member __.y1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x27")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x1)"); CompiledName("x111")>]
            member __.x1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegCurvetoQuadraticSmoothAbs with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y28")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x28")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegCurvetoQuadraticSmoothRel with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y29")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x29")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegLinetoAbs with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y30")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x30")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegLinetoHorizontalAbs with 

            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x31")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegLinetoHorizontalRel with 

            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x32")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegLinetoRel with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y31")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x33")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegLinetoVerticalAbs with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y32")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegLinetoVerticalRel with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y33")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegList with 

            [<FunScript.JSEmitInline("({0}.numberOfItems)"); CompiledName("numberOfItems2")>]
            member __.numberOfItems with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceItem({args}))"); CompiledName("replaceItem2")>]
            member __.replaceItem(newItem : SVGPathSeg, index : float) : SVGPathSeg = failwith "never"
            [<FunScript.JSEmitInline("({0}.getItem({args}))"); CompiledName("getItem2")>]
            member __.getItem(index : float) : SVGPathSeg = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear10")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendItem({args}))"); CompiledName("appendItem2")>]
            member __.appendItem(newItem : SVGPathSeg) : SVGPathSeg = failwith "never"
            [<FunScript.JSEmitInline("({0}.initialize({args}))"); CompiledName("initialize2")>]
            member __.initialize(newItem : SVGPathSeg) : SVGPathSeg = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeItem({args}))"); CompiledName("removeItem2")>]
            member __.removeItem(index : float) : SVGPathSeg = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertItemBefore({args}))"); CompiledName("insertItemBefore2")>]
            member __.insertItemBefore(newItem : SVGPathSeg, index : float) : SVGPathSeg = failwith "never"




    type SVGPathSegMovetoAbs with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y34")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x34")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPathSegMovetoRel with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y35")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x35")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGPatternElement with 

            [<FunScript.JSEmitInline("({0}.patternUnits)"); CompiledName("patternUnits")>]
            member __.patternUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y36")>]
            member __.y with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width27")>]
            member __.width with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x36")>]
            member __.x with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.patternContentUnits)"); CompiledName("patternContentUnits")>]
            member __.patternContentUnits with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.patternTransform)"); CompiledName("patternTransform")>]
            member __.patternTransform with get() : SVGAnimatedTransformList = failwith "never" and set (v : SVGAnimatedTransformList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height24")>]
            member __.height with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGPoint with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y37")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x37")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.matrixTransform({args}))"); CompiledName("matrixTransform")>]
            member __.matrixTransform(matrix : SVGMatrix) : SVGPoint = failwith "never"




    type SVGPointList with 

            [<FunScript.JSEmitInline("({0}.numberOfItems)"); CompiledName("numberOfItems3")>]
            member __.numberOfItems with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceItem({args}))"); CompiledName("replaceItem3")>]
            member __.replaceItem(newItem : SVGPoint, index : float) : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.getItem({args}))"); CompiledName("getItem3")>]
            member __.getItem(index : float) : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear11")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendItem({args}))"); CompiledName("appendItem3")>]
            member __.appendItem(newItem : SVGPoint) : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.initialize({args}))"); CompiledName("initialize3")>]
            member __.initialize(newItem : SVGPoint) : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeItem({args}))"); CompiledName("removeItem3")>]
            member __.removeItem(index : float) : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertItemBefore({args}))"); CompiledName("insertItemBefore3")>]
            member __.insertItemBefore(newItem : SVGPoint, index : float) : SVGPoint = failwith "never"




    type SVGPreserveAspectRatio with 

            [<FunScript.JSEmitInline("({0}.align)"); CompiledName("align16")>]
            member __.align with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.meetOrSlice)"); CompiledName("meetOrSlice")>]
            member __.meetOrSlice with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_NONE)"); CompiledName("SVG_PRESERVEASPECTRATIO_NONE1")>]
            member __.SVG_PRESERVEASPECTRATIO_NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMINYMID)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMINYMID1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMINYMID with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMAXYMIN)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMAXYMIN1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMAXYMIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMINYMAX)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMINYMAX1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMINYMAX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMAXYMAX)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMAXYMAX1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMAXYMAX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MEETORSLICE_UNKNOWN)"); CompiledName("SVG_MEETORSLICE_UNKNOWN1")>]
            member __.SVG_MEETORSLICE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMAXYMID)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMAXYMID1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMAXYMID with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMIDYMAX)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMIDYMAX1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMIDYMAX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMINYMIN)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMINYMIN1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMINYMIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MEETORSLICE_MEET)"); CompiledName("SVG_MEETORSLICE_MEET1")>]
            member __.SVG_MEETORSLICE_MEET with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMIDYMID)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMIDYMID1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMIDYMID with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_XMIDYMIN)"); CompiledName("SVG_PRESERVEASPECTRATIO_XMIDYMIN1")>]
            member __.SVG_PRESERVEASPECTRATIO_XMIDYMIN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_MEETORSLICE_SLICE)"); CompiledName("SVG_MEETORSLICE_SLICE1")>]
            member __.SVG_MEETORSLICE_SLICE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_PRESERVEASPECTRATIO_UNKNOWN)"); CompiledName("SVG_PRESERVEASPECTRATIO_UNKNOWN1")>]
            member __.SVG_PRESERVEASPECTRATIO_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGRadialGradientElement with 

            [<FunScript.JSEmitInline("({0}.cx)"); CompiledName("cx2")>]
            member __.cx with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.r)"); CompiledName("r3")>]
            member __.r with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cy)"); CompiledName("cy2")>]
            member __.cy with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fx)"); CompiledName("fx")>]
            member __.fx with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fy)"); CompiledName("fy")>]
            member __.fy with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGRect with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y38")>]
            member __.y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width28")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x38")>]
            member __.x with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height25")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGRectElement with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y39")>]
            member __.y with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width29")>]
            member __.width with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ry)"); CompiledName("ry1")>]
            member __.ry with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rx)"); CompiledName("rx1")>]
            member __.rx with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x39")>]
            member __.x with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height26")>]
            member __.height with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGSVGElement with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width30")>]
            member __.width with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x40")>]
            member __.x with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentStyleType)"); CompiledName("contentStyleType")>]
            member __.contentStyleType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onzoom)"); CompiledName("onzoom")>]
            member __.onzoom with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y40")>]
            member __.y with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.viewport)"); CompiledName("viewport")>]
            member __.viewport with get() : SVGRect = failwith "never" and set (v : SVGRect) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror14")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelUnitToMillimeterY)"); CompiledName("pixelUnitToMillimeterY")>]
            member __.pixelUnitToMillimeterY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onresize)"); CompiledName("onresize4")>]
            member __.onresize with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenPixelToMillimeterY)"); CompiledName("screenPixelToMillimeterY")>]
            member __.screenPixelToMillimeterY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height27")>]
            member __.height with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort7")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentScriptType)"); CompiledName("contentScriptType")>]
            member __.contentScriptType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelUnitToMillimeterX)"); CompiledName("pixelUnitToMillimeterX")>]
            member __.pixelUnitToMillimeterX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentTranslate)"); CompiledName("currentTranslate")>]
            member __.currentTranslate with get() : SVGPoint = failwith "never" and set (v : SVGPoint) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onunload)"); CompiledName("onunload3")>]
            member __.onunload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentScale)"); CompiledName("currentScale")>]
            member __.currentScale with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onscroll)"); CompiledName("onscroll3")>]
            member __.onscroll with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenPixelToMillimeterX)"); CompiledName("screenPixelToMillimeterX")>]
            member __.screenPixelToMillimeterX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setCurrentTime({args}))"); CompiledName("setCurrentTime")>]
            member __.setCurrentTime(seconds : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGLength())"); CompiledName("createSVGLength")>]
            member __.createSVGLength() : SVGLength = failwith "never"
            [<FunScript.JSEmitInline("({0}.getIntersectionList({args}))"); CompiledName("getIntersectionList")>]
            member __.getIntersectionList(rect : SVGRect, referenceElement : SVGElement) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.unpauseAnimations())"); CompiledName("unpauseAnimations")>]
            member __.unpauseAnimations() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGRect())"); CompiledName("createSVGRect")>]
            member __.createSVGRect() : SVGRect = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkIntersection({args}))"); CompiledName("checkIntersection")>]
            member __.checkIntersection(element : SVGElement, rect : SVGRect) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.unsuspendRedrawAll())"); CompiledName("unsuspendRedrawAll")>]
            member __.unsuspendRedrawAll() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pauseAnimations())"); CompiledName("pauseAnimations")>]
            member __.pauseAnimations() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.suspendRedraw({args}))"); CompiledName("suspendRedraw")>]
            member __.suspendRedraw(maxWaitMilliseconds : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.deselectAll())"); CompiledName("deselectAll")>]
            member __.deselectAll() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGAngle())"); CompiledName("createSVGAngle")>]
            member __.createSVGAngle() : SVGAngle = failwith "never"
            [<FunScript.JSEmitInline("({0}.getEnclosureList({args}))"); CompiledName("getEnclosureList")>]
            member __.getEnclosureList(rect : SVGRect, referenceElement : SVGElement) : NodeList = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGTransform())"); CompiledName("createSVGTransform")>]
            member __.createSVGTransform() : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.unsuspendRedraw({args}))"); CompiledName("unsuspendRedraw")>]
            member __.unsuspendRedraw(suspendHandleID : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.forceRedraw())"); CompiledName("forceRedraw")>]
            member __.forceRedraw() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCurrentTime())"); CompiledName("getCurrentTime")>]
            member __.getCurrentTime() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkEnclosure({args}))"); CompiledName("checkEnclosure")>]
            member __.checkEnclosure(element : SVGElement, rect : SVGRect) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGMatrix())"); CompiledName("createSVGMatrix")>]
            member __.createSVGMatrix() : SVGMatrix = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGPoint())"); CompiledName("createSVGPoint")>]
            member __.createSVGPoint() : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGNumber())"); CompiledName("createSVGNumber")>]
            member __.createSVGNumber() : SVGNumber = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGTransformFromMatrix({args}))"); CompiledName("createSVGTransformFromMatrix")>]
            member __.createSVGTransformFromMatrix(matrix : SVGMatrix) : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.getComputedStyle({args}))"); CompiledName("getComputedStyle1")>]
            member __.getComputedStyle(elt : Element, ?pseudoElt : string) : CSSStyleDeclaration = failwith "never"
            [<FunScript.JSEmitInline("({0}.getElementById({args}))"); CompiledName("getElementById1")>]
            member __.getElementById(elementId : string) : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener1350")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener1351")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener1352")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener1353")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener1354")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener1355")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener1356")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener1357")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener1358")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgotpointercapture\", {args})"); CompiledName("addEventListener1359")>]
            member __.addEventListener_msgotpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener1360")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener1361")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener1362")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener1363")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener1364")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener1365")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener1366")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener1367")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener1368")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener1369")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener1370")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mslostpointercapture\", {args})"); CompiledName("addEventListener1371")>]
            member __.addEventListener_mslostpointercapture(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener1372")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener1373")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"lostpointercapture\", {args})"); CompiledName("addEventListener1374")>]
            member __.addEventListener_lostpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener1375")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"gotpointercapture\", {args})"); CompiledName("addEventListener1376")>]
            member __.addEventListener_gotpointercapture(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener1377")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener1378")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener1379")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener1380")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener1381")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener1382")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener1383")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener1384")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1385")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener1386")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener1387")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"zoom\", {args})"); CompiledName("addEventListener1388")>]
            member __.addEventListener_zoom(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1389")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener1390")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1391")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"unload\", {args})"); CompiledName("addEventListener1392")>]
            member __.addEventListener_unload(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener1393")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1394")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type SVGScriptElement with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type30")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type SVGStopElement with 

            [<FunScript.JSEmitInline("({0}.offset)"); CompiledName("offset1")>]
            member __.offset with get() : SVGAnimatedNumber = failwith "never" and set (v : SVGAnimatedNumber) : unit = failwith "never"




    type SVGStringList with 

            [<FunScript.JSEmitInline("({0}.numberOfItems)"); CompiledName("numberOfItems4")>]
            member __.numberOfItems with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceItem({args}))"); CompiledName("replaceItem4")>]
            member __.replaceItem(newItem : string, index : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.getItem({args}))"); CompiledName("getItem4")>]
            member __.getItem(index : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear12")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendItem({args}))"); CompiledName("appendItem4")>]
            member __.appendItem(newItem : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.initialize({args}))"); CompiledName("initialize4")>]
            member __.initialize(newItem : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeItem({args}))"); CompiledName("removeItem4")>]
            member __.removeItem(index : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertItemBefore({args}))"); CompiledName("insertItemBefore4")>]
            member __.insertItemBefore(newItem : string, index : float) : string = failwith "never"




    type SVGStylable with 

            [<FunScript.JSEmitInline("({0}.className)"); CompiledName("className1")>]
            member __.className with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.style)"); CompiledName("style7")>]
            member __.style with get() : CSSStyleDeclaration = failwith "never" and set (v : CSSStyleDeclaration) : unit = failwith "never"




    type SVGStyleElement with 

            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media7")>]
            member __.media with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type31")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.title)"); CompiledName("title2")>]
            member __.title with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type SVGTests with 

            [<FunScript.JSEmitInline("({0}.requiredFeatures)"); CompiledName("requiredFeatures")>]
            member __.requiredFeatures with get() : SVGStringList = failwith "never" and set (v : SVGStringList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.requiredExtensions)"); CompiledName("requiredExtensions")>]
            member __.requiredExtensions with get() : SVGStringList = failwith "never" and set (v : SVGStringList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.systemLanguage)"); CompiledName("systemLanguage1")>]
            member __.systemLanguage with get() : SVGStringList = failwith "never" and set (v : SVGStringList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.hasExtension({args}))"); CompiledName("hasExtension")>]
            member __.hasExtension(extension : string) : bool = failwith "never"




    type SVGTextContentElement with 

            [<FunScript.JSEmitInline("({0}.textLength)"); CompiledName("textLength")>]
            member __.textLength with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lengthAdjust)"); CompiledName("lengthAdjust")>]
            member __.lengthAdjust with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCharNumAtPosition({args}))"); CompiledName("getCharNumAtPosition")>]
            member __.getCharNumAtPosition(point : SVGPoint) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getStartPositionOfChar({args}))"); CompiledName("getStartPositionOfChar")>]
            member __.getStartPositionOfChar(charnum : float) : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.getExtentOfChar({args}))"); CompiledName("getExtentOfChar")>]
            member __.getExtentOfChar(charnum : float) : SVGRect = failwith "never"
            [<FunScript.JSEmitInline("({0}.getComputedTextLength())"); CompiledName("getComputedTextLength")>]
            member __.getComputedTextLength() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getSubStringLength({args}))"); CompiledName("getSubStringLength")>]
            member __.getSubStringLength(charnum : float, nchars : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectSubString({args}))"); CompiledName("selectSubString")>]
            member __.selectSubString(charnum : float, nchars : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getNumberOfChars())"); CompiledName("getNumberOfChars")>]
            member __.getNumberOfChars() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getRotationOfChar({args}))"); CompiledName("getRotationOfChar")>]
            member __.getRotationOfChar(charnum : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getEndPositionOfChar({args}))"); CompiledName("getEndPositionOfChar")>]
            member __.getEndPositionOfChar(charnum : float) : SVGPoint = failwith "never"
            [<FunScript.JSEmitInline("({0}.LENGTHADJUST_SPACING)"); CompiledName("LENGTHADJUST_SPACING1")>]
            member __.LENGTHADJUST_SPACING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LENGTHADJUST_SPACINGANDGLYPHS)"); CompiledName("LENGTHADJUST_SPACINGANDGLYPHS1")>]
            member __.LENGTHADJUST_SPACINGANDGLYPHS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LENGTHADJUST_UNKNOWN)"); CompiledName("LENGTHADJUST_UNKNOWN1")>]
            member __.LENGTHADJUST_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGTextPathElement with 

            [<FunScript.JSEmitInline("({0}.startOffset)"); CompiledName("startOffset1")>]
            member __.startOffset with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.method)"); CompiledName("_method1")>]
            member __._method with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.spacing)"); CompiledName("spacing")>]
            member __.spacing with get() : SVGAnimatedEnumeration = failwith "never" and set (v : SVGAnimatedEnumeration) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_SPACINGTYPE_EXACT)"); CompiledName("TEXTPATH_SPACINGTYPE_EXACT1")>]
            member __.TEXTPATH_SPACINGTYPE_EXACT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_METHODTYPE_STRETCH)"); CompiledName("TEXTPATH_METHODTYPE_STRETCH1")>]
            member __.TEXTPATH_METHODTYPE_STRETCH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_SPACINGTYPE_AUTO)"); CompiledName("TEXTPATH_SPACINGTYPE_AUTO1")>]
            member __.TEXTPATH_SPACINGTYPE_AUTO with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_SPACINGTYPE_UNKNOWN)"); CompiledName("TEXTPATH_SPACINGTYPE_UNKNOWN1")>]
            member __.TEXTPATH_SPACINGTYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_METHODTYPE_UNKNOWN)"); CompiledName("TEXTPATH_METHODTYPE_UNKNOWN1")>]
            member __.TEXTPATH_METHODTYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTPATH_METHODTYPE_ALIGN)"); CompiledName("TEXTPATH_METHODTYPE_ALIGN1")>]
            member __.TEXTPATH_METHODTYPE_ALIGN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGTextPositioningElement with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y41")>]
            member __.y with get() : SVGAnimatedLengthList = failwith "never" and set (v : SVGAnimatedLengthList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rotate)"); CompiledName("rotate3")>]
            member __.rotate with get() : SVGAnimatedNumberList = failwith "never" and set (v : SVGAnimatedNumberList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dy)"); CompiledName("dy1")>]
            member __.dy with get() : SVGAnimatedLengthList = failwith "never" and set (v : SVGAnimatedLengthList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x41")>]
            member __.x with get() : SVGAnimatedLengthList = failwith "never" and set (v : SVGAnimatedLengthList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.dx)"); CompiledName("dx1")>]
            member __.dx with get() : SVGAnimatedLengthList = failwith "never" and set (v : SVGAnimatedLengthList) : unit = failwith "never"




    type SVGTransform with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type32")>]
            member __._type with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.angle)"); CompiledName("angle2")>]
            member __.angle with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.matrix)"); CompiledName("matrix")>]
            member __.matrix with get() : SVGMatrix = failwith "never" and set (v : SVGMatrix) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setTranslate({args}))"); CompiledName("setTranslate")>]
            member __.setTranslate(tx : float, ty : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setScale({args}))"); CompiledName("setScale")>]
            member __.setScale(sx : float, sy : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setMatrix({args}))"); CompiledName("setMatrix")>]
            member __.setMatrix(matrix : SVGMatrix) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setSkewY({args}))"); CompiledName("setSkewY")>]
            member __.setSkewY(angle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setRotate({args}))"); CompiledName("setRotate")>]
            member __.setRotate(angle : float, cx : float, cy : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setSkewX({args}))"); CompiledName("setSkewX")>]
            member __.setSkewX(angle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_SKEWX)"); CompiledName("SVG_TRANSFORM_SKEWX1")>]
            member __.SVG_TRANSFORM_SKEWX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_UNKNOWN)"); CompiledName("SVG_TRANSFORM_UNKNOWN1")>]
            member __.SVG_TRANSFORM_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_SCALE)"); CompiledName("SVG_TRANSFORM_SCALE1")>]
            member __.SVG_TRANSFORM_SCALE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_TRANSLATE)"); CompiledName("SVG_TRANSFORM_TRANSLATE1")>]
            member __.SVG_TRANSFORM_TRANSLATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_MATRIX)"); CompiledName("SVG_TRANSFORM_MATRIX1")>]
            member __.SVG_TRANSFORM_MATRIX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_ROTATE)"); CompiledName("SVG_TRANSFORM_ROTATE1")>]
            member __.SVG_TRANSFORM_ROTATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_TRANSFORM_SKEWY)"); CompiledName("SVG_TRANSFORM_SKEWY1")>]
            member __.SVG_TRANSFORM_SKEWY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGTransformList with 

            [<FunScript.JSEmitInline("({0}.numberOfItems)"); CompiledName("numberOfItems5")>]
            member __.numberOfItems with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getItem({args}))"); CompiledName("getItem5")>]
            member __.getItem(index : float) : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.consolidate())"); CompiledName("consolidate")>]
            member __.consolidate() : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear13")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendItem({args}))"); CompiledName("appendItem5")>]
            member __.appendItem(newItem : SVGTransform) : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.initialize({args}))"); CompiledName("initialize5")>]
            member __.initialize(newItem : SVGTransform) : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeItem({args}))"); CompiledName("removeItem5")>]
            member __.removeItem(index : float) : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.insertItemBefore({args}))"); CompiledName("insertItemBefore5")>]
            member __.insertItemBefore(newItem : SVGTransform, index : float) : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceItem({args}))"); CompiledName("replaceItem5")>]
            member __.replaceItem(newItem : SVGTransform, index : float) : SVGTransform = failwith "never"
            [<FunScript.JSEmitInline("({0}.createSVGTransformFromMatrix({args}))"); CompiledName("createSVGTransformFromMatrix1")>]
            member __.createSVGTransformFromMatrix(matrix : SVGMatrix) : SVGTransform = failwith "never"




    type SVGTransformable with 

            [<FunScript.JSEmitInline("({0}.transform)"); CompiledName("transform2")>]
            member __.transform with get() : SVGAnimatedTransformList = failwith "never" and set (v : SVGAnimatedTransformList) : unit = failwith "never"




    type SVGURIReference with 

            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href8")>]
            member __.href with get() : SVGAnimatedString = failwith "never" and set (v : SVGAnimatedString) : unit = failwith "never"




    type SVGUnitTypes with 

            [<FunScript.JSEmitInline("({0}.SVG_UNIT_TYPE_UNKNOWN)"); CompiledName("SVG_UNIT_TYPE_UNKNOWN")>]
            member __.SVG_UNIT_TYPE_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_UNIT_TYPE_OBJECTBOUNDINGBOX)"); CompiledName("SVG_UNIT_TYPE_OBJECTBOUNDINGBOX")>]
            member __.SVG_UNIT_TYPE_OBJECTBOUNDINGBOX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_UNIT_TYPE_USERSPACEONUSE)"); CompiledName("SVG_UNIT_TYPE_USERSPACEONUSE")>]
            member __.SVG_UNIT_TYPE_USERSPACEONUSE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGUseElement with 

            [<FunScript.JSEmitInline("({0}.y)"); CompiledName("y42")>]
            member __.y with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width31")>]
            member __.width with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animatedInstanceRoot)"); CompiledName("animatedInstanceRoot")>]
            member __.animatedInstanceRoot with get() : SVGElementInstance = failwith "never" and set (v : SVGElementInstance) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.instanceRoot)"); CompiledName("instanceRoot")>]
            member __.instanceRoot with get() : SVGElementInstance = failwith "never" and set (v : SVGElementInstance) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.x)"); CompiledName("x42")>]
            member __.x with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height28")>]
            member __.height with get() : SVGAnimatedLength = failwith "never" and set (v : SVGAnimatedLength) : unit = failwith "never"




    type SVGViewElement with 

            [<FunScript.JSEmitInline("({0}.viewTarget)"); CompiledName("viewTarget")>]
            member __.viewTarget with get() : SVGStringList = failwith "never" and set (v : SVGStringList) : unit = failwith "never"




    type SVGZoomAndPan with 

            [<FunScript.JSEmitInline("({0}.zoomAndPan)"); CompiledName("zoomAndPan")>]
            member __.zoomAndPan with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ZOOMANDPAN_MAGNIFY)"); CompiledName("SVG_ZOOMANDPAN_MAGNIFY")>]
            member __.SVG_ZOOMANDPAN_MAGNIFY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ZOOMANDPAN_UNKNOWN)"); CompiledName("SVG_ZOOMANDPAN_UNKNOWN")>]
            member __.SVG_ZOOMANDPAN_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SVG_ZOOMANDPAN_DISABLE)"); CompiledName("SVG_ZOOMANDPAN_DISABLE")>]
            member __.SVG_ZOOMANDPAN_DISABLE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SVGZoomEvent with 

            [<FunScript.JSEmitInline("({0}.zoomRectScreen)"); CompiledName("zoomRectScreen")>]
            member __.zoomRectScreen with get() : SVGRect = failwith "never" and set (v : SVGRect) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousScale)"); CompiledName("previousScale")>]
            member __.previousScale with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.newScale)"); CompiledName("newScale")>]
            member __.newScale with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousTranslate)"); CompiledName("previousTranslate")>]
            member __.previousTranslate with get() : SVGPoint = failwith "never" and set (v : SVGPoint) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.newTranslate)"); CompiledName("newTranslate")>]
            member __.newTranslate with get() : SVGPoint = failwith "never" and set (v : SVGPoint) : unit = failwith "never"




    type Screen with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width32")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deviceXDPI)"); CompiledName("deviceXDPI")>]
            member __.deviceXDPI with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.fontSmoothingEnabled)"); CompiledName("fontSmoothingEnabled")>]
            member __.fontSmoothingEnabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bufferDepth)"); CompiledName("bufferDepth")>]
            member __.bufferDepth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.logicalXDPI)"); CompiledName("logicalXDPI")>]
            member __.logicalXDPI with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.systemXDPI)"); CompiledName("systemXDPI")>]
            member __.systemXDPI with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.availHeight)"); CompiledName("availHeight")>]
            member __.availHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.height)"); CompiledName("height29")>]
            member __.height with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.logicalYDPI)"); CompiledName("logicalYDPI")>]
            member __.logicalYDPI with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.systemYDPI)"); CompiledName("systemYDPI")>]
            member __.systemYDPI with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.updateInterval)"); CompiledName("updateInterval")>]
            member __.updateInterval with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.colorDepth)"); CompiledName("colorDepth")>]
            member __.colorDepth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.availWidth)"); CompiledName("availWidth")>]
            member __.availWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deviceYDPI)"); CompiledName("deviceYDPI")>]
            member __.deviceYDPI with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelDepth)"); CompiledName("pixelDepth")>]
            member __.pixelDepth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msOrientation)"); CompiledName("msOrientation")>]
            member __.msOrientation with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsorientationchange)"); CompiledName("onmsorientationchange")>]
            member __.onmsorientationchange with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msLockOrientation({args}))"); CompiledName("msLockOrientation")>]
            member __.msLockOrientation(orientation : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.msLockOrientation({args}))"); CompiledName("msLockOrientation1")>]
            member __.msLockOrientation(orientations : array<string>) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.msUnlockOrientation())"); CompiledName("msUnlockOrientation")>]
            member __.msUnlockOrientation() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msorientationchange\", {args})"); CompiledName("addEventListener1395")>]
            member __.addEventListener_msorientationchange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1396")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type ScriptNotifyEvent with 

            [<FunScript.JSEmitInline("({0}.value)"); CompiledName("value16")>]
            member __.value with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.callingUri)"); CompiledName("callingUri")>]
            member __.callingUri with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type Selection with 

            [<FunScript.JSEmitInline("({0}.isCollapsed)"); CompiledName("isCollapsed")>]
            member __.isCollapsed with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.anchorNode)"); CompiledName("anchorNode")>]
            member __.anchorNode with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.focusNode)"); CompiledName("focusNode")>]
            member __.focusNode with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.anchorOffset)"); CompiledName("anchorOffset")>]
            member __.anchorOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.focusOffset)"); CompiledName("focusOffset")>]
            member __.focusOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rangeCount)"); CompiledName("rangeCount")>]
            member __.rangeCount with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addRange({args}))"); CompiledName("addRange")>]
            member __.addRange(range : Range) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.collapseToEnd())"); CompiledName("collapseToEnd")>]
            member __.collapseToEnd() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString18")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.selectAllChildren({args}))"); CompiledName("selectAllChildren")>]
            member __.selectAllChildren(parentNode : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getRangeAt({args}))"); CompiledName("getRangeAt")>]
            member __.getRangeAt(index : float) : Range = failwith "never"
            [<FunScript.JSEmitInline("({0}.collapse({args}))"); CompiledName("collapse1")>]
            member __.collapse(parentNode : Node, offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeAllRanges())"); CompiledName("removeAllRanges")>]
            member __.removeAllRanges() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.collapseToStart())"); CompiledName("collapseToStart")>]
            member __.collapseToStart() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteFromDocument())"); CompiledName("deleteFromDocument")>]
            member __.deleteFromDocument() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeRange({args}))"); CompiledName("removeRange")>]
            member __.removeRange(range : Range) : unit = failwith "never"




    type Set<'T> with 

            [<FunScript.JSEmitInline("({0}.add({args}))"); CompiledName("add6")>]
            member __.add(value : 'T) : Set<'T> = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear14")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.delete({args}))"); CompiledName("delete3")>]
            member __.delete(value : 'T) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.forEach({args}))"); CompiledName("forEach2")>]
            member __.forEach(callbackfn : System.Func<'T, 'T, Set<'T>, unit>, ?thisArg : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.has({args}))"); CompiledName("has1")>]
            member __.has(value : 'T) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.size)"); CompiledName("size6")>]
            member __.size with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type SourceBuffer with 

            [<FunScript.JSEmitInline("({0}.updating)"); CompiledName("updating")>]
            member __.updating with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendWindowStart)"); CompiledName("appendWindowStart")>]
            member __.appendWindowStart with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendWindowEnd)"); CompiledName("appendWindowEnd")>]
            member __.appendWindowEnd with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.buffered)"); CompiledName("buffered1")>]
            member __.buffered with get() : TimeRanges = failwith "never" and set (v : TimeRanges) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.timestampOffset)"); CompiledName("timestampOffset")>]
            member __.timestampOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.audioTracks)"); CompiledName("audioTracks1")>]
            member __.audioTracks with get() : AudioTrackList = failwith "never" and set (v : AudioTrackList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendBuffer({args}))"); CompiledName("appendBuffer")>]
            member __.appendBuffer(data : ArrayBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.remove({args}))"); CompiledName("remove4")>]
            member __.remove(start : float, _end : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abort())"); CompiledName("abort4")>]
            member __.abort() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.appendStream({args}))"); CompiledName("appendStream")>]
            member __.appendStream(stream : MSStream, ?maxSize : float) : unit = failwith "never"




    type SourceBufferList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length39")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item27")>]
            member __.item(index : float) : SourceBuffer = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item30")>]
            member __.Item with get(i : int) : SourceBuffer = failwith "never" and set (i : int) (v : SourceBuffer) : unit = failwith "never"




    type Storage with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length40")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getItem({args}))"); CompiledName("getItem6")>]
            member __.getItem(key : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item31")>]
            member __.Item with get(i : string) : obj = failwith "never" and set (i : string) (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setItem({args}))"); CompiledName("setItem")>]
            member __.setItem(key : string, data : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear15")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeItem({args}))"); CompiledName("removeItem6")>]
            member __.removeItem(key : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.key({args}))"); CompiledName("key3")>]
            member __.key(index : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item32")>]
            member __.Item with get(i : int) : string = failwith "never" and set (i : int) (v : string) : unit = failwith "never"




    type StorageEvent with 

            [<FunScript.JSEmitInline("({0}.oldValue)"); CompiledName("oldValue1")>]
            member __.oldValue with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.newValue)"); CompiledName("newValue1")>]
            member __.newValue with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.url)"); CompiledName("url2")>]
            member __.url with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.storageArea)"); CompiledName("storageArea")>]
            member __.storageArea with get() : Storage = failwith "never" and set (v : Storage) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.key)"); CompiledName("key4")>]
            member __.key with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initStorageEvent({args}))"); CompiledName("initStorageEvent")>]
            member __.initStorageEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, keyArg : string, oldValueArg : obj, newValueArg : obj, urlArg : string, storageAreaArg : Storage) : unit = failwith "never"




    type StoreExceptionsInformation with 

            [<FunScript.JSEmitInline("({0}.siteName)"); CompiledName("siteName")>]
            member __.siteName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.explanationString)"); CompiledName("explanationString")>]
            member __.explanationString with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.detailURI)"); CompiledName("detailURI")>]
            member __.detailURI with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type StoreSiteSpecificExceptionsInformation with 

            [<FunScript.JSEmitInline("({0}.arrayOfDomainStrings)"); CompiledName("arrayOfDomainStrings1")>]
            member __.arrayOfDomainStrings with get() : array<string> = failwith "never" and set (v : array<string>) : unit = failwith "never"




    type String with 

            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString19")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.charAt({args}))"); CompiledName("charAt")>]
            member __.charAt(pos : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.charCodeAt({args}))"); CompiledName("charCodeAt")>]
            member __.charCodeAt(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.concat())"); CompiledName("concat4")>]
            member __.concat() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.concat({args}))"); CompiledName("concat5")>]
            member __.concatOverload2([<System.ParamArray>] strings : array<string>) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.indexOf({args}))"); CompiledName("indexOf1")>]
            member __.indexOf(searchString : string, ?position : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastIndexOf({args}))"); CompiledName("lastIndexOf1")>]
            member __.lastIndexOf(searchString : string, ?position : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.localeCompare({args}))"); CompiledName("localeCompare")>]
            member __.localeCompare(that : string) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.match({args}))"); CompiledName("_match")>]
            member __._match(regexp : string) : RegExpMatchArray = failwith "never"
            [<FunScript.JSEmitInline("({0}.match({args}))"); CompiledName("_match1")>]
            member __._match(regexp : RegExp) : RegExpMatchArray = failwith "never"
            [<FunScript.JSEmitInline("({0}.replace({args}))"); CompiledName("replace1")>]
            member __.replace(searchValue : string, replaceValue : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.replace({args}))"); CompiledName("replace2")>]
            member __.replace(searchValue : string, replaceValue : System.Func<string, array<obj>, string>) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.replace({args}))"); CompiledName("replace3")>]
            member __.replace(searchValue : RegExp, replaceValue : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.replace({args}))"); CompiledName("replace4")>]
            member __.replace(searchValue : RegExp, replaceValue : System.Func<string, array<obj>, string>) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.search({args}))"); CompiledName("search3")>]
            member __.search(regexp : string) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.search({args}))"); CompiledName("search4")>]
            member __.search(regexp : RegExp) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.slice({args}))"); CompiledName("slice3")>]
            member __.slice(?start : float, ?_end : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.split({args}))"); CompiledName("split")>]
            member __.split(separator : string, ?limit : float) : array<string> = failwith "never"
            [<FunScript.JSEmitInline("({0}.split({args}))"); CompiledName("split1")>]
            member __.split(separator : RegExp, ?limit : float) : array<string> = failwith "never"
            [<FunScript.JSEmitInline("({0}.substring({args}))"); CompiledName("substring")>]
            member __.substring(start : float, ?_end : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLowerCase())"); CompiledName("toLowerCase")>]
            member __.toLowerCase() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleLowerCase())"); CompiledName("toLocaleLowerCase")>]
            member __.toLocaleLowerCase() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toUpperCase())"); CompiledName("toUpperCase")>]
            member __.toUpperCase() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toLocaleUpperCase())"); CompiledName("toLocaleUpperCase")>]
            member __.toLocaleUpperCase() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.trim())"); CompiledName("trim")>]
            member __.trim() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length41")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.substr({args}))"); CompiledName("substr")>]
            member __.substr(from : float, ?length : float) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item33")>]
            member __.Item with get(i : int) : string = failwith "never" and set (i : int) (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.localeCompare({args}))"); CompiledName("localeCompare1")>]
            member __.localeCompare(that : string, locales : array<string>, ?options : CollatorOptions) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.localeCompare({args}))"); CompiledName("localeCompare2")>]
            member __.localeCompare(that : string, locale : string, ?options : CollatorOptions) : float = failwith "never"




    type StyleMedia with 

            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type33")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.matchMedium({args}))"); CompiledName("matchMedium")>]
            member __.matchMedium(mediaquery : string) : bool = failwith "never"




    type StyleSheet with 

            [<FunScript.JSEmitInline("({0}.disabled)"); CompiledName("disabled1")>]
            member __.disabled with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ownerNode)"); CompiledName("ownerNode")>]
            member __.ownerNode with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentStyleSheet)"); CompiledName("parentStyleSheet1")>]
            member __.parentStyleSheet with get() : StyleSheet = failwith "never" and set (v : StyleSheet) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.href)"); CompiledName("href9")>]
            member __.href with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.media)"); CompiledName("media8")>]
            member __.media with get() : MediaList = failwith "never" and set (v : MediaList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type34")>]
            member __._type with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.title)"); CompiledName("title3")>]
            member __.title with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type StyleSheetList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length42")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item28")>]
            member __.item(?index : float) : StyleSheet = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item34")>]
            member __.Item with get(i : int) : StyleSheet = failwith "never" and set (i : int) (v : StyleSheet) : unit = failwith "never"




    type StyleSheetPageList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length43")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item29")>]
            member __.item(index : float) : CSSPageRule = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item35")>]
            member __.Item with get(i : int) : CSSPageRule = failwith "never" and set (i : int) (v : CSSPageRule) : unit = failwith "never"




    type SubtleCrypto with 

            [<FunScript.JSEmitInline("({0}.unwrapKey({args}))"); CompiledName("unwrapKey")>]
            member __.unwrapKey(wrappedKey : ArrayBufferView, keyAlgorithm : obj, keyEncryptionKey : Key, ?extractable : bool, ?keyUsages : array<string>) : KeyOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.encrypt({args}))"); CompiledName("encrypt")>]
            member __.encrypt(algorithm : obj, key : Key, ?buffer : ArrayBufferView) : CryptoOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.importKey({args}))"); CompiledName("importKey")>]
            member __.importKey(format : string, keyData : ArrayBufferView, algorithm : obj, ?extractable : bool, ?keyUsages : array<string>) : KeyOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.wrapKey({args}))"); CompiledName("wrapKey")>]
            member __.wrapKey(key : Key, keyEncryptionKey : Key, keyWrappingAlgorithm : obj) : KeyOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.verify({args}))"); CompiledName("verify")>]
            member __.verify(algorithm : obj, key : Key, signature : ArrayBufferView, ?buffer : ArrayBufferView) : CryptoOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.deriveKey({args}))"); CompiledName("deriveKey")>]
            member __.deriveKey(algorithm : obj, baseKey : Key, derivedKeyType : obj, ?extractable : bool, ?keyUsages : array<string>) : KeyOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.digest({args}))"); CompiledName("digest")>]
            member __.digest(algorithm : obj, ?buffer : ArrayBufferView) : CryptoOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.exportKey({args}))"); CompiledName("exportKey")>]
            member __.exportKey(format : string, key : Key) : KeyOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.generateKey({args}))"); CompiledName("generateKey")>]
            member __.generateKey(algorithm : obj, ?extractable : bool, ?keyUsages : array<string>) : KeyOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.sign({args}))"); CompiledName("sign")>]
            member __.sign(algorithm : obj, key : Key, ?buffer : ArrayBufferView) : CryptoOperation = failwith "never"
            [<FunScript.JSEmitInline("({0}.decrypt({args}))"); CompiledName("decrypt")>]
            member __.decrypt(algorithm : obj, key : Key, ?buffer : ArrayBufferView) : CryptoOperation = failwith "never"




    type Text with 

            [<FunScript.JSEmitInline("({0}.wholeText)"); CompiledName("wholeText")>]
            member __.wholeText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.splitText({args}))"); CompiledName("splitText")>]
            member __.splitText(offset : float) : Text = failwith "never"
            [<FunScript.JSEmitInline("({0}.replaceWholeText({args}))"); CompiledName("replaceWholeText")>]
            member __.replaceWholeText(content : string) : Text = failwith "never"




    type TextEvent with 

            [<FunScript.JSEmitInline("({0}.inputMethod)"); CompiledName("inputMethod")>]
            member __.inputMethod with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.data)"); CompiledName("data8")>]
            member __.data with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.locale)"); CompiledName("locale5")>]
            member __.locale with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initTextEvent({args}))"); CompiledName("initTextEvent")>]
            member __.initTextEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, dataArg : string, inputMethod : float, locale : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_KEYBOARD)"); CompiledName("DOM_INPUT_METHOD_KEYBOARD1")>]
            member __.DOM_INPUT_METHOD_KEYBOARD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_DROP)"); CompiledName("DOM_INPUT_METHOD_DROP1")>]
            member __.DOM_INPUT_METHOD_DROP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_IME)"); CompiledName("DOM_INPUT_METHOD_IME1")>]
            member __.DOM_INPUT_METHOD_IME with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_SCRIPT)"); CompiledName("DOM_INPUT_METHOD_SCRIPT1")>]
            member __.DOM_INPUT_METHOD_SCRIPT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_VOICE)"); CompiledName("DOM_INPUT_METHOD_VOICE1")>]
            member __.DOM_INPUT_METHOD_VOICE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_UNKNOWN)"); CompiledName("DOM_INPUT_METHOD_UNKNOWN1")>]
            member __.DOM_INPUT_METHOD_UNKNOWN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_PASTE)"); CompiledName("DOM_INPUT_METHOD_PASTE1")>]
            member __.DOM_INPUT_METHOD_PASTE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_HANDWRITING)"); CompiledName("DOM_INPUT_METHOD_HANDWRITING1")>]
            member __.DOM_INPUT_METHOD_HANDWRITING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_OPTION)"); CompiledName("DOM_INPUT_METHOD_OPTION1")>]
            member __.DOM_INPUT_METHOD_OPTION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_INPUT_METHOD_MULTIMODAL)"); CompiledName("DOM_INPUT_METHOD_MULTIMODAL1")>]
            member __.DOM_INPUT_METHOD_MULTIMODAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type TextMetrics with 

            [<FunScript.JSEmitInline("({0}.width)"); CompiledName("width33")>]
            member __.width with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type TextRange with 

            [<FunScript.JSEmitInline("({0}.boundingLeft)"); CompiledName("boundingLeft")>]
            member __.boundingLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.htmlText)"); CompiledName("htmlText")>]
            member __.htmlText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetLeft)"); CompiledName("offsetLeft1")>]
            member __.offsetLeft with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.boundingWidth)"); CompiledName("boundingWidth")>]
            member __.boundingWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.boundingHeight)"); CompiledName("boundingHeight")>]
            member __.boundingHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.boundingTop)"); CompiledName("boundingTop")>]
            member __.boundingTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text7")>]
            member __.text with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.offsetTop)"); CompiledName("offsetTop1")>]
            member __.offsetTop with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveToPoint({args}))"); CompiledName("moveToPoint")>]
            member __.moveToPoint(x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandValue({args}))"); CompiledName("queryCommandValue2")>]
            member __.queryCommandValue(cmdID : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getBookmark())"); CompiledName("getBookmark")>]
            member __.getBookmark() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.move({args}))"); CompiledName("move")>]
            member __.move(_unit : string, ?count : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandIndeterm({args}))"); CompiledName("queryCommandIndeterm2")>]
            member __.queryCommandIndeterm(cmdID : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollIntoView({args}))"); CompiledName("scrollIntoView2")>]
            member __.scrollIntoView(?fStart : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.findText({args}))"); CompiledName("findText")>]
            member __.findText(_string : string, ?count : float, ?flags : float) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.execCommand({args}))"); CompiledName("execCommand2")>]
            member __.execCommand(cmdID : string, ?showUI : bool, ?value : obj) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.getBoundingClientRect())"); CompiledName("getBoundingClientRect2")>]
            member __.getBoundingClientRect() : ClientRect = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveToBookmark({args}))"); CompiledName("moveToBookmark")>]
            member __.moveToBookmark(bookmark : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.isEqual({args}))"); CompiledName("isEqual")>]
            member __.isEqual(range : TextRange) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.duplicate())"); CompiledName("duplicate")>]
            member __.duplicate() : TextRange = failwith "never"
            [<FunScript.JSEmitInline("({0}.collapse({args}))"); CompiledName("collapse2")>]
            member __.collapse(?start : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandText({args}))"); CompiledName("queryCommandText2")>]
            member __.queryCommandText(cmdID : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.select())"); CompiledName("select4")>]
            member __.select() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pasteHTML({args}))"); CompiledName("pasteHTML")>]
            member __.pasteHTML(html : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.inRange({args}))"); CompiledName("inRange")>]
            member __.inRange(range : TextRange) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveEnd({args}))"); CompiledName("moveEnd")>]
            member __.moveEnd(_unit : string, ?count : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.getClientRects())"); CompiledName("getClientRects2")>]
            member __.getClientRects() : ClientRectList = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveStart({args}))"); CompiledName("moveStart")>]
            member __.moveStart(_unit : string, ?count : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentElement())"); CompiledName("parentElement1")>]
            member __.parentElement() : Element = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandState({args}))"); CompiledName("queryCommandState2")>]
            member __.queryCommandState(cmdID : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.compareEndPoints({args}))"); CompiledName("compareEndPoints")>]
            member __.compareEndPoints(how : string, sourceRange : TextRange) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.execCommandShowHelp({args}))"); CompiledName("execCommandShowHelp1")>]
            member __.execCommandShowHelp(cmdID : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.moveToElementText({args}))"); CompiledName("moveToElementText")>]
            member __.moveToElementText(element : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.expand({args}))"); CompiledName("expand")>]
            member __.expand(_unit : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandSupported({args}))"); CompiledName("queryCommandSupported2")>]
            member __.queryCommandSupported(cmdID : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.setEndPoint({args}))"); CompiledName("setEndPoint")>]
            member __.setEndPoint(how : string, sourceRange : TextRange) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.queryCommandEnabled({args}))"); CompiledName("queryCommandEnabled2")>]
            member __.queryCommandEnabled(cmdID : string) : bool = failwith "never"




    type TextRangeCollection with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length44")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item30")>]
            member __.item(index : float) : TextRange = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item36")>]
            member __.Item with get(i : int) : TextRange = failwith "never" and set (i : int) (v : TextRange) : unit = failwith "never"




    type TextTrack with 

            [<FunScript.JSEmitInline("({0}.language)"); CompiledName("language3")>]
            member __.language with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.mode)"); CompiledName("mode2")>]
            member __.mode with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState11")>]
            member __.readyState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.activeCues)"); CompiledName("activeCues")>]
            member __.activeCues with get() : TextTrackCueList = failwith "never" and set (v : TextTrackCueList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cues)"); CompiledName("cues")>]
            member __.cues with get() : TextTrackCueList = failwith "never" and set (v : TextTrackCueList) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncuechange)"); CompiledName("oncuechange1")>]
            member __.oncuechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.kind)"); CompiledName("kind2")>]
            member __.kind with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload9")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror15")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.label)"); CompiledName("label4")>]
            member __.label with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addCue({args}))"); CompiledName("addCue")>]
            member __.addCue(cue : TextTrackCue) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.removeCue({args}))"); CompiledName("removeCue")>]
            member __.removeCue(cue : TextTrackCue) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ERROR)"); CompiledName("ERROR5")>]
            member __.ERROR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHOWING)"); CompiledName("SHOWING1")>]
            member __.SHOWING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADING)"); CompiledName("LOADING5")>]
            member __.LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADED)"); CompiledName("LOADED3")>]
            member __.LOADED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NONE)"); CompiledName("NONE4")>]
            member __.NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIDDEN)"); CompiledName("HIDDEN1")>]
            member __.HIDDEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DISABLED)"); CompiledName("DISABLED1")>]
            member __.DISABLED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"cuechange\", {args})"); CompiledName("addEventListener1397")>]
            member __.addEventListener_cuechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1398")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1399")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1400")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type TextTrackCue with 

            [<FunScript.JSEmitInline("({0}.onenter)"); CompiledName("onenter")>]
            member __.onenter with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.track)"); CompiledName("track1")>]
            member __.track with get() : TextTrack = failwith "never" and set (v : TextTrack) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.endTime)"); CompiledName("endTime")>]
            member __.endTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.text)"); CompiledName("text8")>]
            member __.text with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pauseOnExit)"); CompiledName("pauseOnExit")>]
            member __.pauseOnExit with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.id)"); CompiledName("id4")>]
            member __.id with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.startTime)"); CompiledName("startTime1")>]
            member __.startTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onexit)"); CompiledName("onexit")>]
            member __.onexit with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCueAsHTML())"); CompiledName("getCueAsHTML")>]
            member __.getCueAsHTML() : DocumentFragment = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"enter\", {args})"); CompiledName("addEventListener1401")>]
            member __.addEventListener_enter(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"exit\", {args})"); CompiledName("addEventListener1402")>]
            member __.addEventListener_exit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1403")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type TextTrackCueList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length45")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item31")>]
            member __.item(index : float) : TextTrackCue = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item37")>]
            member __.Item with get(i : int) : TextTrackCue = failwith "never" and set (i : int) (v : TextTrackCue) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCueById({args}))"); CompiledName("getCueById")>]
            member __.getCueById(id : string) : TextTrackCue = failwith "never"




    type TextTrackList with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length46")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onaddtrack)"); CompiledName("onaddtrack1")>]
            member __.onaddtrack with get() : System.Func<TrackEvent, obj> = failwith "never" and set (v : System.Func<TrackEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.item({args}))"); CompiledName("item32")>]
            member __.item(index : float) : TextTrack = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item38")>]
            member __.Item with get(i : int) : TextTrack = failwith "never" and set (i : int) (v : TextTrack) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"addtrack\", {args})"); CompiledName("addEventListener1404")>]
            member __.addEventListener_addtrack(listener : System.Func<TrackEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1405")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type TimeRanges with 

            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length47")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.start({args}))"); CompiledName("start6")>]
            member __.start(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.end({args}))"); CompiledName("_end")>]
            member __._end(index : float) : float = failwith "never"




    type TrackEvent with 

            [<FunScript.JSEmitInline("({0}.track)"); CompiledName("track2")>]
            member __.track with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"




    type TransitionEvent with 

            [<FunScript.JSEmitInline("({0}.propertyName)"); CompiledName("propertyName1")>]
            member __.propertyName with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.elapsedTime)"); CompiledName("elapsedTime1")>]
            member __.elapsedTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initTransitionEvent({args}))"); CompiledName("initTransitionEvent")>]
            member __.initTransitionEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, propertyNameArg : string, elapsedTimeArg : float) : unit = failwith "never"




    type TreeWalker with 

            [<FunScript.JSEmitInline("({0}.whatToShow)"); CompiledName("whatToShow1")>]
            member __.whatToShow with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.filter)"); CompiledName("filter4")>]
            member __.filter with get() : NodeFilter = failwith "never" and set (v : NodeFilter) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.root)"); CompiledName("root1")>]
            member __.root with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.currentNode)"); CompiledName("currentNode")>]
            member __.currentNode with get() : Node = failwith "never" and set (v : Node) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.expandEntityReferences)"); CompiledName("expandEntityReferences1")>]
            member __.expandEntityReferences with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousSibling())"); CompiledName("previousSibling3")>]
            member __.previousSibling() : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.lastChild())"); CompiledName("lastChild2")>]
            member __.lastChild() : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.nextSibling())"); CompiledName("nextSibling3")>]
            member __.nextSibling() : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.nextNode())"); CompiledName("nextNode1")>]
            member __.nextNode() : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.parentNode())"); CompiledName("parentNode2")>]
            member __.parentNode() : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.firstChild())"); CompiledName("firstChild2")>]
            member __.firstChild() : Node = failwith "never"
            [<FunScript.JSEmitInline("({0}.previousNode())"); CompiledName("previousNode1")>]
            member __.previousNode() : Node = failwith "never"




    type UIEvent with 

            [<FunScript.JSEmitInline("({0}.detail)"); CompiledName("detail2")>]
            member __.detail with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.view)"); CompiledName("view1")>]
            member __.view with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initUIEvent({args}))"); CompiledName("initUIEvent")>]
            member __.initUIEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float) : unit = failwith "never"




    type URL with 

            [<FunScript.JSEmitInline("({0}.revokeObjectURL({args}))"); CompiledName("revokeObjectURL")>]
            member __.revokeObjectURL(url : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createObjectURL({args}))"); CompiledName("createObjectURL")>]
            member __.createObjectURL(_object : obj, ?options : ObjectURLOptions) : string = failwith "never"




    type Uint16Array with 

            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT13")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length48")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item39")>]
            member __.Item with get(i : int) : float = failwith "never" and set (i : int) (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get9")>]
            member __.get(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set17")>]
            member __.set(index : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set18")>]
            member __.set(array : Uint16Array, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set19")>]
            member __.set(array : array<float>, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subarray({args}))"); CompiledName("subarray5")>]
            member __.subarray(_begin : float, ?_end : float) : Uint16Array = failwith "never"




    type Uint32Array with 

            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT14")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length49")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item40")>]
            member __.Item with get(i : int) : float = failwith "never" and set (i : int) (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get10")>]
            member __.get(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set20")>]
            member __.set(index : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set21")>]
            member __.set(array : Uint32Array, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set22")>]
            member __.set(array : array<float>, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subarray({args}))"); CompiledName("subarray6")>]
            member __.subarray(_begin : float, ?_end : float) : Uint32Array = failwith "never"




    type Uint8Array with 

            [<FunScript.JSEmitInline("({0}.BYTES_PER_ELEMENT)"); CompiledName("BYTES_PER_ELEMENT15")>]
            member __.BYTES_PER_ELEMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length50")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}[{1}])"); CompiledName("Item41")>]
            member __.Item with get(i : int) : float = failwith "never" and set (i : int) (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get11")>]
            member __.get(index : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set23")>]
            member __.set(index : float, value : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set24")>]
            member __.set(array : Uint8Array, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set25")>]
            member __.set(array : array<float>, ?offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.subarray({args}))"); CompiledName("subarray7")>]
            member __.subarray(_begin : float, ?_end : float) : Uint8Array = failwith "never"




    type UnviewableContentIdentifiedEvent with 

            [<FunScript.JSEmitInline("({0}.referrer)"); CompiledName("referrer1")>]
            member __.referrer with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type ValidityState with 

            [<FunScript.JSEmitInline("({0}.customError)"); CompiledName("customError")>]
            member __.customError with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.valueMissing)"); CompiledName("valueMissing")>]
            member __.valueMissing with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stepMismatch)"); CompiledName("stepMismatch")>]
            member __.stepMismatch with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rangeUnderflow)"); CompiledName("rangeUnderflow")>]
            member __.rangeUnderflow with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rangeOverflow)"); CompiledName("rangeOverflow")>]
            member __.rangeOverflow with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.typeMismatch)"); CompiledName("typeMismatch")>]
            member __.typeMismatch with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.patternMismatch)"); CompiledName("patternMismatch")>]
            member __.patternMismatch with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.tooLong)"); CompiledName("tooLong")>]
            member __.tooLong with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.valid)"); CompiledName("valid")>]
            member __.valid with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type VideoPlaybackQuality with 

            [<FunScript.JSEmitInline("({0}.totalFrameDelay)"); CompiledName("totalFrameDelay")>]
            member __.totalFrameDelay with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.creationTime)"); CompiledName("creationTime")>]
            member __.creationTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.totalVideoFrames)"); CompiledName("totalVideoFrames")>]
            member __.totalVideoFrames with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.droppedVideoFrames)"); CompiledName("droppedVideoFrames")>]
            member __.droppedVideoFrames with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type WEBGL_compressed_texture_s3tc with 

            [<FunScript.JSEmitInline("({0}.COMPRESSED_RGBA_S3TC_DXT1_EXT)"); CompiledName("COMPRESSED_RGBA_S3TC_DXT1_EXT1")>]
            member __.COMPRESSED_RGBA_S3TC_DXT1_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_RGBA_S3TC_DXT5_EXT)"); CompiledName("COMPRESSED_RGBA_S3TC_DXT5_EXT1")>]
            member __.COMPRESSED_RGBA_S3TC_DXT5_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_RGBA_S3TC_DXT3_EXT)"); CompiledName("COMPRESSED_RGBA_S3TC_DXT3_EXT1")>]
            member __.COMPRESSED_RGBA_S3TC_DXT3_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_RGB_S3TC_DXT1_EXT)"); CompiledName("COMPRESSED_RGB_S3TC_DXT1_EXT1")>]
            member __.COMPRESSED_RGB_S3TC_DXT1_EXT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type WeakMap<'K, 'V> with 

            [<FunScript.JSEmitInline("({0}.clear())"); CompiledName("clear16")>]
            member __.clear() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.delete({args}))"); CompiledName("delete4")>]
            member __.delete(key : 'K) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.get({args}))"); CompiledName("get12")>]
            member __.get(key : 'K) : 'V = failwith "never"
            [<FunScript.JSEmitInline("({0}.has({args}))"); CompiledName("has2")>]
            member __.has(key : 'K) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.set({args}))"); CompiledName("set26")>]
            member __.set(key : 'K, value : 'V) : WeakMap<'K, 'V> = failwith "never"




    type WebGLActiveInfo with 

            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name34")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.type)"); CompiledName("_type35")>]
            member __._type with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.size)"); CompiledName("size7")>]
            member __.size with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type WebGLContextAttributes with 

            [<FunScript.JSEmitInline("({0}.alpha)"); CompiledName("alpha3")>]
            member __.alpha with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.depth)"); CompiledName("depth")>]
            member __.depth with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stencil)"); CompiledName("stencil")>]
            member __.stencil with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.antialias)"); CompiledName("antialias")>]
            member __.antialias with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.premultipliedAlpha)"); CompiledName("premultipliedAlpha")>]
            member __.premultipliedAlpha with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.preserveDrawingBuffer)"); CompiledName("preserveDrawingBuffer")>]
            member __.preserveDrawingBuffer with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"




    type WebGLContextEvent with 

            [<FunScript.JSEmitInline("({0}.statusMessage)"); CompiledName("statusMessage")>]
            member __.statusMessage with get() : string = failwith "never" and set (v : string) : unit = failwith "never"




    type WebGLRenderingContext with 

            [<FunScript.JSEmitInline("({0}.drawingBufferWidth)"); CompiledName("drawingBufferWidth")>]
            member __.drawingBufferWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.drawingBufferHeight)"); CompiledName("drawingBufferHeight")>]
            member __.drawingBufferHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.canvas)"); CompiledName("canvas1")>]
            member __.canvas with get() : HTMLCanvasElement = failwith "never" and set (v : HTMLCanvasElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUniformLocation({args}))"); CompiledName("getUniformLocation")>]
            member __.getUniformLocation(program : WebGLProgram, name : string) : WebGLUniformLocation = failwith "never"
            [<FunScript.JSEmitInline("({0}.bindTexture({args}))"); CompiledName("bindTexture")>]
            member __.bindTexture(target : float, texture : WebGLTexture) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bufferData({args}))"); CompiledName("bufferData")>]
            member __.bufferData(target : float, data : ArrayBufferView, usage : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bufferData({args}))"); CompiledName("bufferData1")>]
            member __.bufferData(target : float, data : ArrayBuffer, usage : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bufferData({args}))"); CompiledName("bufferData2")>]
            member __.bufferData(target : float, size : float, usage : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.depthMask({args}))"); CompiledName("depthMask")>]
            member __.depthMask(flag : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getUniform({args}))"); CompiledName("getUniform")>]
            member __.getUniform(program : WebGLProgram, location : WebGLUniformLocation) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib3fv({args}))"); CompiledName("vertexAttrib3fv")>]
            member __.vertexAttrib3fv(indx : float, values : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib3fv({args}))"); CompiledName("vertexAttrib3fv1")>]
            member __.vertexAttrib3fv(indx : float, values : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.linkProgram({args}))"); CompiledName("linkProgram")>]
            member __.linkProgram(program : WebGLProgram) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getSupportedExtensions())"); CompiledName("getSupportedExtensions")>]
            member __.getSupportedExtensions() : array<string> = failwith "never"
            [<FunScript.JSEmitInline("({0}.bufferSubData({args}))"); CompiledName("bufferSubData")>]
            member __.bufferSubData(target : float, offset : float, data : ArrayBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bufferSubData({args}))"); CompiledName("bufferSubData1")>]
            member __.bufferSubData(target : float, offset : float, data : ArrayBufferView) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttribPointer({args}))"); CompiledName("vertexAttribPointer")>]
            member __.vertexAttribPointer(indx : float, size : float, _type : float, normalized : bool, stride : float, offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.polygonOffset({args}))"); CompiledName("polygonOffset")>]
            member __.polygonOffset(factor : float, units : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.blendColor({args}))"); CompiledName("blendColor")>]
            member __.blendColor(red : float, green : float, blue : float, alpha : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createTexture())"); CompiledName("createTexture")>]
            member __.createTexture() : WebGLTexture = failwith "never"
            [<FunScript.JSEmitInline("({0}.hint({args}))"); CompiledName("hint")>]
            member __.hint(target : float, mode : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getVertexAttrib({args}))"); CompiledName("getVertexAttrib")>]
            member __.getVertexAttrib(index : float, pname : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.enableVertexAttribArray({args}))"); CompiledName("enableVertexAttribArray")>]
            member __.enableVertexAttribArray(index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.depthRange({args}))"); CompiledName("depthRange")>]
            member __.depthRange(zNear : float, zFar : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.cullFace({args}))"); CompiledName("cullFace")>]
            member __.cullFace(mode : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createFramebuffer())"); CompiledName("createFramebuffer")>]
            member __.createFramebuffer() : WebGLFramebuffer = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniformMatrix4fv({args}))"); CompiledName("uniformMatrix4fv")>]
            member __.uniformMatrix4fv(location : WebGLUniformLocation, transpose : bool, value : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniformMatrix4fv({args}))"); CompiledName("uniformMatrix4fv1")>]
            member __.uniformMatrix4fv(location : WebGLUniformLocation, transpose : bool, value : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.framebufferTexture2D({args}))"); CompiledName("framebufferTexture2D")>]
            member __.framebufferTexture2D(target : float, attachment : float, textarget : float, texture : WebGLTexture, level : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteFramebuffer({args}))"); CompiledName("deleteFramebuffer")>]
            member __.deleteFramebuffer(framebuffer : WebGLFramebuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.colorMask({args}))"); CompiledName("colorMask")>]
            member __.colorMask(red : bool, green : bool, blue : bool, alpha : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.compressedTexImage2D({args}))"); CompiledName("compressedTexImage2D")>]
            member __.compressedTexImage2D(target : float, level : float, internalformat : float, width : float, height : float, border : float, data : ArrayBufferView) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniformMatrix2fv({args}))"); CompiledName("uniformMatrix2fv")>]
            member __.uniformMatrix2fv(location : WebGLUniformLocation, transpose : bool, value : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniformMatrix2fv({args}))"); CompiledName("uniformMatrix2fv1")>]
            member __.uniformMatrix2fv(location : WebGLUniformLocation, transpose : bool, value : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getExtension({args}))"); CompiledName("getExtension")>]
            member __.getExtension(name : string) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.createProgram())"); CompiledName("createProgram")>]
            member __.createProgram() : WebGLProgram = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteShader({args}))"); CompiledName("deleteShader")>]
            member __.deleteShader(shader : WebGLShader) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAttachedShaders({args}))"); CompiledName("getAttachedShaders")>]
            member __.getAttachedShaders(program : WebGLProgram) : array<WebGLShader> = failwith "never"
            [<FunScript.JSEmitInline("({0}.enable({args}))"); CompiledName("enable")>]
            member __.enable(cap : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.blendEquation({args}))"); CompiledName("blendEquation")>]
            member __.blendEquation(mode : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texImage2D({args}))"); CompiledName("texImage2D")>]
            member __.texImage2D(target : float, level : float, internalformat : float, width : float, height : float, border : float, format : float, _type : float, pixels : ArrayBufferView) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texImage2D({args}))"); CompiledName("texImage2D1")>]
            member __.texImage2D(target : float, level : float, internalformat : float, format : float, _type : float, image : HTMLImageElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texImage2D({args}))"); CompiledName("texImage2D2")>]
            member __.texImage2D(target : float, level : float, internalformat : float, format : float, _type : float, canvas : HTMLCanvasElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texImage2D({args}))"); CompiledName("texImage2D3")>]
            member __.texImage2D(target : float, level : float, internalformat : float, format : float, _type : float, video : HTMLVideoElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texImage2D({args}))"); CompiledName("texImage2D4")>]
            member __.texImage2D(target : float, level : float, internalformat : float, format : float, _type : float, pixels : ImageData) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createBuffer())"); CompiledName("createBuffer")>]
            member __.createBuffer() : WebGLBuffer = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteTexture({args}))"); CompiledName("deleteTexture")>]
            member __.deleteTexture(texture : WebGLTexture) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.useProgram({args}))"); CompiledName("useProgram")>]
            member __.useProgram(program : WebGLProgram) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib2fv({args}))"); CompiledName("vertexAttrib2fv")>]
            member __.vertexAttrib2fv(indx : float, values : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib2fv({args}))"); CompiledName("vertexAttrib2fv1")>]
            member __.vertexAttrib2fv(indx : float, values : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.checkFramebufferStatus({args}))"); CompiledName("checkFramebufferStatus")>]
            member __.checkFramebufferStatus(target : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.frontFace({args}))"); CompiledName("frontFace")>]
            member __.frontFace(mode : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getBufferParameter({args}))"); CompiledName("getBufferParameter")>]
            member __.getBufferParameter(target : float, pname : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.texSubImage2D({args}))"); CompiledName("texSubImage2D")>]
            member __.texSubImage2D(target : float, level : float, xoffset : float, yoffset : float, width : float, height : float, format : float, _type : float, pixels : ArrayBufferView) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texSubImage2D({args}))"); CompiledName("texSubImage2D1")>]
            member __.texSubImage2D(target : float, level : float, xoffset : float, yoffset : float, format : float, _type : float, image : HTMLImageElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texSubImage2D({args}))"); CompiledName("texSubImage2D2")>]
            member __.texSubImage2D(target : float, level : float, xoffset : float, yoffset : float, format : float, _type : float, canvas : HTMLCanvasElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texSubImage2D({args}))"); CompiledName("texSubImage2D3")>]
            member __.texSubImage2D(target : float, level : float, xoffset : float, yoffset : float, format : float, _type : float, video : HTMLVideoElement) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texSubImage2D({args}))"); CompiledName("texSubImage2D4")>]
            member __.texSubImage2D(target : float, level : float, xoffset : float, yoffset : float, format : float, _type : float, pixels : ImageData) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.copyTexImage2D({args}))"); CompiledName("copyTexImage2D")>]
            member __.copyTexImage2D(target : float, level : float, internalformat : float, x : float, y : float, width : float, height : float, border : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getVertexAttribOffset({args}))"); CompiledName("getVertexAttribOffset")>]
            member __.getVertexAttribOffset(index : float, pname : float) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.disableVertexAttribArray({args}))"); CompiledName("disableVertexAttribArray")>]
            member __.disableVertexAttribArray(index : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.blendFunc({args}))"); CompiledName("blendFunc")>]
            member __.blendFunc(sfactor : float, dfactor : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.drawElements({args}))"); CompiledName("drawElements")>]
            member __.drawElements(mode : float, count : float, _type : float, offset : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isFramebuffer({args}))"); CompiledName("isFramebuffer")>]
            member __.isFramebuffer(framebuffer : WebGLFramebuffer) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform3iv({args}))"); CompiledName("uniform3iv")>]
            member __.uniform3iv(location : WebGLUniformLocation, v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform3iv({args}))"); CompiledName("uniform3iv1")>]
            member __.uniform3iv(location : WebGLUniformLocation, v : Int32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.lineWidth({args}))"); CompiledName("lineWidth1")>]
            member __.lineWidth(width : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getShaderInfoLog({args}))"); CompiledName("getShaderInfoLog")>]
            member __.getShaderInfoLog(shader : WebGLShader) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.getTexParameter({args}))"); CompiledName("getTexParameter")>]
            member __.getTexParameter(target : float, pname : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getParameter({args}))"); CompiledName("getParameter")>]
            member __.getParameter(pname : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getShaderPrecisionFormat({args}))"); CompiledName("getShaderPrecisionFormat")>]
            member __.getShaderPrecisionFormat(shadertype : float, precisiontype : float) : WebGLShaderPrecisionFormat = failwith "never"
            [<FunScript.JSEmitInline("({0}.getContextAttributes())"); CompiledName("getContextAttributes")>]
            member __.getContextAttributes() : WebGLContextAttributes = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib1f({args}))"); CompiledName("vertexAttrib1f")>]
            member __.vertexAttrib1f(indx : float, x : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bindFramebuffer({args}))"); CompiledName("bindFramebuffer")>]
            member __.bindFramebuffer(target : float, framebuffer : WebGLFramebuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.compressedTexSubImage2D({args}))"); CompiledName("compressedTexSubImage2D")>]
            member __.compressedTexSubImage2D(target : float, level : float, xoffset : float, yoffset : float, width : float, height : float, format : float, data : ArrayBufferView) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isContextLost())"); CompiledName("isContextLost")>]
            member __.isContextLost() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform1iv({args}))"); CompiledName("uniform1iv")>]
            member __.uniform1iv(location : WebGLUniformLocation, v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform1iv({args}))"); CompiledName("uniform1iv1")>]
            member __.uniform1iv(location : WebGLUniformLocation, v : Int32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getRenderbufferParameter({args}))"); CompiledName("getRenderbufferParameter")>]
            member __.getRenderbufferParameter(target : float, pname : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform2fv({args}))"); CompiledName("uniform2fv")>]
            member __.uniform2fv(location : WebGLUniformLocation, v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform2fv({args}))"); CompiledName("uniform2fv1")>]
            member __.uniform2fv(location : WebGLUniformLocation, v : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isTexture({args}))"); CompiledName("isTexture")>]
            member __.isTexture(texture : WebGLTexture) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.getError())"); CompiledName("getError")>]
            member __.getError() : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.shaderSource({args}))"); CompiledName("shaderSource")>]
            member __.shaderSource(shader : WebGLShader, source : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteRenderbuffer({args}))"); CompiledName("deleteRenderbuffer")>]
            member __.deleteRenderbuffer(renderbuffer : WebGLRenderbuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stencilMask({args}))"); CompiledName("stencilMask")>]
            member __.stencilMask(mask : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bindBuffer({args}))"); CompiledName("bindBuffer")>]
            member __.bindBuffer(target : float, buffer : WebGLBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAttribLocation({args}))"); CompiledName("getAttribLocation")>]
            member __.getAttribLocation(program : WebGLProgram, name : string) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform3i({args}))"); CompiledName("uniform3i")>]
            member __.uniform3i(location : WebGLUniformLocation, x : float, y : float, z : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.blendEquationSeparate({args}))"); CompiledName("blendEquationSeparate")>]
            member __.blendEquationSeparate(modeRGB : float, modeAlpha : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clear({args}))"); CompiledName("clear17")>]
            member __.clear(mask : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.blendFuncSeparate({args}))"); CompiledName("blendFuncSeparate")>]
            member __.blendFuncSeparate(srcRGB : float, dstRGB : float, srcAlpha : float, dstAlpha : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stencilFuncSeparate({args}))"); CompiledName("stencilFuncSeparate")>]
            member __.stencilFuncSeparate(face : float, func : float, _ref : float, mask : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readPixels({args}))"); CompiledName("readPixels")>]
            member __.readPixels(x : float, y : float, width : float, height : float, format : float, _type : float, pixels : ArrayBufferView) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scissor({args}))"); CompiledName("scissor")>]
            member __.scissor(x : float, y : float, width : float, height : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform2i({args}))"); CompiledName("uniform2i")>]
            member __.uniform2i(location : WebGLUniformLocation, x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getActiveAttrib({args}))"); CompiledName("getActiveAttrib")>]
            member __.getActiveAttrib(program : WebGLProgram, index : float) : WebGLActiveInfo = failwith "never"
            [<FunScript.JSEmitInline("({0}.getShaderSource({args}))"); CompiledName("getShaderSource")>]
            member __.getShaderSource(shader : WebGLShader) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.generateMipmap({args}))"); CompiledName("generateMipmap")>]
            member __.generateMipmap(target : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bindAttribLocation({args}))"); CompiledName("bindAttribLocation")>]
            member __.bindAttribLocation(program : WebGLProgram, index : float, name : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform1fv({args}))"); CompiledName("uniform1fv")>]
            member __.uniform1fv(location : WebGLUniformLocation, v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform1fv({args}))"); CompiledName("uniform1fv1")>]
            member __.uniform1fv(location : WebGLUniformLocation, v : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform2iv({args}))"); CompiledName("uniform2iv")>]
            member __.uniform2iv(location : WebGLUniformLocation, v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform2iv({args}))"); CompiledName("uniform2iv1")>]
            member __.uniform2iv(location : WebGLUniformLocation, v : Int32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stencilOp({args}))"); CompiledName("stencilOp")>]
            member __.stencilOp(fail : float, zfail : float, zpass : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform4fv({args}))"); CompiledName("uniform4fv")>]
            member __.uniform4fv(location : WebGLUniformLocation, v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform4fv({args}))"); CompiledName("uniform4fv1")>]
            member __.uniform4fv(location : WebGLUniformLocation, v : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib1fv({args}))"); CompiledName("vertexAttrib1fv")>]
            member __.vertexAttrib1fv(indx : float, values : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib1fv({args}))"); CompiledName("vertexAttrib1fv1")>]
            member __.vertexAttrib1fv(indx : float, values : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.flush())"); CompiledName("flush")>]
            member __.flush() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform4f({args}))"); CompiledName("uniform4f")>]
            member __.uniform4f(location : WebGLUniformLocation, x : float, y : float, z : float, w : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteProgram({args}))"); CompiledName("deleteProgram")>]
            member __.deleteProgram(program : WebGLProgram) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isRenderbuffer({args}))"); CompiledName("isRenderbuffer")>]
            member __.isRenderbuffer(renderbuffer : WebGLRenderbuffer) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform1i({args}))"); CompiledName("uniform1i")>]
            member __.uniform1i(location : WebGLUniformLocation, x : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getProgramParameter({args}))"); CompiledName("getProgramParameter")>]
            member __.getProgramParameter(program : WebGLProgram, pname : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.getActiveUniform({args}))"); CompiledName("getActiveUniform")>]
            member __.getActiveUniform(program : WebGLProgram, index : float) : WebGLActiveInfo = failwith "never"
            [<FunScript.JSEmitInline("({0}.stencilFunc({args}))"); CompiledName("stencilFunc")>]
            member __.stencilFunc(func : float, _ref : float, mask : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pixelStorei({args}))"); CompiledName("pixelStorei")>]
            member __.pixelStorei(pname : float, param : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.disable({args}))"); CompiledName("disable")>]
            member __.disable(cap : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib4fv({args}))"); CompiledName("vertexAttrib4fv")>]
            member __.vertexAttrib4fv(indx : float, values : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib4fv({args}))"); CompiledName("vertexAttrib4fv1")>]
            member __.vertexAttrib4fv(indx : float, values : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.createRenderbuffer())"); CompiledName("createRenderbuffer")>]
            member __.createRenderbuffer() : WebGLRenderbuffer = failwith "never"
            [<FunScript.JSEmitInline("({0}.isBuffer({args}))"); CompiledName("isBuffer")>]
            member __.isBuffer(buffer : WebGLBuffer) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.stencilOpSeparate({args}))"); CompiledName("stencilOpSeparate")>]
            member __.stencilOpSeparate(face : float, fail : float, zfail : float, zpass : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getFramebufferAttachmentParameter({args}))"); CompiledName("getFramebufferAttachmentParameter")>]
            member __.getFramebufferAttachmentParameter(target : float, attachment : float, pname : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform4i({args}))"); CompiledName("uniform4i")>]
            member __.uniform4i(location : WebGLUniformLocation, x : float, y : float, z : float, w : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.sampleCoverage({args}))"); CompiledName("sampleCoverage")>]
            member __.sampleCoverage(value : float, invert : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.depthFunc({args}))"); CompiledName("depthFunc")>]
            member __.depthFunc(func : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texParameterf({args}))"); CompiledName("texParameterf")>]
            member __.texParameterf(target : float, pname : float, param : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib3f({args}))"); CompiledName("vertexAttrib3f")>]
            member __.vertexAttrib3f(indx : float, x : float, y : float, z : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.drawArrays({args}))"); CompiledName("drawArrays")>]
            member __.drawArrays(mode : float, first : float, count : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.texParameteri({args}))"); CompiledName("texParameteri")>]
            member __.texParameteri(target : float, pname : float, param : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib4f({args}))"); CompiledName("vertexAttrib4f")>]
            member __.vertexAttrib4f(indx : float, x : float, y : float, z : float, w : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getShaderParameter({args}))"); CompiledName("getShaderParameter")>]
            member __.getShaderParameter(shader : WebGLShader, pname : float) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearDepth({args}))"); CompiledName("clearDepth")>]
            member __.clearDepth(depth : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.activeTexture({args}))"); CompiledName("activeTexture")>]
            member __.activeTexture(texture : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.viewport({args}))"); CompiledName("viewport1")>]
            member __.viewport(x : float, y : float, width : float, height : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.detachShader({args}))"); CompiledName("detachShader")>]
            member __.detachShader(program : WebGLProgram, shader : WebGLShader) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform1f({args}))"); CompiledName("uniform1f")>]
            member __.uniform1f(location : WebGLUniformLocation, x : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniformMatrix3fv({args}))"); CompiledName("uniformMatrix3fv")>]
            member __.uniformMatrix3fv(location : WebGLUniformLocation, transpose : bool, value : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniformMatrix3fv({args}))"); CompiledName("uniformMatrix3fv1")>]
            member __.uniformMatrix3fv(location : WebGLUniformLocation, transpose : bool, value : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deleteBuffer({args}))"); CompiledName("deleteBuffer")>]
            member __.deleteBuffer(buffer : WebGLBuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.copyTexSubImage2D({args}))"); CompiledName("copyTexSubImage2D")>]
            member __.copyTexSubImage2D(target : float, level : float, xoffset : float, yoffset : float, x : float, y : float, width : float, height : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform3fv({args}))"); CompiledName("uniform3fv")>]
            member __.uniform3fv(location : WebGLUniformLocation, v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform3fv({args}))"); CompiledName("uniform3fv1")>]
            member __.uniform3fv(location : WebGLUniformLocation, v : Float32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.stencilMaskSeparate({args}))"); CompiledName("stencilMaskSeparate")>]
            member __.stencilMaskSeparate(face : float, mask : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.attachShader({args}))"); CompiledName("attachShader")>]
            member __.attachShader(program : WebGLProgram, shader : WebGLShader) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.compileShader({args}))"); CompiledName("compileShader")>]
            member __.compileShader(shader : WebGLShader) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearColor({args}))"); CompiledName("clearColor")>]
            member __.clearColor(red : float, green : float, blue : float, alpha : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isShader({args}))"); CompiledName("isShader")>]
            member __.isShader(shader : WebGLShader) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearStencil({args}))"); CompiledName("clearStencil")>]
            member __.clearStencil(s : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.framebufferRenderbuffer({args}))"); CompiledName("framebufferRenderbuffer")>]
            member __.framebufferRenderbuffer(target : float, attachment : float, renderbuffertarget : float, renderbuffer : WebGLRenderbuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.finish())"); CompiledName("finish1")>]
            member __.finish() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform2f({args}))"); CompiledName("uniform2f")>]
            member __.uniform2f(location : WebGLUniformLocation, x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.renderbufferStorage({args}))"); CompiledName("renderbufferStorage")>]
            member __.renderbufferStorage(target : float, internalformat : float, width : float, height : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform3f({args}))"); CompiledName("uniform3f")>]
            member __.uniform3f(location : WebGLUniformLocation, x : float, y : float, z : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getProgramInfoLog({args}))"); CompiledName("getProgramInfoLog")>]
            member __.getProgramInfoLog(program : WebGLProgram) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.validateProgram({args}))"); CompiledName("validateProgram")>]
            member __.validateProgram(program : WebGLProgram) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isEnabled({args}))"); CompiledName("isEnabled")>]
            member __.isEnabled(cap : float) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.vertexAttrib2f({args}))"); CompiledName("vertexAttrib2f")>]
            member __.vertexAttrib2f(indx : float, x : float, y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.isProgram({args}))"); CompiledName("isProgram")>]
            member __.isProgram(program : WebGLProgram) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.createShader({args}))"); CompiledName("createShader")>]
            member __.createShader(_type : float) : WebGLShader = failwith "never"
            [<FunScript.JSEmitInline("({0}.bindRenderbuffer({args}))"); CompiledName("bindRenderbuffer")>]
            member __.bindRenderbuffer(target : float, renderbuffer : WebGLRenderbuffer) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform4iv({args}))"); CompiledName("uniform4iv")>]
            member __.uniform4iv(location : WebGLUniformLocation, v : array<float>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.uniform4iv({args}))"); CompiledName("uniform4iv1")>]
            member __.uniform4iv(location : WebGLUniformLocation, v : Int32Array) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_FUNC)"); CompiledName("DEPTH_FUNC1")>]
            member __.DEPTH_FUNC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_COMPONENT16)"); CompiledName("DEPTH_COMPONENT161")>]
            member __.DEPTH_COMPONENT16 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.REPLACE)"); CompiledName("REPLACE1")>]
            member __.REPLACE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.REPEAT)"); CompiledName("REPEAT1")>]
            member __.REPEAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_ENABLED)"); CompiledName("VERTEX_ATTRIB_ARRAY_ENABLED1")>]
            member __.VERTEX_ATTRIB_ARRAY_ENABLED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_INCOMPLETE_DIMENSIONS)"); CompiledName("FRAMEBUFFER_INCOMPLETE_DIMENSIONS1")>]
            member __.FRAMEBUFFER_INCOMPLETE_DIMENSIONS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BUFFER_BIT)"); CompiledName("STENCIL_BUFFER_BIT1")>]
            member __.STENCIL_BUFFER_BIT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERER)"); CompiledName("RENDERER1")>]
            member __.RENDERER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_REF)"); CompiledName("STENCIL_BACK_REF1")>]
            member __.STENCIL_BACK_REF with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE26)"); CompiledName("TEXTURE261")>]
            member __.TEXTURE26 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGB565)"); CompiledName("RGB5651")>]
            member __.RGB565 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DITHER)"); CompiledName("DITHER1")>]
            member __.DITHER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CONSTANT_COLOR)"); CompiledName("CONSTANT_COLOR1")>]
            member __.CONSTANT_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.GENERATE_MIPMAP_HINT)"); CompiledName("GENERATE_MIPMAP_HINT1")>]
            member __.GENERATE_MIPMAP_HINT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POINTS)"); CompiledName("POINTS1")>]
            member __.POINTS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DECR)"); CompiledName("DECR1")>]
            member __.DECR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INT_VEC3)"); CompiledName("INT_VEC31")>]
            member __.INT_VEC3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE28)"); CompiledName("TEXTURE281")>]
            member __.TEXTURE28 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_CONSTANT_ALPHA)"); CompiledName("ONE_MINUS_CONSTANT_ALPHA1")>]
            member __.ONE_MINUS_CONSTANT_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BACK)"); CompiledName("BACK1")>]
            member __.BACK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_STENCIL_SIZE)"); CompiledName("RENDERBUFFER_STENCIL_SIZE1")>]
            member __.RENDERBUFFER_STENCIL_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNPACK_FLIP_Y_WEBGL)"); CompiledName("UNPACK_FLIP_Y_WEBGL1")>]
            member __.UNPACK_FLIP_Y_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND)"); CompiledName("BLEND1")>]
            member __.BLEND with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE9)"); CompiledName("TEXTURE91")>]
            member __.TEXTURE9 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ARRAY_BUFFER_BINDING)"); CompiledName("ARRAY_BUFFER_BINDING1")>]
            member __.ARRAY_BUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VIEWPORT_DIMS)"); CompiledName("MAX_VIEWPORT_DIMS1")>]
            member __.MAX_VIEWPORT_DIMS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_FRAMEBUFFER_OPERATION)"); CompiledName("INVALID_FRAMEBUFFER_OPERATION1")>]
            member __.INVALID_FRAMEBUFFER_OPERATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE)"); CompiledName("TEXTURE32")>]
            member __.TEXTURE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE0)"); CompiledName("TEXTURE01")>]
            member __.TEXTURE0 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE31)"); CompiledName("TEXTURE311")>]
            member __.TEXTURE31 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE24)"); CompiledName("TEXTURE241")>]
            member __.TEXTURE24 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIGH_INT)"); CompiledName("HIGH_INT1")>]
            member __.HIGH_INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_BINDING)"); CompiledName("RENDERBUFFER_BINDING1")>]
            member __.RENDERBUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_COLOR)"); CompiledName("BLEND_COLOR1")>]
            member __.BLEND_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FASTEST)"); CompiledName("FASTEST1")>]
            member __.FASTEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_WRITEMASK)"); CompiledName("STENCIL_WRITEMASK1")>]
            member __.STENCIL_WRITEMASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALIASED_POINT_SIZE_RANGE)"); CompiledName("ALIASED_POINT_SIZE_RANGE1")>]
            member __.ALIASED_POINT_SIZE_RANGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE12)"); CompiledName("TEXTURE121")>]
            member __.TEXTURE12 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DST_ALPHA)"); CompiledName("DST_ALPHA1")>]
            member __.DST_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_EQUATION_RGB)"); CompiledName("BLEND_EQUATION_RGB1")>]
            member __.BLEND_EQUATION_RGB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_COMPLETE)"); CompiledName("FRAMEBUFFER_COMPLETE1")>]
            member __.FRAMEBUFFER_COMPLETE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEAREST_MIPMAP_NEAREST)"); CompiledName("NEAREST_MIPMAP_NEAREST1")>]
            member __.NEAREST_MIPMAP_NEAREST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_SIZE)"); CompiledName("VERTEX_ATTRIB_ARRAY_SIZE1")>]
            member __.VERTEX_ATTRIB_ARRAY_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE3)"); CompiledName("TEXTURE33")>]
            member __.TEXTURE3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_WRITEMASK)"); CompiledName("DEPTH_WRITEMASK1")>]
            member __.DEPTH_WRITEMASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CONTEXT_LOST_WEBGL)"); CompiledName("CONTEXT_LOST_WEBGL1")>]
            member __.CONTEXT_LOST_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_VALUE)"); CompiledName("INVALID_VALUE1")>]
            member __.INVALID_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_MAG_FILTER)"); CompiledName("TEXTURE_MAG_FILTER1")>]
            member __.TEXTURE_MAG_FILTER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_CONSTANT_COLOR)"); CompiledName("ONE_MINUS_CONSTANT_COLOR1")>]
            member __.ONE_MINUS_CONSTANT_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_SRC_ALPHA)"); CompiledName("ONE_MINUS_SRC_ALPHA1")>]
            member __.ONE_MINUS_SRC_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_POSITIVE_Z)"); CompiledName("TEXTURE_CUBE_MAP_POSITIVE_Z1")>]
            member __.TEXTURE_CUBE_MAP_POSITIVE_Z with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NOTEQUAL)"); CompiledName("NOTEQUAL1")>]
            member __.NOTEQUAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALPHA)"); CompiledName("ALPHA1")>]
            member __.ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_STENCIL)"); CompiledName("DEPTH_STENCIL1")>]
            member __.DEPTH_STENCIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VERTEX_UNIFORM_VECTORS)"); CompiledName("MAX_VERTEX_UNIFORM_VECTORS1")>]
            member __.MAX_VERTEX_UNIFORM_VECTORS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_COMPONENT)"); CompiledName("DEPTH_COMPONENT1")>]
            member __.DEPTH_COMPONENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_RED_SIZE)"); CompiledName("RENDERBUFFER_RED_SIZE1")>]
            member __.RENDERBUFFER_RED_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE20)"); CompiledName("TEXTURE201")>]
            member __.TEXTURE20 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RED_BITS)"); CompiledName("RED_BITS1")>]
            member __.RED_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_BLUE_SIZE)"); CompiledName("RENDERBUFFER_BLUE_SIZE1")>]
            member __.RENDERBUFFER_BLUE_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SCISSOR_BOX)"); CompiledName("SCISSOR_BOX1")>]
            member __.SCISSOR_BOX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VENDOR)"); CompiledName("VENDOR1")>]
            member __.VENDOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRONT_AND_BACK)"); CompiledName("FRONT_AND_BACK1")>]
            member __.FRONT_AND_BACK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CONSTANT_ALPHA)"); CompiledName("CONSTANT_ALPHA1")>]
            member __.CONSTANT_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)"); CompiledName("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING1")>]
            member __.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEAREST)"); CompiledName("NEAREST1")>]
            member __.NEAREST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CULL_FACE)"); CompiledName("CULL_FACE1")>]
            member __.CULL_FACE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALIASED_LINE_WIDTH_RANGE)"); CompiledName("ALIASED_LINE_WIDTH_RANGE1")>]
            member __.ALIASED_LINE_WIDTH_RANGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE19)"); CompiledName("TEXTURE191")>]
            member __.TEXTURE19 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRONT)"); CompiledName("FRONT1")>]
            member __.FRONT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_CLEAR_VALUE)"); CompiledName("DEPTH_CLEAR_VALUE1")>]
            member __.DEPTH_CLEAR_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.GREEN_BITS)"); CompiledName("GREEN_BITS1")>]
            member __.GREEN_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE29)"); CompiledName("TEXTURE291")>]
            member __.TEXTURE29 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE23)"); CompiledName("TEXTURE231")>]
            member __.TEXTURE23 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_RENDERBUFFER_SIZE)"); CompiledName("MAX_RENDERBUFFER_SIZE1")>]
            member __.MAX_RENDERBUFFER_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_ATTACHMENT)"); CompiledName("STENCIL_ATTACHMENT1")>]
            member __.STENCIL_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE27)"); CompiledName("TEXTURE271")>]
            member __.TEXTURE27 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BOOL_VEC2)"); CompiledName("BOOL_VEC21")>]
            member __.BOOL_VEC2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.OUT_OF_MEMORY)"); CompiledName("OUT_OF_MEMORY1")>]
            member __.OUT_OF_MEMORY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MIRRORED_REPEAT)"); CompiledName("MIRRORED_REPEAT1")>]
            member __.MIRRORED_REPEAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POLYGON_OFFSET_UNITS)"); CompiledName("POLYGON_OFFSET_UNITS1")>]
            member __.POLYGON_OFFSET_UNITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_MIN_FILTER)"); CompiledName("TEXTURE_MIN_FILTER1")>]
            member __.TEXTURE_MIN_FILTER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_PASS_DEPTH_PASS)"); CompiledName("STENCIL_BACK_PASS_DEPTH_PASS1")>]
            member __.STENCIL_BACK_PASS_DEPTH_PASS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINE_LOOP)"); CompiledName("LINE_LOOP1")>]
            member __.LINE_LOOP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_MAT3)"); CompiledName("FLOAT_MAT31")>]
            member __.FLOAT_MAT3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE14)"); CompiledName("TEXTURE141")>]
            member __.TEXTURE14 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINEAR)"); CompiledName("LINEAR1")>]
            member __.LINEAR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGB5_A1)"); CompiledName("RGB5_A11")>]
            member __.RGB5_A1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_SRC_COLOR)"); CompiledName("ONE_MINUS_SRC_COLOR1")>]
            member __.ONE_MINUS_SRC_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_COVERAGE_INVERT)"); CompiledName("SAMPLE_COVERAGE_INVERT1")>]
            member __.SAMPLE_COVERAGE_INVERT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DONT_CARE)"); CompiledName("DONT_CARE1")>]
            member __.DONT_CARE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_BINDING)"); CompiledName("FRAMEBUFFER_BINDING1")>]
            member __.FRAMEBUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_ALPHA_SIZE)"); CompiledName("RENDERBUFFER_ALPHA_SIZE1")>]
            member __.RENDERBUFFER_ALPHA_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_REF)"); CompiledName("STENCIL_REF1")>]
            member __.STENCIL_REF with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ZERO)"); CompiledName("ZERO1")>]
            member __.ZERO with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DECR_WRAP)"); CompiledName("DECR_WRAP1")>]
            member __.DECR_WRAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_COVERAGE)"); CompiledName("SAMPLE_COVERAGE1")>]
            member __.SAMPLE_COVERAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_FUNC)"); CompiledName("STENCIL_BACK_FUNC1")>]
            member __.STENCIL_BACK_FUNC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE30)"); CompiledName("TEXTURE301")>]
            member __.TEXTURE30 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VIEWPORT)"); CompiledName("VIEWPORT1")>]
            member __.VIEWPORT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BITS)"); CompiledName("STENCIL_BITS1")>]
            member __.STENCIL_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT)"); CompiledName("FLOAT1")>]
            member __.FLOAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COLOR_WRITEMASK)"); CompiledName("COLOR_WRITEMASK1")>]
            member __.COLOR_WRITEMASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_COVERAGE_VALUE)"); CompiledName("SAMPLE_COVERAGE_VALUE1")>]
            member __.SAMPLE_COVERAGE_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_NEGATIVE_Y)"); CompiledName("TEXTURE_CUBE_MAP_NEGATIVE_Y1")>]
            member __.TEXTURE_CUBE_MAP_NEGATIVE_Y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_FAIL)"); CompiledName("STENCIL_BACK_FAIL1")>]
            member __.STENCIL_BACK_FAIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_MAT4)"); CompiledName("FLOAT_MAT41")>]
            member __.FLOAT_MAT4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_SHORT_4_4_4_4)"); CompiledName("UNSIGNED_SHORT_4_4_4_41")>]
            member __.UNSIGNED_SHORT_4_4_4_4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE6)"); CompiledName("TEXTURE61")>]
            member __.TEXTURE6 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_WIDTH)"); CompiledName("RENDERBUFFER_WIDTH1")>]
            member __.RENDERBUFFER_WIDTH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGBA4)"); CompiledName("RGBA41")>]
            member __.RGBA4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALWAYS)"); CompiledName("ALWAYS1")>]
            member __.ALWAYS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_EQUATION_ALPHA)"); CompiledName("BLEND_EQUATION_ALPHA1")>]
            member __.BLEND_EQUATION_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COLOR_BUFFER_BIT)"); CompiledName("COLOR_BUFFER_BIT1")>]
            member __.COLOR_BUFFER_BIT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP)"); CompiledName("TEXTURE_CUBE_MAP1")>]
            member __.TEXTURE_CUBE_MAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_BUFFER_BIT)"); CompiledName("DEPTH_BUFFER_BIT1")>]
            member __.DEPTH_BUFFER_BIT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_CLEAR_VALUE)"); CompiledName("STENCIL_CLEAR_VALUE1")>]
            member __.STENCIL_CLEAR_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_EQUATION)"); CompiledName("BLEND_EQUATION1")>]
            member __.BLEND_EQUATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_GREEN_SIZE)"); CompiledName("RENDERBUFFER_GREEN_SIZE1")>]
            member __.RENDERBUFFER_GREEN_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEAREST_MIPMAP_LINEAR)"); CompiledName("NEAREST_MIPMAP_LINEAR1")>]
            member __.NEAREST_MIPMAP_LINEAR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_TYPE)"); CompiledName("VERTEX_ATTRIB_ARRAY_TYPE1")>]
            member __.VERTEX_ATTRIB_ARRAY_TYPE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INCR_WRAP)"); CompiledName("INCR_WRAP1")>]
            member __.INCR_WRAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_DST_COLOR)"); CompiledName("ONE_MINUS_DST_COLOR1")>]
            member __.ONE_MINUS_DST_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HIGH_FLOAT)"); CompiledName("HIGH_FLOAT1")>]
            member __.HIGH_FLOAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BYTE)"); CompiledName("BYTE1")>]
            member __.BYTE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRONT_FACE)"); CompiledName("FRONT_FACE1")>]
            member __.FRONT_FACE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_ALPHA_TO_COVERAGE)"); CompiledName("SAMPLE_ALPHA_TO_COVERAGE1")>]
            member __.SAMPLE_ALPHA_TO_COVERAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CCW)"); CompiledName("CCW1")>]
            member __.CCW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE13)"); CompiledName("TEXTURE131")>]
            member __.TEXTURE13 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VERTEX_ATTRIBS)"); CompiledName("MAX_VERTEX_ATTRIBS1")>]
            member __.MAX_VERTEX_ATTRIBS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VERTEX_TEXTURE_IMAGE_UNITS)"); CompiledName("MAX_VERTEX_TEXTURE_IMAGE_UNITS1")>]
            member __.MAX_VERTEX_TEXTURE_IMAGE_UNITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_WRAP_T)"); CompiledName("TEXTURE_WRAP_T1")>]
            member __.TEXTURE_WRAP_T with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNPACK_PREMULTIPLY_ALPHA_WEBGL)"); CompiledName("UNPACK_PREMULTIPLY_ALPHA_WEBGL1")>]
            member __.UNPACK_PREMULTIPLY_ALPHA_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_VEC2)"); CompiledName("FLOAT_VEC21")>]
            member __.FLOAT_VEC2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LUMINANCE)"); CompiledName("LUMINANCE1")>]
            member __.LUMINANCE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.GREATER)"); CompiledName("GREATER1")>]
            member __.GREATER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INT_VEC2)"); CompiledName("INT_VEC21")>]
            member __.INT_VEC2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VALIDATE_STATUS)"); CompiledName("VALIDATE_STATUS1")>]
            member __.VALIDATE_STATUS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER)"); CompiledName("FRAMEBUFFER1")>]
            member __.FRAMEBUFFER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_UNSUPPORTED)"); CompiledName("FRAMEBUFFER_UNSUPPORTED1")>]
            member __.FRAMEBUFFER_UNSUPPORTED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE5)"); CompiledName("TEXTURE51")>]
            member __.TEXTURE5 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FUNC_SUBTRACT)"); CompiledName("FUNC_SUBTRACT1")>]
            member __.FUNC_SUBTRACT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_DST_ALPHA)"); CompiledName("BLEND_DST_ALPHA1")>]
            member __.BLEND_DST_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLER_CUBE)"); CompiledName("SAMPLER_CUBE1")>]
            member __.SAMPLER_CUBE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE_MINUS_DST_ALPHA)"); CompiledName("ONE_MINUS_DST_ALPHA1")>]
            member __.ONE_MINUS_DST_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LESS)"); CompiledName("LESS1")>]
            member __.LESS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_POSITIVE_X)"); CompiledName("TEXTURE_CUBE_MAP_POSITIVE_X1")>]
            member __.TEXTURE_CUBE_MAP_POSITIVE_X with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLUE_BITS)"); CompiledName("BLUE_BITS1")>]
            member __.BLUE_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_TEST)"); CompiledName("DEPTH_TEST1")>]
            member __.DEPTH_TEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_STRIDE)"); CompiledName("VERTEX_ATTRIB_ARRAY_STRIDE1")>]
            member __.VERTEX_ATTRIB_ARRAY_STRIDE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DELETE_STATUS)"); CompiledName("DELETE_STATUS1")>]
            member __.DELETE_STATUS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE18)"); CompiledName("TEXTURE181")>]
            member __.TEXTURE18 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POLYGON_OFFSET_FACTOR)"); CompiledName("POLYGON_OFFSET_FACTOR1")>]
            member __.POLYGON_OFFSET_FACTOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_INT)"); CompiledName("UNSIGNED_INT1")>]
            member __.UNSIGNED_INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_2D)"); CompiledName("TEXTURE_2D1")>]
            member __.TEXTURE_2D with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DST_COLOR)"); CompiledName("DST_COLOR1")>]
            member __.DST_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_MAT2)"); CompiledName("FLOAT_MAT21")>]
            member __.FLOAT_MAT2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPRESSED_TEXTURE_FORMATS)"); CompiledName("COMPRESSED_TEXTURE_FORMATS1")>]
            member __.COMPRESSED_TEXTURE_FORMATS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_FRAGMENT_UNIFORM_VECTORS)"); CompiledName("MAX_FRAGMENT_UNIFORM_VECTORS1")>]
            member __.MAX_FRAGMENT_UNIFORM_VECTORS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_STENCIL_ATTACHMENT)"); CompiledName("DEPTH_STENCIL_ATTACHMENT1")>]
            member __.DEPTH_STENCIL_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LUMINANCE_ALPHA)"); CompiledName("LUMINANCE_ALPHA1")>]
            member __.LUMINANCE_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CW)"); CompiledName("CW1")>]
            member __.CW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_NORMALIZED)"); CompiledName("VERTEX_ATTRIB_ARRAY_NORMALIZED1")>]
            member __.VERTEX_ATTRIB_ARRAY_NORMALIZED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_NEGATIVE_Z)"); CompiledName("TEXTURE_CUBE_MAP_NEGATIVE_Z1")>]
            member __.TEXTURE_CUBE_MAP_NEGATIVE_Z with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINEAR_MIPMAP_LINEAR)"); CompiledName("LINEAR_MIPMAP_LINEAR1")>]
            member __.LINEAR_MIPMAP_LINEAR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BUFFER_SIZE)"); CompiledName("BUFFER_SIZE1")>]
            member __.BUFFER_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLE_BUFFERS)"); CompiledName("SAMPLE_BUFFERS1")>]
            member __.SAMPLE_BUFFERS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE15)"); CompiledName("TEXTURE151")>]
            member __.TEXTURE15 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ACTIVE_TEXTURE)"); CompiledName("ACTIVE_TEXTURE1")>]
            member __.ACTIVE_TEXTURE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_SHADER)"); CompiledName("VERTEX_SHADER1")>]
            member __.VERTEX_SHADER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE22)"); CompiledName("TEXTURE221")>]
            member __.TEXTURE22 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERTEX_ATTRIB_ARRAY_POINTER)"); CompiledName("VERTEX_ATTRIB_ARRAY_POINTER1")>]
            member __.VERTEX_ATTRIB_ARRAY_POINTER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INCR)"); CompiledName("INCR1")>]
            member __.INCR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COMPILE_STATUS)"); CompiledName("COMPILE_STATUS1")>]
            member __.COMPILE_STATUS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_COMBINED_TEXTURE_IMAGE_UNITS)"); CompiledName("MAX_COMBINED_TEXTURE_IMAGE_UNITS1")>]
            member __.MAX_COMBINED_TEXTURE_IMAGE_UNITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE7)"); CompiledName("TEXTURE71")>]
            member __.TEXTURE7 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_SHORT_5_5_5_1)"); CompiledName("UNSIGNED_SHORT_5_5_5_11")>]
            member __.UNSIGNED_SHORT_5_5_5_1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_BITS)"); CompiledName("DEPTH_BITS1")>]
            member __.DEPTH_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGBA)"); CompiledName("RGBA1")>]
            member __.RGBA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TRIANGLE_STRIP)"); CompiledName("TRIANGLE_STRIP1")>]
            member __.TRIANGLE_STRIP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COLOR_CLEAR_VALUE)"); CompiledName("COLOR_CLEAR_VALUE1")>]
            member __.COLOR_CLEAR_VALUE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BROWSER_DEFAULT_WEBGL)"); CompiledName("BROWSER_DEFAULT_WEBGL1")>]
            member __.BROWSER_DEFAULT_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_ENUM)"); CompiledName("INVALID_ENUM1")>]
            member __.INVALID_ENUM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SCISSOR_TEST)"); CompiledName("SCISSOR_TEST1")>]
            member __.SCISSOR_TEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINE_STRIP)"); CompiledName("LINE_STRIP1")>]
            member __.LINE_STRIP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_INCOMPLETE_ATTACHMENT)"); CompiledName("FRAMEBUFFER_INCOMPLETE_ATTACHMENT1")>]
            member __.FRAMEBUFFER_INCOMPLETE_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_FUNC)"); CompiledName("STENCIL_FUNC1")>]
            member __.STENCIL_FUNC with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)"); CompiledName("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME1")>]
            member __.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_HEIGHT)"); CompiledName("RENDERBUFFER_HEIGHT1")>]
            member __.RENDERBUFFER_HEIGHT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE8)"); CompiledName("TEXTURE81")>]
            member __.TEXTURE8 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TRIANGLES)"); CompiledName("TRIANGLES1")>]
            member __.TRIANGLES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)"); CompiledName("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE1")>]
            member __.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_VALUE_MASK)"); CompiledName("STENCIL_BACK_VALUE_MASK1")>]
            member __.STENCIL_BACK_VALUE_MASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE25)"); CompiledName("TEXTURE251")>]
            member __.TEXTURE25 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER)"); CompiledName("RENDERBUFFER1")>]
            member __.RENDERBUFFER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LEQUAL)"); CompiledName("LEQUAL1")>]
            member __.LEQUAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE1)"); CompiledName("TEXTURE110")>]
            member __.TEXTURE1 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_INDEX8)"); CompiledName("STENCIL_INDEX81")>]
            member __.STENCIL_INDEX8 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FUNC_ADD)"); CompiledName("FUNC_ADD1")>]
            member __.FUNC_ADD with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_FAIL)"); CompiledName("STENCIL_FAIL1")>]
            member __.STENCIL_FAIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_SRC_ALPHA)"); CompiledName("BLEND_SRC_ALPHA1")>]
            member __.BLEND_SRC_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BOOL)"); CompiledName("BOOL1")>]
            member __.BOOL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ALPHA_BITS)"); CompiledName("ALPHA_BITS1")>]
            member __.ALPHA_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOW_INT)"); CompiledName("LOW_INT1")>]
            member __.LOW_INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE10)"); CompiledName("TEXTURE101")>]
            member __.TEXTURE10 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SRC_COLOR)"); CompiledName("SRC_COLOR1")>]
            member __.SRC_COLOR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_VARYING_VECTORS)"); CompiledName("MAX_VARYING_VECTORS1")>]
            member __.MAX_VARYING_VECTORS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_DST_RGB)"); CompiledName("BLEND_DST_RGB1")>]
            member __.BLEND_DST_RGB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_BINDING_CUBE_MAP)"); CompiledName("TEXTURE_BINDING_CUBE_MAP1")>]
            member __.TEXTURE_BINDING_CUBE_MAP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_INDEX)"); CompiledName("STENCIL_INDEX1")>]
            member __.STENCIL_INDEX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_BINDING_2D)"); CompiledName("TEXTURE_BINDING_2D1")>]
            member __.TEXTURE_BINDING_2D with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIUM_INT)"); CompiledName("MEDIUM_INT1")>]
            member __.MEDIUM_INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHADER_TYPE)"); CompiledName("SHADER_TYPE1")>]
            member __.SHADER_TYPE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.POLYGON_OFFSET_FILL)"); CompiledName("POLYGON_OFFSET_FILL1")>]
            member __.POLYGON_OFFSET_FILL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DYNAMIC_DRAW)"); CompiledName("DYNAMIC_DRAW1")>]
            member __.DYNAMIC_DRAW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE4)"); CompiledName("TEXTURE41")>]
            member __.TEXTURE4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_PASS_DEPTH_FAIL)"); CompiledName("STENCIL_BACK_PASS_DEPTH_FAIL1")>]
            member __.STENCIL_BACK_PASS_DEPTH_FAIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STREAM_DRAW)"); CompiledName("STREAM_DRAW1")>]
            member __.STREAM_DRAW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_CUBE_MAP_TEXTURE_SIZE)"); CompiledName("MAX_CUBE_MAP_TEXTURE_SIZE1")>]
            member __.MAX_CUBE_MAP_TEXTURE_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE17)"); CompiledName("TEXTURE171")>]
            member __.TEXTURE17 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TRIANGLE_FAN)"); CompiledName("TRIANGLE_FAN1")>]
            member __.TRIANGLE_FAN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNPACK_ALIGNMENT)"); CompiledName("UNPACK_ALIGNMENT1")>]
            member __.UNPACK_ALIGNMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CURRENT_PROGRAM)"); CompiledName("CURRENT_PROGRAM1")>]
            member __.CURRENT_PROGRAM with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINES)"); CompiledName("LINES1")>]
            member __.LINES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVALID_OPERATION)"); CompiledName("INVALID_OPERATION1")>]
            member __.INVALID_OPERATION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)"); CompiledName("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT1")>]
            member __.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINEAR_MIPMAP_NEAREST)"); CompiledName("LINEAR_MIPMAP_NEAREST1")>]
            member __.LINEAR_MIPMAP_NEAREST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CLAMP_TO_EDGE)"); CompiledName("CLAMP_TO_EDGE1")>]
            member __.CLAMP_TO_EDGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_DEPTH_SIZE)"); CompiledName("RENDERBUFFER_DEPTH_SIZE1")>]
            member __.RENDERBUFFER_DEPTH_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_WRAP_S)"); CompiledName("TEXTURE_WRAP_S1")>]
            member __.TEXTURE_WRAP_S with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ELEMENT_ARRAY_BUFFER)"); CompiledName("ELEMENT_ARRAY_BUFFER1")>]
            member __.ELEMENT_ARRAY_BUFFER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_SHORT_5_6_5)"); CompiledName("UNSIGNED_SHORT_5_6_51")>]
            member __.UNSIGNED_SHORT_5_6_5 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ACTIVE_UNIFORMS)"); CompiledName("ACTIVE_UNIFORMS1")>]
            member __.ACTIVE_UNIFORMS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_VEC3)"); CompiledName("FLOAT_VEC31")>]
            member __.FLOAT_VEC3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NO_ERROR)"); CompiledName("NO_ERROR1")>]
            member __.NO_ERROR with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ATTACHED_SHADERS)"); CompiledName("ATTACHED_SHADERS1")>]
            member __.ATTACHED_SHADERS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_ATTACHMENT)"); CompiledName("DEPTH_ATTACHMENT1")>]
            member __.DEPTH_ATTACHMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE11)"); CompiledName("TEXTURE111")>]
            member __.TEXTURE11 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_TEST)"); CompiledName("STENCIL_TEST1")>]
            member __.STENCIL_TEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ONE)"); CompiledName("ONE1")>]
            member __.ONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE)"); CompiledName("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE1")>]
            member __.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STATIC_DRAW)"); CompiledName("STATIC_DRAW1")>]
            member __.STATIC_DRAW with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.GEQUAL)"); CompiledName("GEQUAL1")>]
            member __.GEQUAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BOOL_VEC4)"); CompiledName("BOOL_VEC41")>]
            member __.BOOL_VEC4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.COLOR_ATTACHMENT0)"); CompiledName("COLOR_ATTACHMENT01")>]
            member __.COLOR_ATTACHMENT0 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.PACK_ALIGNMENT)"); CompiledName("PACK_ALIGNMENT1")>]
            member __.PACK_ALIGNMENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_TEXTURE_SIZE)"); CompiledName("MAX_TEXTURE_SIZE1")>]
            member __.MAX_TEXTURE_SIZE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_PASS_DEPTH_FAIL)"); CompiledName("STENCIL_PASS_DEPTH_FAIL1")>]
            member __.STENCIL_PASS_DEPTH_FAIL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CULL_FACE_MODE)"); CompiledName("CULL_FACE_MODE1")>]
            member __.CULL_FACE_MODE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE16)"); CompiledName("TEXTURE161")>]
            member __.TEXTURE16 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_BACK_WRITEMASK)"); CompiledName("STENCIL_BACK_WRITEMASK1")>]
            member __.STENCIL_BACK_WRITEMASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SRC_ALPHA)"); CompiledName("SRC_ALPHA1")>]
            member __.SRC_ALPHA with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_SHORT)"); CompiledName("UNSIGNED_SHORT1")>]
            member __.UNSIGNED_SHORT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE21)"); CompiledName("TEXTURE211")>]
            member __.TEXTURE21 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FUNC_REVERSE_SUBTRACT)"); CompiledName("FUNC_REVERSE_SUBTRACT1")>]
            member __.FUNC_REVERSE_SUBTRACT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHADING_LANGUAGE_VERSION)"); CompiledName("SHADING_LANGUAGE_VERSION1")>]
            member __.SHADING_LANGUAGE_VERSION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.EQUAL)"); CompiledName("EQUAL1")>]
            member __.EQUAL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)"); CompiledName("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL1")>]
            member __.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BOOL_VEC3)"); CompiledName("BOOL_VEC31")>]
            member __.BOOL_VEC3 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLER_2D)"); CompiledName("SAMPLER_2D1")>]
            member __.SAMPLER_2D with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_NEGATIVE_X)"); CompiledName("TEXTURE_CUBE_MAP_NEGATIVE_X1")>]
            member __.TEXTURE_CUBE_MAP_NEGATIVE_X with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MAX_TEXTURE_IMAGE_UNITS)"); CompiledName("MAX_TEXTURE_IMAGE_UNITS1")>]
            member __.MAX_TEXTURE_IMAGE_UNITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE_CUBE_MAP_POSITIVE_Y)"); CompiledName("TEXTURE_CUBE_MAP_POSITIVE_Y1")>]
            member __.TEXTURE_CUBE_MAP_POSITIVE_Y with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RENDERBUFFER_INTERNAL_FORMAT)"); CompiledName("RENDERBUFFER_INTERNAL_FORMAT1")>]
            member __.RENDERBUFFER_INTERNAL_FORMAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_VALUE_MASK)"); CompiledName("STENCIL_VALUE_MASK1")>]
            member __.STENCIL_VALUE_MASK with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ELEMENT_ARRAY_BUFFER_BINDING)"); CompiledName("ELEMENT_ARRAY_BUFFER_BINDING1")>]
            member __.ELEMENT_ARRAY_BUFFER_BINDING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ARRAY_BUFFER)"); CompiledName("ARRAY_BUFFER1")>]
            member __.ARRAY_BUFFER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DEPTH_RANGE)"); CompiledName("DEPTH_RANGE1")>]
            member __.DEPTH_RANGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NICEST)"); CompiledName("NICEST1")>]
            member __.NICEST with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ACTIVE_ATTRIBUTES)"); CompiledName("ACTIVE_ATTRIBUTES1")>]
            member __.ACTIVE_ATTRIBUTES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NEVER)"); CompiledName("NEVER1")>]
            member __.NEVER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FLOAT_VEC4)"); CompiledName("FLOAT_VEC41")>]
            member __.FLOAT_VEC4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CURRENT_VERTEX_ATTRIB)"); CompiledName("CURRENT_VERTEX_ATTRIB1")>]
            member __.CURRENT_VERTEX_ATTRIB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.STENCIL_PASS_DEPTH_PASS)"); CompiledName("STENCIL_PASS_DEPTH_PASS1")>]
            member __.STENCIL_PASS_DEPTH_PASS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INVERT)"); CompiledName("INVERT1")>]
            member __.INVERT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINK_STATUS)"); CompiledName("LINK_STATUS1")>]
            member __.LINK_STATUS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.RGB)"); CompiledName("RGB1")>]
            member __.RGB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INT_VEC4)"); CompiledName("INT_VEC41")>]
            member __.INT_VEC4 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.TEXTURE2)"); CompiledName("TEXTURE210")>]
            member __.TEXTURE2 with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNPACK_COLORSPACE_CONVERSION_WEBGL)"); CompiledName("UNPACK_COLORSPACE_CONVERSION_WEBGL1")>]
            member __.UNPACK_COLORSPACE_CONVERSION_WEBGL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.MEDIUM_FLOAT)"); CompiledName("MEDIUM_FLOAT1")>]
            member __.MEDIUM_FLOAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SRC_ALPHA_SATURATE)"); CompiledName("SRC_ALPHA_SATURATE1")>]
            member __.SRC_ALPHA_SATURATE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BUFFER_USAGE)"); CompiledName("BUFFER_USAGE1")>]
            member __.BUFFER_USAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SHORT)"); CompiledName("SHORT1")>]
            member __.SHORT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.NONE)"); CompiledName("NONE5")>]
            member __.NONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSIGNED_BYTE)"); CompiledName("UNSIGNED_BYTE1")>]
            member __.UNSIGNED_BYTE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.INT)"); CompiledName("INT1")>]
            member __.INT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SUBPIXEL_BITS)"); CompiledName("SUBPIXEL_BITS1")>]
            member __.SUBPIXEL_BITS with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.KEEP)"); CompiledName("KEEP1")>]
            member __.KEEP with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.SAMPLES)"); CompiledName("SAMPLES1")>]
            member __.SAMPLES with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.FRAGMENT_SHADER)"); CompiledName("FRAGMENT_SHADER1")>]
            member __.FRAGMENT_SHADER with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LINE_WIDTH)"); CompiledName("LINE_WIDTH1")>]
            member __.LINE_WIDTH with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.BLEND_SRC_RGB)"); CompiledName("BLEND_SRC_RGB1")>]
            member __.BLEND_SRC_RGB with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOW_FLOAT)"); CompiledName("LOW_FLOAT1")>]
            member __.LOW_FLOAT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.VERSION)"); CompiledName("VERSION1")>]
            member __.VERSION with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type WebGLShaderPrecisionFormat with 

            [<FunScript.JSEmitInline("({0}.rangeMin)"); CompiledName("rangeMin")>]
            member __.rangeMin with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.rangeMax)"); CompiledName("rangeMax")>]
            member __.rangeMax with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.precision)"); CompiledName("precision")>]
            member __.precision with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type WebSocket with 

            [<FunScript.JSEmitInline("({0}.protocol)"); CompiledName("protocol4")>]
            member __.protocol with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState12")>]
            member __.readyState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.bufferedAmount)"); CompiledName("bufferedAmount")>]
            member __.bufferedAmount with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onopen)"); CompiledName("onopen")>]
            member __.onopen with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.extensions)"); CompiledName("extensions")>]
            member __.extensions with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmessage)"); CompiledName("onmessage4")>]
            member __.onmessage with get() : System.Func<MessageEvent, obj> = failwith "never" and set (v : System.Func<MessageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onclose)"); CompiledName("onclose")>]
            member __.onclose with get() : System.Func<CloseEvent, obj> = failwith "never" and set (v : System.Func<CloseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror16")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.binaryType)"); CompiledName("binaryType")>]
            member __.binaryType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.url)"); CompiledName("url3")>]
            member __.url with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.close({args}))"); CompiledName("close6")>]
            member __.close(?code : float, ?reason : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.send({args}))"); CompiledName("send")>]
            member __.send(data : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.OPEN)"); CompiledName("OPEN1")>]
            member __.OPEN with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CLOSING)"); CompiledName("CLOSING1")>]
            member __.CLOSING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CONNECTING)"); CompiledName("CONNECTING1")>]
            member __.CONNECTING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.CLOSED)"); CompiledName("CLOSED1")>]
            member __.CLOSED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"open\", {args})"); CompiledName("addEventListener1406")>]
            member __.addEventListener_open(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"message\", {args})"); CompiledName("addEventListener1407")>]
            member __.addEventListener_message(listener : System.Func<MessageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"close\", {args})"); CompiledName("addEventListener1408")>]
            member __.addEventListener_close(listener : System.Func<CloseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1409")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1410")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type WheelEvent with 

            [<FunScript.JSEmitInline("({0}.deltaZ)"); CompiledName("deltaZ")>]
            member __.deltaZ with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deltaX)"); CompiledName("deltaX")>]
            member __.deltaX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deltaMode)"); CompiledName("deltaMode")>]
            member __.deltaMode with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.deltaY)"); CompiledName("deltaY")>]
            member __.deltaY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.initWheelEvent({args}))"); CompiledName("initWheelEvent")>]
            member __.initWheelEvent(typeArg : string, canBubbleArg : bool, cancelableArg : bool, viewArg : Window, detailArg : float, screenXArg : float, screenYArg : float, clientXArg : float, clientYArg : float, buttonArg : float, relatedTargetArg : EventTarget, modifiersListArg : string, deltaXArg : float, deltaYArg : float, deltaZArg : float, deltaMode : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getCurrentPoint({args}))"); CompiledName("getCurrentPoint2")>]
            member __.getCurrentPoint(element : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_DELTA_PIXEL)"); CompiledName("DOM_DELTA_PIXEL1")>]
            member __.DOM_DELTA_PIXEL with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_DELTA_LINE)"); CompiledName("DOM_DELTA_LINE1")>]
            member __.DOM_DELTA_LINE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DOM_DELTA_PAGE)"); CompiledName("DOM_DELTA_PAGE1")>]
            member __.DOM_DELTA_PAGE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"




    type Window with 

            [<FunScript.JSEmitInline("({0}.ondragend)"); CompiledName("ondragend3")>]
            member __.ondragend with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeydown)"); CompiledName("onkeydown3")>]
            member __.onkeydown with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragover)"); CompiledName("ondragover3")>]
            member __.ondragover with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeyup)"); CompiledName("onkeyup3")>]
            member __.onkeyup with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onreset)"); CompiledName("onreset3")>]
            member __.onreset with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseup)"); CompiledName("onmouseup4")>]
            member __.onmouseup with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragstart)"); CompiledName("ondragstart3")>]
            member __.ondragstart with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondrag)"); CompiledName("ondrag3")>]
            member __.ondrag with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenX)"); CompiledName("screenX5")>]
            member __.screenX with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseover)"); CompiledName("onmouseover4")>]
            member __.onmouseover with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragleave)"); CompiledName("ondragleave3")>]
            member __.ondragleave with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.history)"); CompiledName("history1")>]
            member __.history with get() : History = failwith "never" and set (v : History) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pageXOffset)"); CompiledName("pageXOffset1")>]
            member __.pageXOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.name)"); CompiledName("name35")>]
            member __.name with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onafterprint)"); CompiledName("onafterprint3")>]
            member __.onafterprint with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpause)"); CompiledName("onpause3")>]
            member __.onpause with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeprint)"); CompiledName("onbeforeprint3")>]
            member __.onbeforeprint with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.top)"); CompiledName("top3")>]
            member __.top with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousedown)"); CompiledName("onmousedown4")>]
            member __.onmousedown with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onseeked)"); CompiledName("onseeked3")>]
            member __.onseeked with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.opener)"); CompiledName("opener1")>]
            member __.opener with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onclick)"); CompiledName("onclick4")>]
            member __.onclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.innerHeight)"); CompiledName("innerHeight1")>]
            member __.innerHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onwaiting)"); CompiledName("onwaiting3")>]
            member __.onwaiting with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ononline)"); CompiledName("ononline3")>]
            member __.ononline with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondurationchange)"); CompiledName("ondurationchange3")>]
            member __.ondurationchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frames)"); CompiledName("frames2")>]
            member __.frames with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onblur)"); CompiledName("onblur5")>]
            member __.onblur with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onemptied)"); CompiledName("onemptied3")>]
            member __.onemptied with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onseeking)"); CompiledName("onseeking3")>]
            member __.onseeking with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncanplay)"); CompiledName("oncanplay3")>]
            member __.oncanplay with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.outerWidth)"); CompiledName("outerWidth1")>]
            member __.outerWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstalled)"); CompiledName("onstalled3")>]
            member __.onstalled with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousemove)"); CompiledName("onmousemove4")>]
            member __.onmousemove with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.innerWidth)"); CompiledName("innerWidth1")>]
            member __.innerWidth with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onoffline)"); CompiledName("onoffline3")>]
            member __.onoffline with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.length)"); CompiledName("length51")>]
            member __.length with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screen)"); CompiledName("screen1")>]
            member __.screen with get() : Screen = failwith "never" and set (v : Screen) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onbeforeunload)"); CompiledName("onbeforeunload3")>]
            member __.onbeforeunload with get() : System.Func<BeforeUnloadEvent, obj> = failwith "never" and set (v : System.Func<BeforeUnloadEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onratechange)"); CompiledName("onratechange3")>]
            member __.onratechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onstorage)"); CompiledName("onstorage3")>]
            member __.onstorage with get() : System.Func<StorageEvent, obj> = failwith "never" and set (v : System.Func<StorageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadstart)"); CompiledName("onloadstart4")>]
            member __.onloadstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondragenter)"); CompiledName("ondragenter3")>]
            member __.ondragenter with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onsubmit)"); CompiledName("onsubmit3")>]
            member __.onsubmit with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.self)"); CompiledName("self1")>]
            member __.self with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.document)"); CompiledName("document3")>]
            member __.document with get() : Document = failwith "never" and set (v : Document) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress6")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondblclick)"); CompiledName("ondblclick4")>]
            member __.ondblclick with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.pageYOffset)"); CompiledName("pageYOffset1")>]
            member __.pageYOffset with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncontextmenu)"); CompiledName("oncontextmenu3")>]
            member __.oncontextmenu with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onchange)"); CompiledName("onchange4")>]
            member __.onchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadedmetadata)"); CompiledName("onloadedmetadata3")>]
            member __.onloadedmetadata with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onplay)"); CompiledName("onplay3")>]
            member __.onplay with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror17")>]
            member __.onerror with get() : ErrorEventHandlerDelegate = failwith "never" and set (v : ErrorEventHandlerDelegate) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onplaying)"); CompiledName("onplaying3")>]
            member __.onplaying with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.parent)"); CompiledName("parent1")>]
            member __.parent with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.location)"); CompiledName("location3")>]
            member __.location with get() : Location = failwith "never" and set (v : Location) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oncanplaythrough)"); CompiledName("oncanplaythrough3")>]
            member __.oncanplaythrough with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort8")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onreadystatechange)"); CompiledName("onreadystatechange4")>]
            member __.onreadystatechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.outerHeight)"); CompiledName("outerHeight1")>]
            member __.outerHeight with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onkeypress)"); CompiledName("onkeypress3")>]
            member __.onkeypress with get() : System.Func<KeyboardEvent, obj> = failwith "never" and set (v : System.Func<KeyboardEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.frameElement)"); CompiledName("frameElement1")>]
            member __.frameElement with get() : Element = failwith "never" and set (v : Element) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadeddata)"); CompiledName("onloadeddata3")>]
            member __.onloadeddata with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onsuspend)"); CompiledName("onsuspend3")>]
            member __.onsuspend with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.window)"); CompiledName("window1")>]
            member __.window with get() : Window = failwith "never" and set (v : Window) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onfocus)"); CompiledName("onfocus5")>]
            member __.onfocus with get() : System.Func<FocusEvent, obj> = failwith "never" and set (v : System.Func<FocusEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmessage)"); CompiledName("onmessage5")>]
            member __.onmessage with get() : System.Func<MessageEvent, obj> = failwith "never" and set (v : System.Func<MessageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ontimeupdate)"); CompiledName("ontimeupdate3")>]
            member __.ontimeupdate with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onresize)"); CompiledName("onresize5")>]
            member __.onresize with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onselect)"); CompiledName("onselect3")>]
            member __.onselect with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.navigator)"); CompiledName("navigator1")>]
            member __.navigator with get() : Navigator = failwith "never" and set (v : Navigator) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.styleMedia)"); CompiledName("styleMedia1")>]
            member __.styleMedia with get() : StyleMedia = failwith "never" and set (v : StyleMedia) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondrop)"); CompiledName("ondrop3")>]
            member __.ondrop with get() : System.Func<DragEvent, obj> = failwith "never" and set (v : System.Func<DragEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmouseout)"); CompiledName("onmouseout4")>]
            member __.onmouseout with get() : System.Func<MouseEvent, obj> = failwith "never" and set (v : System.Func<MouseEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onended)"); CompiledName("onended3")>]
            member __.onended with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onhashchange)"); CompiledName("onhashchange3")>]
            member __.onhashchange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onunload)"); CompiledName("onunload4")>]
            member __.onunload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onscroll)"); CompiledName("onscroll4")>]
            member __.onscroll with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.screenY)"); CompiledName("screenY5")>]
            member __.screenY with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmousewheel)"); CompiledName("onmousewheel3")>]
            member __.onmousewheel with get() : System.Func<MouseWheelEvent, obj> = failwith "never" and set (v : System.Func<MouseWheelEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload10")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onvolumechange)"); CompiledName("onvolumechange3")>]
            member __.onvolumechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.oninput)"); CompiledName("oninput3")>]
            member __.oninput with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.performance)"); CompiledName("performance1")>]
            member __.performance with get() : Performance = failwith "never" and set (v : Performance) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerdown)"); CompiledName("onmspointerdown3")>]
            member __.onmspointerdown with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.animationStartTime)"); CompiledName("animationStartTime1")>]
            member __.animationStartTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturedoubletap)"); CompiledName("onmsgesturedoubletap3")>]
            member __.onmsgesturedoubletap with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerhover)"); CompiledName("onmspointerhover3")>]
            member __.onmspointerhover with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturehold)"); CompiledName("onmsgesturehold3")>]
            member __.onmsgesturehold with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointermove)"); CompiledName("onmspointermove3")>]
            member __.onmspointermove with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturechange)"); CompiledName("onmsgesturechange3")>]
            member __.onmsgesturechange with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturestart)"); CompiledName("onmsgesturestart3")>]
            member __.onmsgesturestart with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointercancel)"); CompiledName("onmspointercancel3")>]
            member __.onmspointercancel with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgestureend)"); CompiledName("onmsgestureend3")>]
            member __.onmsgestureend with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsgesturetap)"); CompiledName("onmsgesturetap3")>]
            member __.onmsgesturetap with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerout)"); CompiledName("onmspointerout3")>]
            member __.onmspointerout with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msAnimationStartTime)"); CompiledName("msAnimationStartTime1")>]
            member __.msAnimationStartTime with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.applicationCache)"); CompiledName("applicationCache1")>]
            member __.applicationCache with get() : ApplicationCache = failwith "never" and set (v : ApplicationCache) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmsinertiastart)"); CompiledName("onmsinertiastart3")>]
            member __.onmsinertiastart with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerover)"); CompiledName("onmspointerover3")>]
            member __.onmspointerover with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpopstate)"); CompiledName("onpopstate2")>]
            member __.onpopstate with get() : System.Func<PopStateEvent, obj> = failwith "never" and set (v : System.Func<PopStateEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerup)"); CompiledName("onmspointerup3")>]
            member __.onmspointerup with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpageshow)"); CompiledName("onpageshow3")>]
            member __.onpageshow with get() : System.Func<PageTransitionEvent, obj> = failwith "never" and set (v : System.Func<PageTransitionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondevicemotion)"); CompiledName("ondevicemotion1")>]
            member __.ondevicemotion with get() : System.Func<DeviceMotionEvent, obj> = failwith "never" and set (v : System.Func<DeviceMotionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.devicePixelRatio)"); CompiledName("devicePixelRatio1")>]
            member __.devicePixelRatio with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msCrypto)"); CompiledName("msCrypto1")>]
            member __.msCrypto with get() : Crypto = failwith "never" and set (v : Crypto) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ondeviceorientation)"); CompiledName("ondeviceorientation1")>]
            member __.ondeviceorientation with get() : System.Func<DeviceOrientationEvent, obj> = failwith "never" and set (v : System.Func<DeviceOrientationEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.doNotTrack)"); CompiledName("doNotTrack1")>]
            member __.doNotTrack with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerenter)"); CompiledName("onmspointerenter3")>]
            member __.onmspointerenter with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onpagehide)"); CompiledName("onpagehide3")>]
            member __.onpagehide with get() : System.Func<PageTransitionEvent, obj> = failwith "never" and set (v : System.Func<PageTransitionEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onmspointerleave)"); CompiledName("onmspointerleave3")>]
            member __.onmspointerleave with get() : System.Func<obj, obj> = failwith "never" and set (v : System.Func<obj, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.alert({args}))"); CompiledName("alert1")>]
            member __.alert(?message : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scroll({args}))"); CompiledName("scroll2")>]
            member __.scroll(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.focus())"); CompiledName("focus3")>]
            member __.focus() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollTo({args}))"); CompiledName("scrollTo1")>]
            member __.scrollTo(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.print())"); CompiledName("print1")>]
            member __.print() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.prompt({args}))"); CompiledName("prompt2")>]
            member __.prompt(?message : string, ?_default : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.toString())"); CompiledName("toString20")>]
            member __.toString() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.open({args}))"); CompiledName("_open3")>]
            member __._open(?url : string, ?target : string, ?features : string, ?replace : bool) : Window = failwith "never"
            [<FunScript.JSEmitInline("({0}.scrollBy({args}))"); CompiledName("scrollBy1")>]
            member __.scrollBy(?x : float, ?y : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.confirm({args}))"); CompiledName("confirm1")>]
            member __.confirm(?message : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.close())"); CompiledName("close7")>]
            member __.close() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.postMessage({args}))"); CompiledName("postMessage3")>]
            member __.postMessage(message : obj, targetOrigin : string, ?ports : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.showModalDialog({args}))"); CompiledName("showModalDialog1")>]
            member __.showModalDialog(?url : string, ?argument : obj, ?options : obj) : obj = failwith "never"
            [<FunScript.JSEmitInline("({0}.blur())"); CompiledName("blur2")>]
            member __.blur() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getSelection())"); CompiledName("getSelection2")>]
            member __.getSelection() : Selection = failwith "never"
            [<FunScript.JSEmitInline("({0}.getComputedStyle({args}))"); CompiledName("getComputedStyle2")>]
            member __.getComputedStyle(elt : Element, ?pseudoElt : string) : CSSStyleDeclaration = failwith "never"
            [<FunScript.JSEmitInline("({0}.msCancelRequestAnimationFrame({args}))"); CompiledName("msCancelRequestAnimationFrame1")>]
            member __.msCancelRequestAnimationFrame(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.matchMedia({args}))"); CompiledName("matchMedia1")>]
            member __.matchMedia(mediaQuery : string) : MediaQueryList = failwith "never"
            [<FunScript.JSEmitInline("({0}.cancelAnimationFrame({args}))"); CompiledName("cancelAnimationFrame1")>]
            member __.cancelAnimationFrame(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msIsStaticHTML({args}))"); CompiledName("msIsStaticHTML1")>]
            member __.msIsStaticHTML(html : string) : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.msMatchMedia({args}))"); CompiledName("msMatchMedia1")>]
            member __.msMatchMedia(mediaQuery : string) : MediaQueryList = failwith "never"
            [<FunScript.JSEmitInline("({0}.requestAnimationFrame({args}))"); CompiledName("requestAnimationFrame1")>]
            member __.requestAnimationFrame(callback : FrameRequestCallbackDelegate) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.msRequestAnimationFrame({args}))"); CompiledName("msRequestAnimationFrame1")>]
            member __.msRequestAnimationFrame(callback : FrameRequestCallbackDelegate) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseleave\", {args})"); CompiledName("addEventListener1411")>]
            member __.addEventListener_mouseleave(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseenter\", {args})"); CompiledName("addEventListener1412")>]
            member __.addEventListener_mouseenter(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"help\", {args})"); CompiledName("addEventListener1413")>]
            member __.addEventListener_help(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusout\", {args})"); CompiledName("addEventListener1414")>]
            member __.addEventListener_focusout(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focusin\", {args})"); CompiledName("addEventListener1415")>]
            member __.addEventListener_focusin(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerenter\", {args})"); CompiledName("addEventListener1416")>]
            member __.addEventListener_pointerenter(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerout\", {args})"); CompiledName("addEventListener1417")>]
            member __.addEventListener_pointerout(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerdown\", {args})"); CompiledName("addEventListener1418")>]
            member __.addEventListener_pointerdown(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerup\", {args})"); CompiledName("addEventListener1419")>]
            member __.addEventListener_pointerup(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointercancel\", {args})"); CompiledName("addEventListener1420")>]
            member __.addEventListener_pointercancel(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerover\", {args})"); CompiledName("addEventListener1421")>]
            member __.addEventListener_pointerover(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointermove\", {args})"); CompiledName("addEventListener1422")>]
            member __.addEventListener_pointermove(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pointerleave\", {args})"); CompiledName("addEventListener1423")>]
            member __.addEventListener_pointerleave(listener : System.Func<PointerEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragend\", {args})"); CompiledName("addEventListener1424")>]
            member __.addEventListener_dragend(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keydown\", {args})"); CompiledName("addEventListener1425")>]
            member __.addEventListener_keydown(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragover\", {args})"); CompiledName("addEventListener1426")>]
            member __.addEventListener_dragover(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keyup\", {args})"); CompiledName("addEventListener1427")>]
            member __.addEventListener_keyup(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"reset\", {args})"); CompiledName("addEventListener1428")>]
            member __.addEventListener_reset(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseup\", {args})"); CompiledName("addEventListener1429")>]
            member __.addEventListener_mouseup(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragstart\", {args})"); CompiledName("addEventListener1430")>]
            member __.addEventListener_dragstart(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drag\", {args})"); CompiledName("addEventListener1431")>]
            member __.addEventListener_drag(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseover\", {args})"); CompiledName("addEventListener1432")>]
            member __.addEventListener_mouseover(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragleave\", {args})"); CompiledName("addEventListener1433")>]
            member __.addEventListener_dragleave(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"afterprint\", {args})"); CompiledName("addEventListener1434")>]
            member __.addEventListener_afterprint(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pause\", {args})"); CompiledName("addEventListener1435")>]
            member __.addEventListener_pause(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeprint\", {args})"); CompiledName("addEventListener1436")>]
            member __.addEventListener_beforeprint(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousedown\", {args})"); CompiledName("addEventListener1437")>]
            member __.addEventListener_mousedown(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeked\", {args})"); CompiledName("addEventListener1438")>]
            member __.addEventListener_seeked(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"click\", {args})"); CompiledName("addEventListener1439")>]
            member __.addEventListener_click(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"waiting\", {args})"); CompiledName("addEventListener1440")>]
            member __.addEventListener_waiting(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"online\", {args})"); CompiledName("addEventListener1441")>]
            member __.addEventListener_online(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"durationchange\", {args})"); CompiledName("addEventListener1442")>]
            member __.addEventListener_durationchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"blur\", {args})"); CompiledName("addEventListener1443")>]
            member __.addEventListener_blur(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"emptied\", {args})"); CompiledName("addEventListener1444")>]
            member __.addEventListener_emptied(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"seeking\", {args})"); CompiledName("addEventListener1445")>]
            member __.addEventListener_seeking(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplay\", {args})"); CompiledName("addEventListener1446")>]
            member __.addEventListener_canplay(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"stalled\", {args})"); CompiledName("addEventListener1447")>]
            member __.addEventListener_stalled(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousemove\", {args})"); CompiledName("addEventListener1448")>]
            member __.addEventListener_mousemove(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"offline\", {args})"); CompiledName("addEventListener1449")>]
            member __.addEventListener_offline(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"beforeunload\", {args})"); CompiledName("addEventListener1450")>]
            member __.addEventListener_beforeunload(listener : System.Func<BeforeUnloadEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ratechange\", {args})"); CompiledName("addEventListener1451")>]
            member __.addEventListener_ratechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"storage\", {args})"); CompiledName("addEventListener1452")>]
            member __.addEventListener_storage(listener : System.Func<StorageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener1453")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dragenter\", {args})"); CompiledName("addEventListener1454")>]
            member __.addEventListener_dragenter(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"submit\", {args})"); CompiledName("addEventListener1455")>]
            member __.addEventListener_submit(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener1456")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"dblclick\", {args})"); CompiledName("addEventListener1457")>]
            member __.addEventListener_dblclick(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"contextmenu\", {args})"); CompiledName("addEventListener1458")>]
            member __.addEventListener_contextmenu(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"change\", {args})"); CompiledName("addEventListener1459")>]
            member __.addEventListener_change(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadedmetadata\", {args})"); CompiledName("addEventListener1460")>]
            member __.addEventListener_loadedmetadata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"play\", {args})"); CompiledName("addEventListener1461")>]
            member __.addEventListener_play(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"playing\", {args})"); CompiledName("addEventListener1462")>]
            member __.addEventListener_playing(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"canplaythrough\", {args})"); CompiledName("addEventListener1463")>]
            member __.addEventListener_canplaythrough(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1464")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener1465")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"keypress\", {args})"); CompiledName("addEventListener1466")>]
            member __.addEventListener_keypress(listener : System.Func<KeyboardEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadeddata\", {args})"); CompiledName("addEventListener1467")>]
            member __.addEventListener_loadeddata(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"suspend\", {args})"); CompiledName("addEventListener1468")>]
            member __.addEventListener_suspend(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"focus\", {args})"); CompiledName("addEventListener1469")>]
            member __.addEventListener_focus(listener : System.Func<FocusEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"message\", {args})"); CompiledName("addEventListener1470")>]
            member __.addEventListener_message(listener : System.Func<MessageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeupdate\", {args})"); CompiledName("addEventListener1471")>]
            member __.addEventListener_timeupdate(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"resize\", {args})"); CompiledName("addEventListener1472")>]
            member __.addEventListener_resize(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"select\", {args})"); CompiledName("addEventListener1473")>]
            member __.addEventListener_select(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"drop\", {args})"); CompiledName("addEventListener1474")>]
            member __.addEventListener_drop(listener : System.Func<DragEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mouseout\", {args})"); CompiledName("addEventListener1475")>]
            member __.addEventListener_mouseout(listener : System.Func<MouseEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"ended\", {args})"); CompiledName("addEventListener1476")>]
            member __.addEventListener_ended(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"hashchange\", {args})"); CompiledName("addEventListener1477")>]
            member __.addEventListener_hashchange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"unload\", {args})"); CompiledName("addEventListener1478")>]
            member __.addEventListener_unload(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"scroll\", {args})"); CompiledName("addEventListener1479")>]
            member __.addEventListener_scroll(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mousewheel\", {args})"); CompiledName("addEventListener1480")>]
            member __.addEventListener_mousewheel(listener : System.Func<MouseWheelEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1481")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"volumechange\", {args})"); CompiledName("addEventListener1482")>]
            member __.addEventListener_volumechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"input\", {args})"); CompiledName("addEventListener1483")>]
            member __.addEventListener_input(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerdown\", {args})"); CompiledName("addEventListener1484")>]
            member __.addEventListener_mspointerdown(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturedoubletap\", {args})"); CompiledName("addEventListener1485")>]
            member __.addEventListener_msgesturedoubletap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerhover\", {args})"); CompiledName("addEventListener1486")>]
            member __.addEventListener_mspointerhover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturehold\", {args})"); CompiledName("addEventListener1487")>]
            member __.addEventListener_msgesturehold(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointermove\", {args})"); CompiledName("addEventListener1488")>]
            member __.addEventListener_mspointermove(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturechange\", {args})"); CompiledName("addEventListener1489")>]
            member __.addEventListener_msgesturechange(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturestart\", {args})"); CompiledName("addEventListener1490")>]
            member __.addEventListener_msgesturestart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointercancel\", {args})"); CompiledName("addEventListener1491")>]
            member __.addEventListener_mspointercancel(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgestureend\", {args})"); CompiledName("addEventListener1492")>]
            member __.addEventListener_msgestureend(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msgesturetap\", {args})"); CompiledName("addEventListener1493")>]
            member __.addEventListener_msgesturetap(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerout\", {args})"); CompiledName("addEventListener1494")>]
            member __.addEventListener_mspointerout(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"msinertiastart\", {args})"); CompiledName("addEventListener1495")>]
            member __.addEventListener_msinertiastart(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerover\", {args})"); CompiledName("addEventListener1496")>]
            member __.addEventListener_mspointerover(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"popstate\", {args})"); CompiledName("addEventListener1497")>]
            member __.addEventListener_popstate(listener : System.Func<PopStateEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerup\", {args})"); CompiledName("addEventListener1498")>]
            member __.addEventListener_mspointerup(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pageshow\", {args})"); CompiledName("addEventListener1499")>]
            member __.addEventListener_pageshow(listener : System.Func<PageTransitionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"devicemotion\", {args})"); CompiledName("addEventListener1500")>]
            member __.addEventListener_devicemotion(listener : System.Func<DeviceMotionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"deviceorientation\", {args})"); CompiledName("addEventListener1501")>]
            member __.addEventListener_deviceorientation(listener : System.Func<DeviceOrientationEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerenter\", {args})"); CompiledName("addEventListener1502")>]
            member __.addEventListener_mspointerenter(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"pagehide\", {args})"); CompiledName("addEventListener1503")>]
            member __.addEventListener_pagehide(listener : System.Func<PageTransitionEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"mspointerleave\", {args})"); CompiledName("addEventListener1504")>]
            member __.addEventListener_mspointerleave(listener : System.Func<obj, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1505")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type WindowBase64 with 

            [<FunScript.JSEmitInline("({0}.btoa({args}))"); CompiledName("btoa1")>]
            member __.btoa(rawString : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.atob({args}))"); CompiledName("atob1")>]
            member __.atob(encodedString : string) : string = failwith "never"




    type WindowConsole with 

            [<FunScript.JSEmitInline("({0}.console)"); CompiledName("console1")>]
            member __.console with get() : Console = failwith "never" and set (v : Console) : unit = failwith "never"




    type WindowLocalStorage with 

            [<FunScript.JSEmitInline("({0}.localStorage)"); CompiledName("localStorage1")>]
            member __.localStorage with get() : Storage = failwith "never" and set (v : Storage) : unit = failwith "never"




    type WindowModal with 

            [<FunScript.JSEmitInline("({0}.dialogArguments)"); CompiledName("dialogArguments")>]
            member __.dialogArguments with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.returnValue)"); CompiledName("returnValue2")>]
            member __.returnValue with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"




    type WindowSessionStorage with 

            [<FunScript.JSEmitInline("({0}.sessionStorage)"); CompiledName("sessionStorage1")>]
            member __.sessionStorage with get() : Storage = failwith "never" and set (v : Storage) : unit = failwith "never"




    type WindowTimers with 

            [<FunScript.JSEmitInline("({0}.clearTimeout({args}))"); CompiledName("clearTimeout1")>]
            member __.clearTimeout(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setTimeout({args}))"); CompiledName("setTimeout2")>]
            member __.setTimeout(handler : obj, ?timeout : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setTimeout({args}))"); CompiledName("setTimeout3")>]
            member __.setTimeout(handler : obj, timeout : obj, [<System.ParamArray>] args : array<obj>) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearInterval({args}))"); CompiledName("clearInterval1")>]
            member __.clearInterval(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setInterval({args}))"); CompiledName("setInterval2")>]
            member __.setInterval(handler : obj, ?timeout : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setInterval({args}))"); CompiledName("setInterval3")>]
            member __.setInterval(handler : obj, timeout : obj, [<System.ParamArray>] args : array<obj>) : float = failwith "never"




    type WindowTimersExtension with 

            [<FunScript.JSEmitInline("({0}.msSetImmediate({args}))"); CompiledName("msSetImmediate2")>]
            member __.msSetImmediate(expression : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.msSetImmediate({args}))"); CompiledName("msSetImmediate3")>]
            member __.msSetImmediateOverload2(expression : obj, [<System.ParamArray>] args : array<obj>) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.clearImmediate({args}))"); CompiledName("clearImmediate1")>]
            member __.clearImmediate(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msClearImmediate({args}))"); CompiledName("msClearImmediate1")>]
            member __.msClearImmediate(handle : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.setImmediate({args}))"); CompiledName("setImmediate2")>]
            member __.setImmediate(expression : obj) : float = failwith "never"
            [<FunScript.JSEmitInline("({0}.setImmediate({args}))"); CompiledName("setImmediate3")>]
            member __.setImmediateOverload2(expression : obj, [<System.ParamArray>] args : array<obj>) : float = failwith "never"




    type Worker with 

            [<FunScript.JSEmitInline("({0}.onmessage)"); CompiledName("onmessage6")>]
            member __.onmessage with get() : System.Func<MessageEvent, obj> = failwith "never" and set (v : System.Func<MessageEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.postMessage({args}))"); CompiledName("postMessage4")>]
            member __.postMessage(message : obj, ?ports : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.terminate())"); CompiledName("terminate")>]
            member __.terminate() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1506")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"message\", {args})"); CompiledName("addEventListener1507")>]
            member __.addEventListener_message(listener : System.Func<MessageEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1508")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type XDomainRequest with 

            [<FunScript.JSEmitInline("({0}.timeout)"); CompiledName("timeout1")>]
            member __.timeout with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror18")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload11")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress7")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ontimeout)"); CompiledName("ontimeout")>]
            member __.ontimeout with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseText)"); CompiledName("responseText")>]
            member __.responseText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.contentType)"); CompiledName("contentType")>]
            member __.contentType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.open({args}))"); CompiledName("_open4")>]
            member __._open(_method : string, url : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abort())"); CompiledName("abort5")>]
            member __.abort() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.send({args}))"); CompiledName("send1")>]
            member __.send(?data : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1509")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1510")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener1511")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeout\", {args})"); CompiledName("addEventListener1512")>]
            member __.addEventListener_timeout(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1513")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type XMLHttpRequest with 

            [<FunScript.JSEmitInline("({0}.responseBody)"); CompiledName("responseBody")>]
            member __.responseBody with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.status)"); CompiledName("status7")>]
            member __.status with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.readyState)"); CompiledName("readyState13")>]
            member __.readyState with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseText)"); CompiledName("responseText1")>]
            member __.responseText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseXML)"); CompiledName("responseXML")>]
            member __.responseXML with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ontimeout)"); CompiledName("ontimeout1")>]
            member __.ontimeout with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.statusText)"); CompiledName("statusText")>]
            member __.statusText with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onreadystatechange)"); CompiledName("onreadystatechange5")>]
            member __.onreadystatechange with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.timeout)"); CompiledName("timeout2")>]
            member __.timeout with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload12")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.response)"); CompiledName("response")>]
            member __.response with get() : obj = failwith "never" and set (v : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.withCredentials)"); CompiledName("withCredentials")>]
            member __.withCredentials with get() : bool = failwith "never" and set (v : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress8")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort9")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.responseType)"); CompiledName("responseType")>]
            member __.responseType with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadend)"); CompiledName("onloadend1")>]
            member __.onloadend with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.upload)"); CompiledName("upload")>]
            member __.upload with get() : XMLHttpRequestEventTarget = failwith "never" and set (v : XMLHttpRequestEventTarget) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror19")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadstart)"); CompiledName("onloadstart5")>]
            member __.onloadstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.msCaching)"); CompiledName("msCaching")>]
            member __.msCaching with get() : string = failwith "never" and set (v : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.open({args}))"); CompiledName("_open5")>]
            member __._open(_method : string, url : string, ?_async : bool, ?user : string, ?password : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.send({args}))"); CompiledName("send2")>]
            member __.send(?data : obj) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.abort())"); CompiledName("abort6")>]
            member __.abort() : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getAllResponseHeaders())"); CompiledName("getAllResponseHeaders")>]
            member __.getAllResponseHeaders() : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.setRequestHeader({args}))"); CompiledName("setRequestHeader")>]
            member __.setRequestHeader(header : string, value : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.getResponseHeader({args}))"); CompiledName("getResponseHeader")>]
            member __.getResponseHeader(header : string) : string = failwith "never"
            [<FunScript.JSEmitInline("({0}.msCachingEnabled())"); CompiledName("msCachingEnabled")>]
            member __.msCachingEnabled() : bool = failwith "never"
            [<FunScript.JSEmitInline("({0}.overrideMimeType({args}))"); CompiledName("overrideMimeType")>]
            member __.overrideMimeType(mime : string) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.LOADING)"); CompiledName("LOADING6")>]
            member __.LOADING with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.DONE)"); CompiledName("DONE2")>]
            member __.DONE with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.UNSENT)"); CompiledName("UNSENT1")>]
            member __.UNSENT with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.OPENED)"); CompiledName("OPENED1")>]
            member __.OPENED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.HEADERS_RECEIVED)"); CompiledName("HEADERS_RECEIVED1")>]
            member __.HEADERS_RECEIVED with get() : float = failwith "never" and set (v : float) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeout\", {args})"); CompiledName("addEventListener1514")>]
            member __.addEventListener_timeout(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"readystatechange\", {args})"); CompiledName("addEventListener1515")>]
            member __.addEventListener_readystatechange(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1516")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener1517")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1518")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadend\", {args})"); CompiledName("addEventListener1519")>]
            member __.addEventListener_loadend(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1520")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener1521")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1522")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type XMLHttpRequestEventTarget with 

            [<FunScript.JSEmitInline("({0}.onprogress)"); CompiledName("onprogress9")>]
            member __.onprogress with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onerror)"); CompiledName("onerror20")>]
            member __.onerror with get() : System.Func<ErrorEvent, obj> = failwith "never" and set (v : System.Func<ErrorEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onload)"); CompiledName("onload13")>]
            member __.onload with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.ontimeout)"); CompiledName("ontimeout2")>]
            member __.ontimeout with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onabort)"); CompiledName("onabort10")>]
            member __.onabort with get() : System.Func<UIEvent, obj> = failwith "never" and set (v : System.Func<UIEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadstart)"); CompiledName("onloadstart6")>]
            member __.onloadstart with get() : System.Func<Event, obj> = failwith "never" and set (v : System.Func<Event, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.onloadend)"); CompiledName("onloadend2")>]
            member __.onloadend with get() : System.Func<ProgressEvent, obj> = failwith "never" and set (v : System.Func<ProgressEvent, obj>) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"progress\", {args})"); CompiledName("addEventListener1523")>]
            member __.addEventListener_progress(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"error\", {args})"); CompiledName("addEventListener1524")>]
            member __.addEventListener_error(listener : System.Func<ErrorEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"load\", {args})"); CompiledName("addEventListener1525")>]
            member __.addEventListener_load(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"timeout\", {args})"); CompiledName("addEventListener1526")>]
            member __.addEventListener_timeout(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"abort\", {args})"); CompiledName("addEventListener1527")>]
            member __.addEventListener_abort(listener : System.Func<UIEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadstart\", {args})"); CompiledName("addEventListener1528")>]
            member __.addEventListener_loadstart(listener : System.Func<Event, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener(\"loadend\", {args})"); CompiledName("addEventListener1529")>]
            member __.addEventListener_loadend(listener : System.Func<ProgressEvent, obj>, ?useCapture : bool) : unit = failwith "never"
            [<FunScript.JSEmitInline("({0}.addEventListener({args}))"); CompiledName("addEventListener1530")>]
            member __.addEventListener(_type : string, listener : EventListenerDelegate, ?useCapture : bool) : unit = failwith "never"




    type XMLSerializer with 

            [<FunScript.JSEmitInline("({0}.serializeToString({args}))"); CompiledName("serializeToString")>]
            member __.serializeToString(target : Node) : string = failwith "never"
